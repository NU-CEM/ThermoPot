------------------------------------------------------------
          Invoking FHI-aims ...

          When using FHI-aims, please cite the following reference:

            Volker Blum, Ralf Gehrke, Felix Hanke, Paula Havu,
            Ville Havu, Xinguo Ren, Karsten Reuter, and Matthias Scheffler,
            'Ab Initio Molecular Simulations with Numeric Atom-Centered Orbitals',
            Computer Physics Communications 180, 2175-2196 (2009)

          In addition, many other developments in FHI-aims are likely important for
          your particular application. A partial list of references is given at the end of
          this file. Thank you for giving credit to the authors of these developments.

          For any questions about FHI-aims, please visit our slack channel at

            https://fhi-aims.slack.com

          and our main development and support site at

            https://aims-git.rz-berlin.mpg.de .

          The latter site, in particular, has a wiki to collect information, as well
          as an issue tracker to log discussions, suggest improvements, and report issues
          or bugs. https://aims-git.rz-berlin.mpg.de is also the main development site
          of the project and all new and updated code versions can be obtained there.
          Please send an email to aims-coordinators@fhi-berlin.mpg.de and we will add
          you to these sites. They are for you and everyone is welcome there.

------------------------------------------------------------



  Date     :  20220728, Time     :  132802.070
  Time zero on CPU 1             :   0.273202200000000E+01  s.
  Internal wall clock time zero  :           428246882.070  s.

  FHI-aims created a unique identifier for this run for later identification
  aims_uuid : 3046E636-D797-42F9-A31C-CD9C75BF1565

  Build configuration of the current instance of FHI-aims
  -------------------------------------------------------
  FHI-aims version      : 220609
  Commit number         : 932a0c519
  CMake host system     : Linux-4.12.14-197.78_9.1.64-cray_shasta_c
  CMake version         : 3.10.2
  Fortran compiler      : /opt/cray/pe/craype/2.7.6/bin/ftn (GNU) version 10.2.0
  Fortran compiler flags: -O2 -fallow-argument-mismatch -ffree-line-length-none
  C compiler            : /opt/cray/pe/craype/2.7.6/bin/cc (GNU) version 10.2.0
  C compiler flags      : -O2
  Using MPI
  Using ScaLAPACK
  Using LibXC
  Using i-PI
  Using RLSY
  Linking against:

  Using      512 parallel tasks.
  Task        0 on host nid006135 reporting.
  Task        1 on host nid006135 reporting.
  Task        2 on host nid006135 reporting.
  Task        3 on host nid006135 reporting.
  Task        4 on host nid006135 reporting.
  Task        5 on host nid006135 reporting.
  Task        6 on host nid006135 reporting.
  Task        7 on host nid006135 reporting.
  Task        8 on host nid006135 reporting.
  Task        9 on host nid006135 reporting.
  Task       10 on host nid006135 reporting.
  Task       11 on host nid006135 reporting.
  Task       12 on host nid006135 reporting.
  Task       13 on host nid006135 reporting.
  Task       14 on host nid006135 reporting.
  Task       15 on host nid006135 reporting.
  Task       16 on host nid006135 reporting.
  Task       17 on host nid006135 reporting.
  Task       18 on host nid006135 reporting.
  Task       19 on host nid006135 reporting.
  Task       20 on host nid006135 reporting.
  Task       21 on host nid006135 reporting.
  Task       22 on host nid006135 reporting.
  Task       23 on host nid006135 reporting.
  Task       24 on host nid006135 reporting.
  Task       25 on host nid006135 reporting.
  Task       26 on host nid006135 reporting.
  Task       27 on host nid006135 reporting.
  Task       28 on host nid006135 reporting.
  Task       29 on host nid006135 reporting.
  Task       30 on host nid006135 reporting.
  Task       31 on host nid006135 reporting.
  Task       32 on host nid006135 reporting.
  Task       33 on host nid006135 reporting.
  Task       34 on host nid006135 reporting.
  Task       35 on host nid006135 reporting.
  Task       36 on host nid006135 reporting.
  Task       37 on host nid006135 reporting.
  Task       38 on host nid006135 reporting.
  Task       39 on host nid006135 reporting.
  Task       40 on host nid006135 reporting.
  Task       41 on host nid006135 reporting.
  Task       42 on host nid006135 reporting.
  Task       43 on host nid006135 reporting.
  Task       44 on host nid006135 reporting.
  Task       45 on host nid006135 reporting.
  Task       46 on host nid006135 reporting.
  Task       47 on host nid006135 reporting.
  Task       48 on host nid006135 reporting.
  Task       49 on host nid006135 reporting.
  Task       50 on host nid006135 reporting.
  Task       51 on host nid006135 reporting.
  Task       52 on host nid006135 reporting.
  Task       53 on host nid006135 reporting.
  Task       54 on host nid006135 reporting.
  Task       55 on host nid006135 reporting.
  Task       56 on host nid006135 reporting.
  Task       57 on host nid006135 reporting.
  Task       58 on host nid006135 reporting.
  Task       59 on host nid006135 reporting.
  Task       60 on host nid006135 reporting.
  Task       61 on host nid006135 reporting.
  Task       62 on host nid006135 reporting.
  Task       63 on host nid006135 reporting.
  Task       64 on host nid006216 reporting.
  Task       65 on host nid006216 reporting.
  Task       66 on host nid006216 reporting.
  Task       67 on host nid006216 reporting.
  Task       68 on host nid006216 reporting.
  Task       69 on host nid006216 reporting.
  Task       70 on host nid006216 reporting.
  Task       71 on host nid006216 reporting.
  Task       72 on host nid006216 reporting.
  Task       73 on host nid006216 reporting.
  Task       74 on host nid006216 reporting.
  Task       75 on host nid006216 reporting.
  Task       76 on host nid006216 reporting.
  Task       77 on host nid006216 reporting.
  Task       78 on host nid006216 reporting.
  Task       79 on host nid006216 reporting.
  Task       80 on host nid006216 reporting.
  Task       81 on host nid006216 reporting.
  Task       82 on host nid006216 reporting.
  Task       83 on host nid006216 reporting.
  Task       84 on host nid006216 reporting.
  Task       85 on host nid006216 reporting.
  Task       86 on host nid006216 reporting.
  Task       87 on host nid006216 reporting.
  Task       88 on host nid006216 reporting.
  Task       89 on host nid006216 reporting.
  Task       90 on host nid006216 reporting.
  Task       91 on host nid006216 reporting.
  Task       92 on host nid006216 reporting.
  Task       93 on host nid006216 reporting.
  Task       94 on host nid006216 reporting.
  Task       95 on host nid006216 reporting.
  Task       96 on host nid006216 reporting.
  Task       97 on host nid006216 reporting.
  Task       98 on host nid006216 reporting.
  Task       99 on host nid006216 reporting.
  Task      100 on host nid006216 reporting.
  Task      101 on host nid006216 reporting.
  Task      102 on host nid006216 reporting.
  Task      103 on host nid006216 reporting.
  Task      104 on host nid006216 reporting.
  Task      105 on host nid006216 reporting.
  Task      106 on host nid006216 reporting.
  Task      107 on host nid006216 reporting.
  Task      108 on host nid006216 reporting.
  Task      109 on host nid006216 reporting.
  Task      110 on host nid006216 reporting.
  Task      111 on host nid006216 reporting.
  Task      112 on host nid006216 reporting.
  Task      113 on host nid006216 reporting.
  Task      114 on host nid006216 reporting.
  Task      115 on host nid006216 reporting.
  Task      116 on host nid006216 reporting.
  Task      117 on host nid006216 reporting.
  Task      118 on host nid006216 reporting.
  Task      119 on host nid006216 reporting.
  Task      120 on host nid006216 reporting.
  Task      121 on host nid006216 reporting.
  Task      122 on host nid006216 reporting.
  Task      123 on host nid006216 reporting.
  Task      124 on host nid006216 reporting.
  Task      125 on host nid006216 reporting.
  Task      126 on host nid006216 reporting.
  Task      127 on host nid006216 reporting.
  Task      128 on host nid006217 reporting.
  Task      129 on host nid006217 reporting.
  Task      130 on host nid006217 reporting.
  Task      131 on host nid006217 reporting.
  Task      132 on host nid006217 reporting.
  Task      133 on host nid006217 reporting.
  Task      134 on host nid006217 reporting.
  Task      135 on host nid006217 reporting.
  Task      136 on host nid006217 reporting.
  Task      137 on host nid006217 reporting.
  Task      138 on host nid006217 reporting.
  Task      139 on host nid006217 reporting.
  Task      140 on host nid006217 reporting.
  Task      141 on host nid006217 reporting.
  Task      142 on host nid006217 reporting.
  Task      143 on host nid006217 reporting.
  Task      144 on host nid006217 reporting.
  Task      145 on host nid006217 reporting.
  Task      146 on host nid006217 reporting.
  Task      147 on host nid006217 reporting.
  Task      148 on host nid006217 reporting.
  Task      149 on host nid006217 reporting.
  Task      150 on host nid006217 reporting.
  Task      151 on host nid006217 reporting.
  Task      152 on host nid006217 reporting.
  Task      153 on host nid006217 reporting.
  Task      154 on host nid006217 reporting.
  Task      155 on host nid006217 reporting.
  Task      156 on host nid006217 reporting.
  Task      157 on host nid006217 reporting.
  Task      158 on host nid006217 reporting.
  Task      159 on host nid006217 reporting.
  Task      160 on host nid006217 reporting.
  Task      161 on host nid006217 reporting.
  Task      162 on host nid006217 reporting.
  Task      163 on host nid006217 reporting.
  Task      164 on host nid006217 reporting.
  Task      165 on host nid006217 reporting.
  Task      166 on host nid006217 reporting.
  Task      167 on host nid006217 reporting.
  Task      168 on host nid006217 reporting.
  Task      169 on host nid006217 reporting.
  Task      170 on host nid006217 reporting.
  Task      171 on host nid006217 reporting.
  Task      172 on host nid006217 reporting.
  Task      173 on host nid006217 reporting.
  Task      174 on host nid006217 reporting.
  Task      175 on host nid006217 reporting.
  Task      176 on host nid006217 reporting.
  Task      177 on host nid006217 reporting.
  Task      178 on host nid006217 reporting.
  Task      179 on host nid006217 reporting.
  Task      180 on host nid006217 reporting.
  Task      181 on host nid006217 reporting.
  Task      182 on host nid006217 reporting.
  Task      183 on host nid006217 reporting.
  Task      184 on host nid006217 reporting.
  Task      185 on host nid006217 reporting.
  Task      186 on host nid006217 reporting.
  Task      187 on host nid006217 reporting.
  Task      188 on host nid006217 reporting.
  Task      189 on host nid006217 reporting.
  Task      190 on host nid006217 reporting.
  Task      191 on host nid006217 reporting.
  Task      192 on host nid006218 reporting.
  Task      193 on host nid006218 reporting.
  Task      194 on host nid006218 reporting.
  Task      195 on host nid006218 reporting.
  Task      196 on host nid006218 reporting.
  Task      197 on host nid006218 reporting.
  Task      198 on host nid006218 reporting.
  Task      199 on host nid006218 reporting.
  Task      200 on host nid006218 reporting.
  Task      201 on host nid006218 reporting.
  Task      202 on host nid006218 reporting.
  Task      203 on host nid006218 reporting.
  Task      204 on host nid006218 reporting.
  Task      205 on host nid006218 reporting.
  Task      206 on host nid006218 reporting.
  Task      207 on host nid006218 reporting.
  Task      208 on host nid006218 reporting.
  Task      209 on host nid006218 reporting.
  Task      210 on host nid006218 reporting.
  Task      211 on host nid006218 reporting.
  Task      212 on host nid006218 reporting.
  Task      213 on host nid006218 reporting.
  Task      214 on host nid006218 reporting.
  Task      215 on host nid006218 reporting.
  Task      216 on host nid006218 reporting.
  Task      217 on host nid006218 reporting.
  Task      218 on host nid006218 reporting.
  Task      219 on host nid006218 reporting.
  Task      220 on host nid006218 reporting.
  Task      221 on host nid006218 reporting.
  Task      222 on host nid006218 reporting.
  Task      223 on host nid006218 reporting.
  Task      224 on host nid006218 reporting.
  Task      225 on host nid006218 reporting.
  Task      226 on host nid006218 reporting.
  Task      227 on host nid006218 reporting.
  Task      228 on host nid006218 reporting.
  Task      229 on host nid006218 reporting.
  Task      230 on host nid006218 reporting.
  Task      231 on host nid006218 reporting.
  Task      232 on host nid006218 reporting.
  Task      233 on host nid006218 reporting.
  Task      234 on host nid006218 reporting.
  Task      235 on host nid006218 reporting.
  Task      236 on host nid006218 reporting.
  Task      237 on host nid006218 reporting.
  Task      238 on host nid006218 reporting.
  Task      239 on host nid006218 reporting.
  Task      240 on host nid006218 reporting.
  Task      241 on host nid006218 reporting.
  Task      242 on host nid006218 reporting.
  Task      243 on host nid006218 reporting.
  Task      244 on host nid006218 reporting.
  Task      245 on host nid006218 reporting.
  Task      246 on host nid006218 reporting.
  Task      247 on host nid006218 reporting.
  Task      248 on host nid006218 reporting.
  Task      249 on host nid006218 reporting.
  Task      250 on host nid006218 reporting.
  Task      251 on host nid006218 reporting.
  Task      252 on host nid006218 reporting.
  Task      253 on host nid006218 reporting.
  Task      254 on host nid006218 reporting.
  Task      255 on host nid006218 reporting.
  Task      256 on host nid006219 reporting.
  Task      257 on host nid006219 reporting.
  Task      258 on host nid006219 reporting.
  Task      259 on host nid006219 reporting.
  Task      260 on host nid006219 reporting.
  Task      261 on host nid006219 reporting.
  Task      262 on host nid006219 reporting.
  Task      263 on host nid006219 reporting.
  Task      264 on host nid006219 reporting.
  Task      265 on host nid006219 reporting.
  Task      266 on host nid006219 reporting.
  Task      267 on host nid006219 reporting.
  Task      268 on host nid006219 reporting.
  Task      269 on host nid006219 reporting.
  Task      270 on host nid006219 reporting.
  Task      271 on host nid006219 reporting.
  Task      272 on host nid006219 reporting.
  Task      273 on host nid006219 reporting.
  Task      274 on host nid006219 reporting.
  Task      275 on host nid006219 reporting.
  Task      276 on host nid006219 reporting.
  Task      277 on host nid006219 reporting.
  Task      278 on host nid006219 reporting.
  Task      279 on host nid006219 reporting.
  Task      280 on host nid006219 reporting.
  Task      281 on host nid006219 reporting.
  Task      282 on host nid006219 reporting.
  Task      283 on host nid006219 reporting.
  Task      284 on host nid006219 reporting.
  Task      285 on host nid006219 reporting.
  Task      286 on host nid006219 reporting.
  Task      287 on host nid006219 reporting.
  Task      288 on host nid006219 reporting.
  Task      289 on host nid006219 reporting.
  Task      290 on host nid006219 reporting.
  Task      291 on host nid006219 reporting.
  Task      292 on host nid006219 reporting.
  Task      293 on host nid006219 reporting.
  Task      294 on host nid006219 reporting.
  Task      295 on host nid006219 reporting.
  Task      296 on host nid006219 reporting.
  Task      297 on host nid006219 reporting.
  Task      298 on host nid006219 reporting.
  Task      299 on host nid006219 reporting.
  Task      300 on host nid006219 reporting.
  Task      301 on host nid006219 reporting.
  Task      302 on host nid006219 reporting.
  Task      303 on host nid006219 reporting.
  Task      304 on host nid006219 reporting.
  Task      305 on host nid006219 reporting.
  Task      306 on host nid006219 reporting.
  Task      307 on host nid006219 reporting.
  Task      308 on host nid006219 reporting.
  Task      309 on host nid006219 reporting.
  Task      310 on host nid006219 reporting.
  Task      311 on host nid006219 reporting.
  Task      312 on host nid006219 reporting.
  Task      313 on host nid006219 reporting.
  Task      314 on host nid006219 reporting.
  Task      315 on host nid006219 reporting.
  Task      316 on host nid006219 reporting.
  Task      317 on host nid006219 reporting.
  Task      318 on host nid006219 reporting.
  Task      319 on host nid006219 reporting.
  Task      320 on host nid006240 reporting.
  Task      321 on host nid006240 reporting.
  Task      322 on host nid006240 reporting.
  Task      323 on host nid006240 reporting.
  Task      324 on host nid006240 reporting.
  Task      325 on host nid006240 reporting.
  Task      326 on host nid006240 reporting.
  Task      327 on host nid006240 reporting.
  Task      328 on host nid006240 reporting.
  Task      329 on host nid006240 reporting.
  Task      330 on host nid006240 reporting.
  Task      331 on host nid006240 reporting.
  Task      332 on host nid006240 reporting.
  Task      333 on host nid006240 reporting.
  Task      334 on host nid006240 reporting.
  Task      335 on host nid006240 reporting.
  Task      336 on host nid006240 reporting.
  Task      337 on host nid006240 reporting.
  Task      338 on host nid006240 reporting.
  Task      339 on host nid006240 reporting.
  Task      340 on host nid006240 reporting.
  Task      341 on host nid006240 reporting.
  Task      342 on host nid006240 reporting.
  Task      343 on host nid006240 reporting.
  Task      344 on host nid006240 reporting.
  Task      345 on host nid006240 reporting.
  Task      346 on host nid006240 reporting.
  Task      347 on host nid006240 reporting.
  Task      348 on host nid006240 reporting.
  Task      349 on host nid006240 reporting.
  Task      350 on host nid006240 reporting.
  Task      351 on host nid006240 reporting.
  Task      352 on host nid006240 reporting.
  Task      353 on host nid006240 reporting.
  Task      354 on host nid006240 reporting.
  Task      355 on host nid006240 reporting.
  Task      356 on host nid006240 reporting.
  Task      357 on host nid006240 reporting.
  Task      358 on host nid006240 reporting.
  Task      359 on host nid006240 reporting.
  Task      360 on host nid006240 reporting.
  Task      361 on host nid006240 reporting.
  Task      362 on host nid006240 reporting.
  Task      363 on host nid006240 reporting.
  Task      364 on host nid006240 reporting.
  Task      365 on host nid006240 reporting.
  Task      366 on host nid006240 reporting.
  Task      367 on host nid006240 reporting.
  Task      368 on host nid006240 reporting.
  Task      369 on host nid006240 reporting.
  Task      370 on host nid006240 reporting.
  Task      371 on host nid006240 reporting.
  Task      372 on host nid006240 reporting.
  Task      373 on host nid006240 reporting.
  Task      374 on host nid006240 reporting.
  Task      375 on host nid006240 reporting.
  Task      376 on host nid006240 reporting.
  Task      377 on host nid006240 reporting.
  Task      378 on host nid006240 reporting.
  Task      379 on host nid006240 reporting.
  Task      380 on host nid006240 reporting.
  Task      381 on host nid006240 reporting.
  Task      382 on host nid006240 reporting.
  Task      383 on host nid006240 reporting.
  Task      384 on host nid006241 reporting.
  Task      385 on host nid006241 reporting.
  Task      386 on host nid006241 reporting.
  Task      387 on host nid006241 reporting.
  Task      388 on host nid006241 reporting.
  Task      389 on host nid006241 reporting.
  Task      390 on host nid006241 reporting.
  Task      391 on host nid006241 reporting.
  Task      392 on host nid006241 reporting.
  Task      393 on host nid006241 reporting.
  Task      394 on host nid006241 reporting.
  Task      395 on host nid006241 reporting.
  Task      396 on host nid006241 reporting.
  Task      397 on host nid006241 reporting.
  Task      398 on host nid006241 reporting.
  Task      399 on host nid006241 reporting.
  Task      400 on host nid006241 reporting.
  Task      401 on host nid006241 reporting.
  Task      402 on host nid006241 reporting.
  Task      403 on host nid006241 reporting.
  Task      404 on host nid006241 reporting.
  Task      405 on host nid006241 reporting.
  Task      406 on host nid006241 reporting.
  Task      407 on host nid006241 reporting.
  Task      408 on host nid006241 reporting.
  Task      409 on host nid006241 reporting.
  Task      410 on host nid006241 reporting.
  Task      411 on host nid006241 reporting.
  Task      412 on host nid006241 reporting.
  Task      413 on host nid006241 reporting.
  Task      414 on host nid006241 reporting.
  Task      415 on host nid006241 reporting.
  Task      416 on host nid006241 reporting.
  Task      417 on host nid006241 reporting.
  Task      418 on host nid006241 reporting.
  Task      419 on host nid006241 reporting.
  Task      420 on host nid006241 reporting.
  Task      421 on host nid006241 reporting.
  Task      422 on host nid006241 reporting.
  Task      423 on host nid006241 reporting.
  Task      424 on host nid006241 reporting.
  Task      425 on host nid006241 reporting.
  Task      426 on host nid006241 reporting.
  Task      427 on host nid006241 reporting.
  Task      428 on host nid006241 reporting.
  Task      429 on host nid006241 reporting.
  Task      430 on host nid006241 reporting.
  Task      431 on host nid006241 reporting.
  Task      432 on host nid006241 reporting.
  Task      433 on host nid006241 reporting.
  Task      434 on host nid006241 reporting.
  Task      435 on host nid006241 reporting.
  Task      436 on host nid006241 reporting.
  Task      437 on host nid006241 reporting.
  Task      438 on host nid006241 reporting.
  Task      439 on host nid006241 reporting.
  Task      440 on host nid006241 reporting.
  Task      441 on host nid006241 reporting.
  Task      442 on host nid006241 reporting.
  Task      443 on host nid006241 reporting.
  Task      444 on host nid006241 reporting.
  Task      445 on host nid006241 reporting.
  Task      446 on host nid006241 reporting.
  Task      447 on host nid006241 reporting.
  Task      448 on host nid006242 reporting.
  Task      449 on host nid006242 reporting.
  Task      450 on host nid006242 reporting.
  Task      451 on host nid006242 reporting.
  Task      452 on host nid006242 reporting.
  Task      453 on host nid006242 reporting.
  Task      454 on host nid006242 reporting.
  Task      455 on host nid006242 reporting.
  Task      456 on host nid006242 reporting.
  Task      457 on host nid006242 reporting.
  Task      458 on host nid006242 reporting.
  Task      459 on host nid006242 reporting.
  Task      460 on host nid006242 reporting.
  Task      461 on host nid006242 reporting.
  Task      462 on host nid006242 reporting.
  Task      463 on host nid006242 reporting.
  Task      464 on host nid006242 reporting.
  Task      465 on host nid006242 reporting.
  Task      466 on host nid006242 reporting.
  Task      467 on host nid006242 reporting.
  Task      468 on host nid006242 reporting.
  Task      469 on host nid006242 reporting.
  Task      470 on host nid006242 reporting.
  Task      471 on host nid006242 reporting.
  Task      472 on host nid006242 reporting.
  Task      473 on host nid006242 reporting.
  Task      474 on host nid006242 reporting.
  Task      475 on host nid006242 reporting.
  Task      476 on host nid006242 reporting.
  Task      477 on host nid006242 reporting.
  Task      478 on host nid006242 reporting.
  Task      479 on host nid006242 reporting.
  Task      480 on host nid006242 reporting.
  Task      481 on host nid006242 reporting.
  Task      482 on host nid006242 reporting.
  Task      483 on host nid006242 reporting.
  Task      484 on host nid006242 reporting.
  Task      485 on host nid006242 reporting.
  Task      486 on host nid006242 reporting.
  Task      487 on host nid006242 reporting.
  Task      488 on host nid006242 reporting.
  Task      489 on host nid006242 reporting.
  Task      490 on host nid006242 reporting.
  Task      491 on host nid006242 reporting.
  Task      492 on host nid006242 reporting.
  Task      493 on host nid006242 reporting.
  Task      494 on host nid006242 reporting.
  Task      495 on host nid006242 reporting.
  Task      496 on host nid006242 reporting.
  Task      497 on host nid006242 reporting.
  Task      498 on host nid006242 reporting.
  Task      499 on host nid006242 reporting.
  Task      500 on host nid006242 reporting.
  Task      501 on host nid006242 reporting.
  Task      502 on host nid006242 reporting.
  Task      503 on host nid006242 reporting.
  Task      504 on host nid006242 reporting.
  Task      505 on host nid006242 reporting.
  Task      506 on host nid006242 reporting.
  Task      507 on host nid006242 reporting.
  Task      508 on host nid006242 reporting.
  Task      509 on host nid006242 reporting.
  Task      510 on host nid006242 reporting.
  Task      511 on host nid006242 reporting.

  Performing system and environment tests:
  | Environment variable OMP_NUM_THREADS correctly set to 1.
  | Checking for ScaLAPACK...
  | Testing pdtran()...
  | All pdtran() tests passed.

  Obtaining array dimensions for all initial allocations:
  
  -----------------------------------------------------------------------
  Parsing control.in (first pass over file, find array dimensions only).
  The contents of control.in will be repeated verbatim below
  unless switched off by setting 'verbatim_writeout .false.' .
  in the first line of control.in .
  -----------------------------------------------------------------------
  
  xc               pbe
  charge           0.
  spin             none
  relativistic atomic_zora scalar
  k_grid                16 16 12
  sc_accuracy_rho       1E-7
  include_spin_orbit
  output band   0.00000  0.00000  0.00000   0.50000  0.00000  0.00000   58 G  M
   output band   0.50000  0.00000  0.00000   0.33333  0.33333  0.00000   34 M  K
   output band   0.33333  0.33333  0.00000   0.00000  0.00000  0.00000   67 K  G
   output band   0.00000  0.00000  0.00000   0.00000  0.00000  0.50000   31 G  A
   output band   0.00000  0.00000  0.50000   0.50000  0.00000  0.50000   58 A  L
   output band   0.50000  0.00000  0.50000   0.33333  0.33333  0.50000   34 L  H
   output band   0.33333  0.33333  0.50000   0.00000  0.00000  0.50000   67 H  A
   output band   0.50000  0.00000  0.50000   0.50000  0.00000  0.00000   31 L  M
   output band   0.33333  0.33333  0.00000   0.33333  0.33333  0.50000   31 K  H
  
  ################################################################################
  #
  #  FHI-aims code project
  #  Volker Blum, Fritz Haber Institute Berlin, 2009
  #
  #  Suggested "tight" defaults for Ba atom (to be pasted into control.in file)
  #
  #  The onset of the cutoff pot'l WAS set to 8 A by default, because the neutral
  #  Ba atom is a large atom. However, this is very expensive. The radius should be
  #  much smaller in real-world situations, where Ba will be ionic. Please check
  #  and reduce the cutoff radius explicitly.
  #
  #  2015/11/12 : f and g functions from tier2 added to default basis set choice.
  #               These functions make a difference in the "delta test".
  #               Reduced the default cutoff radius to 6AA. The free-atom 6s function
  #               requires more. However, 6AA is already VERY expensive for
  #               any production calculations. In fact, revisit this choice for
  #               ionic systems to see if a smaller cutoff radius will do.
  #
  ################################################################################
    species          Ba
  #     global species definitions
      nucleus        56
      mass           137.327
  #
      l_hartree      6
  #
      cut_pot        6.0  2.0  1.0
      basis_dep_cutoff    1e-4
  #
      radial_base    65  7.0
      radial_multiplier  2
      angular_grids specified
        division   0.6752  110
        division   0.9746  194
        division   1.2241  302
        division   1.3850  434
  #      division   1.4734  590
  #      division   1.6010  770
  #      division   4.8366  974
  #      outer_grid  974
        outer_grid  434
  ################################################################################
  #
  #  Definition of "minimal" basis
  #
  ################################################################################
  #     valence basis states
      valence      6  s   2.
      valence      5  p   6.
      valence      4  d  10.
  #     ion occupancy
      ion_occ      6  s   1.
      ion_occ      5  p   6.
      ion_occ      4  d  10.
  ################################################################################
  #
  #  Suggested additional basis functions. For production calculations,
  #  uncomment them one after another (the most important basis functions are
  #  listed first).
  #
  #  Constructed for dimers: 2.65, 3.00, 3.50, 4.40, 5.50 Ang
  #
  ################################################################################
  #  "First tier" - improvements: -1277.43 meV to -9.16 meV
       ionic 5 d auto
       ionic 4 f auto
       hydro 3 p 2.7
       hydro 4 s 3.3
  #  "Second tier" - improvements: -64.04 (!) meV to -0.25 meV
       hydro 4 f 5.8
       hydro 5 g 7.4
  #     hydro 4 d 4.5
  #     hydro 6 h 11.2
  #     hydro 5 p 6.6
  #     hydro 2 s 3.2
  #  "Third tier" - max. impr. -1.16 meV, min. impr. -0.08 meV
  #     hydro 5 f 7.4
  #     hydro 5 g 10.8
  #     hydro 4 d 2.3
  #     hydro 4 p 3.7
  #     hydro 5 s 4.0
  #  Further functions - impr. -0.35 meV and below
  #     hydro 5 d 3.5
  #     hydro 6 d 0.4
  #     hydro 2 p 2.5
  #     hydro 5 f 12
  #     hydro 6 d 8.8
  ################################################################################
  #
  #  FHI-aims code project
  #  Volker Blum, Fritz Haber Institute Berlin, 2009
  #
  #  Suggested "tight" defaults for Zr atom (to be pasted into control.in file)
  #
  ################################################################################
    species          Zr
  #     global species definitions
      nucleus        40
      mass           91.224
  #
      l_hartree      6
  #
      cut_pot        4.0  2.0  1.0
      basis_dep_cutoff    1e-4
  #
      radial_base    58  7.0
      radial_multiplier  2
      angular_grids specified
        division   0.3653   50
        division   0.8035  110
        division   1.2273  194
        division   1.4586  302
        division   1.6764  434
  #      division   1.9671  590
  #      division   2.1961  770
  #      division   2.3240  974
  #      division   3.4772 1202
  #      outer_grid  974
        outer_grid  434
  ################################################################################
  #
  #  Definition of "minimal" basis
  #
  ################################################################################
  #     valence basis states
      valence      5  s   2.
      valence      4  p   6.
      valence      4  d   2.
  #     ion occupancy
      ion_occ      5  s   1.
      ion_occ      4  p   6.
      ion_occ      4  d   1.
  ################################################################################
  #
  #  Suggested additional basis functions. For production calculations,
  #  uncomment them one after another (the most important basis functions are
  #  listed first).
  #
  #  Constructed for dimers: 1.9, 2.25, 3.00, 4.00 Ang
  #
  ################################################################################
  #  "First tier" - improvements: -605.96 meV to -18.06 meV
       hydro 4 f 7.2
       ionic 4 d auto
       ionic 5 p auto
       hydro 5 g 10.4
       ionic 5 s auto
  #  "Second tier" - improvements: -32.47 meV to -1.41 meV
  #     hydro 4 f 10.4
  #     hydro 6 h 14.8
  #     hydro 4 d 6.2
  #     hydro 4 p 4.4
  #     hydro 4 f 20
  #     hydro 5 s 6
  #  "Third tier" - improvements: -1.99 meV and lower.
  #     hydro 4 f 5.8
  #     hydro 5 g 10.8
  #     hydro 2 p 1
  #     hydro 3 d 8
  #     hydro 6 h 14.4
  #     hydro 1 s 0.9
  #  Further functions (approx -0.40 meV and below possible)
  ################################################################################
  #
  #  FHI-aims code project
  #  Volker Blum, Fritz Haber Institute Berlin, 2009
  #
  #  Suggested "tight" defaults for S atom (to be pasted into control.in file)
  #
  #  Revised Jan 04, 2011, following tests (SiC) done by Lydia Nemec:
  #     d and g functions of tier 2 now enabled by default.
  #
  ################################################################################
    species        S
  #     global species definitions
      nucleus             16
      mass                32.065
  #
      l_hartree           6
  #
      cut_pot             4.0          2.0  1.0
      basis_dep_cutoff    1e-4
  #
      radial_base         44 7.0
      radial_multiplier   2
      angular_grids       specified
        division   0.4665  110
        division   0.5810  194
        division   0.7139  302
        division   0.8274  434
  #      division   0.9105  590
  #      division   1.0975  770
  #      division   1.2028  974
  #      outer_grid  974
        outer_grid  434
  ################################################################################
  #
  #  Definition of "minimal" basis
  #
  ################################################################################
  #     valence basis states
      valence      3  s   2.
      valence      3  p   4.
  #     ion occupancy
      ion_occ      3  s   1.
      ion_occ      3  p   3.
  ################################################################################
  #
  #  Suggested additional basis functions. For production calculations,
  #  uncomment them one after another (the most important basis functions are
  #  listed first).
  #
  #  Constructed for dimers: 1.6 A, 1.9 A, 2.5 A, 3.25 A, 4.0 A
  #
  ################################################################################
  #  "First tier" - improvements: -652.81 meV to -45.53 meV
       ionic 3 d auto
       hydro 2 p 1.8
       hydro 4 f 7
       ionic 3 s auto
  #  "Second tier" - improvements: -30.20 meV to -1.74 meV
       hydro 4 d 6.2
       hydro 5 g 10.8
  #     hydro 4 p 4.9
  #     hydro 5 f 10
  #     hydro 1 s 0.8
  #  "Third tier" - improvements: -1.04 meV to -0.20 meV
  #     hydro 3 d 3.9
  #     hydro 3 d 2.7
  #     hydro 5 g 12
  #     hydro 4 p 10.4
  #     hydro 5 f 12.4
  #     hydro 2 s 1.9
  #  "Fourth tier" - improvements: -0.35 meV to -0.06 meV
  #     hydro 4 d 10.4
  #     hydro 4 p 7.2
  #     hydro 4 d 10
  #     hydro 5 g 19.2
  #     hydro 4 s 12
  
  ################################################################################
  #
  # For methods that use the localized form of the "resolution of identity" for
  # the two-electron Coulomb operator (RI_method LVL), particularly Hartree-Fock and
  # hybrid density functional calculations, the highest accuracy can be obtained by
  # uncommenting the line beginning with "for_aux"  below, thus adding an extra g radial
  # function to the construction of the product basis set for the expansion.
  # See Ref. New J. Phys. 17, 093020 (2015) for more information, particularly Figs. 1 and 6.
  #
  ################################################################################
  #
  # for_aux hydro 5 g 6.0
  
  -----------------------------------------------------------------------
  Completed first pass over input file control.in .
  -----------------------------------------------------------------------
  
  
  -----------------------------------------------------------------------
  Parsing geometry.in (first pass over file, find array dimensions only).
  The contents of geometry.in will be repeated verbatim below
  unless switched off by setting 'verbatim_writeout .false.' .
  in the first line of geometry.in .
  -----------------------------------------------------------------------
  
  #
  # This is the geometry file that corresponds to the current relaxation step.
  # If you do not want this file to be written, set the "write_restart_geometry" flag to .false.
  #  aims_uuid : 63B61865-4C4D-4D6B-A291-7803E37F8D9B
  #
  lattice_vector      1.59214839     -2.75768062      0.00000000
  lattice_vector      1.59214839      2.75768062      0.00000000
  lattice_vector      0.00000000      0.00000000      5.11109431
  atom_frac       0.33333300     -0.33333300      0.25000000 Zr
  atom_frac      -0.33333300      0.33333300     -0.25000000 Zr
  #
  # What follows is the current estimated Hessian matrix constructed by the BFGS algorithm.
  # This is NOT the true Hessian matrix of the system.
  # If you do not want this information here, switch it off using the "hessian_to_restart_geometry" keyword.
  #
  trust_radius             0.8000000119
  hessian_block_lv             1       1          11.377652           2.280144           0.000000           2.280144           1.75583
  
  -----------------------------------------------------------------------
  Completed first pass over input file geometry.in .
  -----------------------------------------------------------------------
  

  Basic array size parameters:
  | Number of species                 :        3
  | Number of atoms                   :        2
  | Number of lattice vectors         :        3
  | Max. basis fn. angular momentum   :        4
  | Max. atomic/ionic basis occupied n:        6
  | Max. number of basis fn. types    :        3
  | Max. radial fns per species/type  :       12
  | Max. logarithmic grid size        :     1460
  | Max. radial integration grid size :      131
  | Max. angular integration grid size:      434
  | Max. angular grid division number :        8
  | Radial grid for Hartree potential :     1460
  | Number of spin channels           :        1

------------------------------------------------------------
          Reading file control.in.
------------------------------------------------------------
  XC: Using PBE gradient-corrected functionals.
  Charge =   0.000000E+00: Neutral system requested explicitly.
  Spin treatment: No spin polarisation.
  Scalar relativistic treatment of kinetic energy: on-site free-atom approximation to ZORA.
  Found k-point grid:        16        16        12
  Convergence accuracy of self-consistent charge density:  0.1000E-06
  Calculating non-self-consistent second-variational spin-orbit coupling after scf-cycle

  Plot band    1
  | begin  0.000000  0.000000  0.000000
  | end    0.500000  0.000000  0.000000
  | number of points:   58

  Plot band    2
  | begin  0.500000  0.000000  0.000000
  | end    0.333330  0.333330  0.000000
  | number of points:   34

  Plot band    3
  | begin  0.333330  0.333330  0.000000
  | end    0.000000  0.000000  0.000000
  | number of points:   67

  Plot band    4
  | begin  0.000000  0.000000  0.000000
  | end    0.000000  0.000000  0.500000
  | number of points:   31

  Plot band    5
  | begin  0.000000  0.000000  0.500000
  | end    0.500000  0.000000  0.500000
  | number of points:   58

  Plot band    6
  | begin  0.500000  0.000000  0.500000
  | end    0.333330  0.333330  0.500000
  | number of points:   34

  Plot band    7
  | begin  0.333330  0.333330  0.500000
  | end    0.000000  0.000000  0.500000
  | number of points:   67

  Plot band    8
  | begin  0.500000  0.000000  0.500000
  | end    0.500000  0.000000  0.000000
  | number of points:   31

  Plot band    9
  | begin  0.333330  0.333330  0.000000
  | end    0.333330  0.333330  0.500000
  | number of points:   31

  Reading configuration options for species Ba                  .
  | Found nuclear charge :  56.0000
  | Found atomic mass :    137.32700000000000      amu
  | Found l_max for Hartree potential  :   6
  | Found cutoff potl. onset [A], width [A], scale factor :    6.00000    2.00000    1.00000
  | Threshold for basis-dependent cutoff potential is   0.100000E-03
  | Found data for basic radial integration grid :    65 points, outermost radius =    7.000 A
  | Found multiplier for basic radial grid :   2
  | Found angular grid specification: user-specified.
  | Specified grid contains     5 separate shells.
  | Check grid settings after all constraints further below.
  | Found free-atom valence shell :  6 s   2.000
  | Found free-atom valence shell :  5 p   6.000
  | Found free-atom valence shell :  4 d  10.000
  | Found free-ion valence shell :  6 s   1.000
  | Found free-ion valence shell :  5 p   6.000
  | Found free-ion valence shell :  4 d  10.000
  | Found ionic basis function :  5 d , default cutoff radius.
  | Found ionic basis function :  4 f , default cutoff radius.
  | Found hydrogenic basis function :  3 p   2.700
  | Found hydrogenic basis function :  4 s   3.300
  | Found hydrogenic basis function :  4 f   5.800
  | Found hydrogenic basis function :  5 g   7.400
  Species Ba                  : Missing cutoff potential type.
  Defaulting to exp(1/x)/(1-x)^2 type cutoff potential.
  Species Ba: No 'logarithmic' tag. Using default grid for free atom:
  | Default logarithmic grid data [bohr] : 0.1000E-03 0.1000E+03 0.1012E+01
  | Will include ionic basis functions of  1.0-fold positive Ba                   ion.
  Species Ba: On-site basis accuracy parameter (for Gram-Schmidt orthonormalisation) not specified.
  Using default value basis_acc =  0.1000000E-03.
  Species Ba                  : Using default innermost maximum threshold i_radial=  2 for radial functions.
  Species Ba                  : Default cutoff onset for free atom density etc. : 0.60000000E+01 AA.
  Species Ba                  : Basic radial grid will be enhanced according to radial_multiplier =   2, to contain   131 grid points.

  Reading configuration options for species Zr                  .
  | Found nuclear charge :  40.0000
  | Found atomic mass :    91.224000000000004      amu
  | Found l_max for Hartree potential  :   6
  | Found cutoff potl. onset [A], width [A], scale factor :    4.00000    2.00000    1.00000
  | Threshold for basis-dependent cutoff potential is   0.100000E-03
  | Found data for basic radial integration grid :    58 points, outermost radius =    7.000 A
  | Found multiplier for basic radial grid :   2
  | Found angular grid specification: user-specified.
  | Specified grid contains     6 separate shells.
  | Check grid settings after all constraints further below.
  | Found free-atom valence shell :  5 s   2.000
  | Found free-atom valence shell :  4 p   6.000
  | Found free-atom valence shell :  4 d   2.000
  | Found free-ion valence shell :  5 s   1.000
  | Found free-ion valence shell :  4 p   6.000
  | Found free-ion valence shell :  4 d   1.000
  | Found hydrogenic basis function :  4 f   7.200
  | Found ionic basis function :  4 d , default cutoff radius.
  | Found ionic basis function :  5 p , default cutoff radius.
  | Found hydrogenic basis function :  5 g  10.400
  | Found ionic basis function :  5 s , default cutoff radius.
  Species Zr                  : Missing cutoff potential type.
  Defaulting to exp(1/x)/(1-x)^2 type cutoff potential.
  Species Zr: No 'logarithmic' tag. Using default grid for free atom:
  | Default logarithmic grid data [bohr] : 0.1000E-03 0.1000E+03 0.1012E+01
  | Will include ionic basis functions of  2.0-fold positive Zr                   ion.
  Species Zr: On-site basis accuracy parameter (for Gram-Schmidt orthonormalisation) not specified.
  Using default value basis_acc =  0.1000000E-03.
  Species Zr                  : Using default innermost maximum threshold i_radial=  2 for radial functions.
  Species Zr                  : Default cutoff onset for free atom density etc. : 0.40000000E+01 AA.
  Species Zr                  : Basic radial grid will be enhanced according to radial_multiplier =   2, to contain   117 grid points.

  Reading configuration options for species S                   .
  | Found nuclear charge :  16.0000
  | Found atomic mass :    32.064999999999998      amu
  | Found l_max for Hartree potential  :   6
  | Found cutoff potl. onset [A], width [A], scale factor :    4.00000    2.00000    1.00000
  | Threshold for basis-dependent cutoff potential is   0.100000E-03
  | Found data for basic radial integration grid :    44 points, outermost radius =    7.000 A
  | Found multiplier for basic radial grid :   2
  | Found angular grid specification: user-specified.
  | Specified grid contains     5 separate shells.
  | Check grid settings after all constraints further below.
  | Found free-atom valence shell :  3 s   2.000
  | Found free-atom valence shell :  3 p   4.000
  | Found free-ion valence shell :  3 s   1.000
  | Found free-ion valence shell :  3 p   3.000
  | Found ionic basis function :  3 d , default cutoff radius.
  | Found hydrogenic basis function :  2 p   1.800
  | Found hydrogenic basis function :  4 f   7.000
  | Found ionic basis function :  3 s , default cutoff radius.
  | Found hydrogenic basis function :  4 d   6.200
  | Found hydrogenic basis function :  5 g  10.800
  Species S                   : Missing cutoff potential type.
  Defaulting to exp(1/x)/(1-x)^2 type cutoff potential.
  Species S : No 'logarithmic' tag. Using default grid for free atom:
  | Default logarithmic grid data [bohr] : 0.1000E-03 0.1000E+03 0.1012E+01
  | Will include ionic basis functions of  2.0-fold positive S                    ion.
  Species S : On-site basis accuracy parameter (for Gram-Schmidt orthonormalisation) not specified.
  Using default value basis_acc =  0.1000000E-03.
  Species S                   : Using default innermost maximum threshold i_radial=  2 for radial functions.
  Species S                   : Default cutoff onset for free atom density etc. : 0.40000000E+01 AA.
  Species S                   : Basic radial grid will be enhanced according to radial_multiplier =   2, to contain    89 grid points.

  Finished reading input file 'control.in'.

------------------------------------------------------------


------------------------------------------------------------
          Reading geometry description geometry.in.
------------------------------------------------------------
 * Large trust radius value found - resetting to the current value of max_atomic_move,      0.20000000 A.
  | The smallest distance between any two atoms is         3.14813104 AA.
  | The first atom of this pair is atom number                      2 .
  | The second atom of this pair is atom number                     1 .
  | Wigner-Seitz cell of the first atom image           0    -1     1 .
  | (The Wigner-Seitz cell of the second atom is 0 0 0  by definition.)

  Symmetry information by spglib:
  | Precision set to  0.1E-04
  | Number of Operations  : 8
  | Space group           : 63
  | International         : Cmcm
  | Schoenflies           : D2h^17
  Input structure read successfully.
  The structure contains        2 atoms,  and a total of         80.000 electrons.

  Input geometry:
  | Unit cell:
  |        1.59214839       -2.75768062        0.00000000
  |        1.59214839        2.75768062        0.00000000
  |        0.00000000        0.00000000        5.11109431
  | Atomic structure:
  |       Atom                x [A]            y [A]            z [A]
  |    1: Species Zr            0.00000000       -1.83845191        1.27777358
  |    2: Species Zr           -0.00000000        1.83845191       -1.27777358

  Lattice parameters for 3D lattice (in Angstroms) :     3.184296    3.184296    5.111094
  Angle(s) between unit vectors (in degrees)       :    90.000000   90.000000  119.999977


  Quantities derived from the lattice vectors (in Angstrom^-1):
  | Reciprocal lattice vector 1:  1.973178 -1.139216  0.000000
  | Reciprocal lattice vector 2:  1.973178  1.139216  0.000000
  | Reciprocal lattice vector 3:  0.000000  0.000000  1.229323
  | Unit cell volume                               :   0.448819E+02  Angstrom^3

  Fractional coordinates:
                         L1                L2                L3
       atom_frac         0.33333300       -0.33333300        0.25000000  Zr
       atom_frac        -0.33333300        0.33333300       -0.25000000  Zr


  Finished reading input file 'control.in'.


------------------------------------------------------------
          Reading geometry description geometry.in.
------------------------------------------------------------

  Consistency checks for stacksize environment parameter are next.

  | Maximum stacksize for task 0: unlimited
  | Maximum stacksize for task 1: unlimited
  | Maximum stacksize for task 2: unlimited
  | Maximum stacksize for task 3: unlimited
  | Maximum stacksize for task 4: unlimited
  | Maximum stacksize for task 5: unlimited
  | Maximum stacksize for task 6: unlimited
  | Maximum stacksize for task 7: unlimited
  | Maximum stacksize for task 8: unlimited
  | Maximum stacksize for task 9: unlimited
  | Maximum stacksize for task 10: unlimited
  | Maximum stacksize for task 11: unlimited
  | Maximum stacksize for task 12: unlimited
  | Maximum stacksize for task 13: unlimited
  | Maximum stacksize for task 14: unlimited
  | Maximum stacksize for task 15: unlimited
  | Maximum stacksize for task 16: unlimited
  | Maximum stacksize for task 17: unlimited
  | Maximum stacksize for task 18: unlimited
  | Maximum stacksize for task 19: unlimited
  | Maximum stacksize for task 20: unlimited
  | Maximum stacksize for task 21: unlimited
  | Maximum stacksize for task 22: unlimited
  | Maximum stacksize for task 23: unlimited
  | Maximum stacksize for task 24: unlimited
  | Maximum stacksize for task 25: unlimited
  | Maximum stacksize for task 26: unlimited
  | Maximum stacksize for task 27: unlimited
  | Maximum stacksize for task 28: unlimited
  | Maximum stacksize for task 29: unlimited
  | Maximum stacksize for task 30: unlimited
  | Maximum stacksize for task 31: unlimited
  | Maximum stacksize for task 32: unlimited
  | Maximum stacksize for task 33: unlimited
  | Maximum stacksize for task 34: unlimited
  | Maximum stacksize for task 35: unlimited
  | Maximum stacksize for task 36: unlimited
  | Maximum stacksize for task 37: unlimited
  | Maximum stacksize for task 38: unlimited
  | Maximum stacksize for task 39: unlimited
  | Maximum stacksize for task 40: unlimited
  | Maximum stacksize for task 41: unlimited
  | Maximum stacksize for task 42: unlimited
  | Maximum stacksize for task 43: unlimited
  | Maximum stacksize for task 44: unlimited
  | Maximum stacksize for task 45: unlimited
  | Maximum stacksize for task 46: unlimited
  | Maximum stacksize for task 47: unlimited
  | Maximum stacksize for task 48: unlimited
  | Maximum stacksize for task 49: unlimited
  | Maximum stacksize for task 50: unlimited
  | Maximum stacksize for task 51: unlimited
  | Maximum stacksize for task 52: unlimited
  | Maximum stacksize for task 53: unlimited
  | Maximum stacksize for task 54: unlimited
  | Maximum stacksize for task 55: unlimited
  | Maximum stacksize for task 56: unlimited
  | Maximum stacksize for task 57: unlimited
  | Maximum stacksize for task 58: unlimited
  | Maximum stacksize for task 59: unlimited
  | Maximum stacksize for task 60: unlimited
  | Maximum stacksize for task 61: unlimited
  | Maximum stacksize for task 62: unlimited
  | Maximum stacksize for task 63: unlimited
  | Maximum stacksize for task 64: unlimited
  | Maximum stacksize for task 65: unlimited
  | Maximum stacksize for task 66: unlimited
  | Maximum stacksize for task 67: unlimited
  | Maximum stacksize for task 68: unlimited
  | Maximum stacksize for task 69: unlimited
  | Maximum stacksize for task 70: unlimited
  | Maximum stacksize for task 71: unlimited
  | Maximum stacksize for task 72: unlimited
  | Maximum stacksize for task 73: unlimited
  | Maximum stacksize for task 74: unlimited
  | Maximum stacksize for task 75: unlimited
  | Maximum stacksize for task 76: unlimited
  | Maximum stacksize for task 77: unlimited
  | Maximum stacksize for task 78: unlimited
  | Maximum stacksize for task 79: unlimited
  | Maximum stacksize for task 80: unlimited
  | Maximum stacksize for task 81: unlimited
  | Maximum stacksize for task 82: unlimited
  | Maximum stacksize for task 83: unlimited
  | Maximum stacksize for task 84: unlimited
  | Maximum stacksize for task 85: unlimited
  | Maximum stacksize for task 86: unlimited
  | Maximum stacksize for task 87: unlimited
  | Maximum stacksize for task 88: unlimited
  | Maximum stacksize for task 89: unlimited
  | Maximum stacksize for task 90: unlimited
  | Maximum stacksize for task 91: unlimited
  | Maximum stacksize for task 92: unlimited
  | Maximum stacksize for task 93: unlimited
  | Maximum stacksize for task 94: unlimited
  | Maximum stacksize for task 95: unlimited
  | Maximum stacksize for task 96: unlimited
  | Maximum stacksize for task 97: unlimited
  | Maximum stacksize for task 98: unlimited
  | Maximum stacksize for task 99: unlimited
  | Maximum stacksize for task 100: unlimited
  | Maximum stacksize for task 101: unlimited
  | Maximum stacksize for task 102: unlimited
  | Maximum stacksize for task 103: unlimited
  | Maximum stacksize for task 104: unlimited
  | Maximum stacksize for task 105: unlimited
  | Maximum stacksize for task 106: unlimited
  | Maximum stacksize for task 107: unlimited
  | Maximum stacksize for task 108: unlimited
  | Maximum stacksize for task 109: unlimited
  | Maximum stacksize for task 110: unlimited
  | Maximum stacksize for task 111: unlimited
  | Maximum stacksize for task 112: unlimited
  | Maximum stacksize for task 113: unlimited
  | Maximum stacksize for task 114: unlimited
  | Maximum stacksize for task 115: unlimited
  | Maximum stacksize for task 116: unlimited
  | Maximum stacksize for task 117: unlimited
  | Maximum stacksize for task 118: unlimited
  | Maximum stacksize for task 119: unlimited
  | Maximum stacksize for task 120: unlimited
  | Maximum stacksize for task 121: unlimited
  | Maximum stacksize for task 122: unlimited
  | Maximum stacksize for task 123: unlimited
  | Maximum stacksize for task 124: unlimited
  | Maximum stacksize for task 125: unlimited
  | Maximum stacksize for task 126: unlimited
  | Maximum stacksize for task 127: unlimited
  | Maximum stacksize for task 128: unlimited
  | Maximum stacksize for task 129: unlimited
  | Maximum stacksize for task 130: unlimited
  | Maximum stacksize for task 131: unlimited
  | Maximum stacksize for task 132: unlimited
  | Maximum stacksize for task 133: unlimited
  | Maximum stacksize for task 134: unlimited
  | Maximum stacksize for task 135: unlimited
  | Maximum stacksize for task 136: unlimited
  | Maximum stacksize for task 137: unlimited
  | Maximum stacksize for task 138: unlimited
  | Maximum stacksize for task 139: unlimited
  | Maximum stacksize for task 140: unlimited
  | Maximum stacksize for task 141: unlimited
  | Maximum stacksize for task 142: unlimited
  | Maximum stacksize for task 143: unlimited
  | Maximum stacksize for task 144: unlimited
  | Maximum stacksize for task 145: unlimited
  | Maximum stacksize for task 146: unlimited
  | Maximum stacksize for task 147: unlimited
  | Maximum stacksize for task 148: unlimited
  | Maximum stacksize for task 149: unlimited
  | Maximum stacksize for task 150: unlimited
  | Maximum stacksize for task 151: unlimited
  | Maximum stacksize for task 152: unlimited
  | Maximum stacksize for task 153: unlimited
  | Maximum stacksize for task 154: unlimited
  | Maximum stacksize for task 155: unlimited
  | Maximum stacksize for task 156: unlimited
  | Maximum stacksize for task 157: unlimited
  | Maximum stacksize for task 158: unlimited
  | Maximum stacksize for task 159: unlimited
  | Maximum stacksize for task 160: unlimited
  | Maximum stacksize for task 161: unlimited
  | Maximum stacksize for task 162: unlimited
  | Maximum stacksize for task 163: unlimited
  | Maximum stacksize for task 164: unlimited
  | Maximum stacksize for task 165: unlimited
  | Maximum stacksize for task 166: unlimited
  | Maximum stacksize for task 167: unlimited
  | Maximum stacksize for task 168: unlimited
  | Maximum stacksize for task 169: unlimited
  | Maximum stacksize for task 170: unlimited
  | Maximum stacksize for task 171: unlimited
  | Maximum stacksize for task 172: unlimited
  | Maximum stacksize for task 173: unlimited
  | Maximum stacksize for task 174: unlimited
  | Maximum stacksize for task 175: unlimited
  | Maximum stacksize for task 176: unlimited
  | Maximum stacksize for task 177: unlimited
  | Maximum stacksize for task 178: unlimited
  | Maximum stacksize for task 179: unlimited
  | Maximum stacksize for task 180: unlimited
  | Maximum stacksize for task 181: unlimited
  | Maximum stacksize for task 182: unlimited
  | Maximum stacksize for task 183: unlimited
  | Maximum stacksize for task 184: unlimited
  | Maximum stacksize for task 185: unlimited
  | Maximum stacksize for task 186: unlimited
  | Maximum stacksize for task 187: unlimited
  | Maximum stacksize for task 188: unlimited
  | Maximum stacksize for task 189: unlimited
  | Maximum stacksize for task 190: unlimited
  | Maximum stacksize for task 191: unlimited
  | Maximum stacksize for task 192: unlimited
  | Maximum stacksize for task 193: unlimited
  | Maximum stacksize for task 194: unlimited
  | Maximum stacksize for task 195: unlimited
  | Maximum stacksize for task 196: unlimited
  | Maximum stacksize for task 197: unlimited
  | Maximum stacksize for task 198: unlimited
  | Maximum stacksize for task 199: unlimited
  | Maximum stacksize for task 200: unlimited
  | Maximum stacksize for task 201: unlimited
  | Maximum stacksize for task 202: unlimited
  | Maximum stacksize for task 203: unlimited
  | Maximum stacksize for task 204: unlimited
  | Maximum stacksize for task 205: unlimited
  | Maximum stacksize for task 206: unlimited
  | Maximum stacksize for task 207: unlimited
  | Maximum stacksize for task 208: unlimited
  | Maximum stacksize for task 209: unlimited
  | Maximum stacksize for task 210: unlimited
  | Maximum stacksize for task 211: unlimited
  | Maximum stacksize for task 212: unlimited
  | Maximum stacksize for task 213: unlimited
  | Maximum stacksize for task 214: unlimited
  | Maximum stacksize for task 215: unlimited
  | Maximum stacksize for task 216: unlimited
  | Maximum stacksize for task 217: unlimited
  | Maximum stacksize for task 218: unlimited
  | Maximum stacksize for task 219: unlimited
  | Maximum stacksize for task 220: unlimited
  | Maximum stacksize for task 221: unlimited
  | Maximum stacksize for task 222: unlimited
  | Maximum stacksize for task 223: unlimited
  | Maximum stacksize for task 224: unlimited
  | Maximum stacksize for task 225: unlimited
  | Maximum stacksize for task 226: unlimited
  | Maximum stacksize for task 227: unlimited
  | Maximum stacksize for task 228: unlimited
  | Maximum stacksize for task 229: unlimited
  | Maximum stacksize for task 230: unlimited
  | Maximum stacksize for task 231: unlimited
  | Maximum stacksize for task 232: unlimited
  | Maximum stacksize for task 233: unlimited
  | Maximum stacksize for task 234: unlimited
  | Maximum stacksize for task 235: unlimited
  | Maximum stacksize for task 236: unlimited
  | Maximum stacksize for task 237: unlimited
  | Maximum stacksize for task 238: unlimited
  | Maximum stacksize for task 239: unlimited
  | Maximum stacksize for task 240: unlimited
  | Maximum stacksize for task 241: unlimited
  | Maximum stacksize for task 242: unlimited
  | Maximum stacksize for task 243: unlimited
  | Maximum stacksize for task 244: unlimited
  | Maximum stacksize for task 245: unlimited
  | Maximum stacksize for task 246: unlimited
  | Maximum stacksize for task 247: unlimited
  | Maximum stacksize for task 248: unlimited
  | Maximum stacksize for task 249: unlimited
  | Maximum stacksize for task 250: unlimited
  | Maximum stacksize for task 251: unlimited
  | Maximum stacksize for task 252: unlimited
  | Maximum stacksize for task 253: unlimited
  | Maximum stacksize for task 254: unlimited
  | Maximum stacksize for task 255: unlimited
  | Maximum stacksize for task 256: unlimited
  | Maximum stacksize for task 257: unlimited
  | Maximum stacksize for task 258: unlimited
  | Maximum stacksize for task 259: unlimited
  | Maximum stacksize for task 260: unlimited
  | Maximum stacksize for task 261: unlimited
  | Maximum stacksize for task 262: unlimited
  | Maximum stacksize for task 263: unlimited
  | Maximum stacksize for task 264: unlimited
  | Maximum stacksize for task 265: unlimited
  | Maximum stacksize for task 266: unlimited
  | Maximum stacksize for task 267: unlimited
  | Maximum stacksize for task 268: unlimited
  | Maximum stacksize for task 269: unlimited
  | Maximum stacksize for task 270: unlimited
  | Maximum stacksize for task 271: unlimited
  | Maximum stacksize for task 272: unlimited
  | Maximum stacksize for task 273: unlimited
  | Maximum stacksize for task 274: unlimited
  | Maximum stacksize for task 275: unlimited
  | Maximum stacksize for task 276: unlimited
  | Maximum stacksize for task 277: unlimited
  | Maximum stacksize for task 278: unlimited
  | Maximum stacksize for task 279: unlimited
  | Maximum stacksize for task 280: unlimited
  | Maximum stacksize for task 281: unlimited
  | Maximum stacksize for task 282: unlimited
  | Maximum stacksize for task 283: unlimited
  | Maximum stacksize for task 284: unlimited
  | Maximum stacksize for task 285: unlimited
  | Maximum stacksize for task 286: unlimited
  | Maximum stacksize for task 287: unlimited
  | Maximum stacksize for task 288: unlimited
  | Maximum stacksize for task 289: unlimited
  | Maximum stacksize for task 290: unlimited
  | Maximum stacksize for task 291: unlimited
  | Maximum stacksize for task 292: unlimited
  | Maximum stacksize for task 293: unlimited
  | Maximum stacksize for task 294: unlimited
  | Maximum stacksize for task 295: unlimited
  | Maximum stacksize for task 296: unlimited
  | Maximum stacksize for task 297: unlimited
  | Maximum stacksize for task 298: unlimited
  | Maximum stacksize for task 299: unlimited
  | Maximum stacksize for task 300: unlimited
  | Maximum stacksize for task 301: unlimited
  | Maximum stacksize for task 302: unlimited
  | Maximum stacksize for task 303: unlimited
  | Maximum stacksize for task 304: unlimited
  | Maximum stacksize for task 305: unlimited
  | Maximum stacksize for task 306: unlimited
  | Maximum stacksize for task 307: unlimited
  | Maximum stacksize for task 308: unlimited
  | Maximum stacksize for task 309: unlimited
  | Maximum stacksize for task 310: unlimited
  | Maximum stacksize for task 311: unlimited
  | Maximum stacksize for task 312: unlimited
  | Maximum stacksize for task 313: unlimited
  | Maximum stacksize for task 314: unlimited
  | Maximum stacksize for task 315: unlimited
  | Maximum stacksize for task 316: unlimited
  | Maximum stacksize for task 317: unlimited
  | Maximum stacksize for task 318: unlimited
  | Maximum stacksize for task 319: unlimited
  | Maximum stacksize for task 320: unlimited
  | Maximum stacksize for task 321: unlimited
  | Maximum stacksize for task 322: unlimited
  | Maximum stacksize for task 323: unlimited
  | Maximum stacksize for task 324: unlimited
  | Maximum stacksize for task 325: unlimited
  | Maximum stacksize for task 326: unlimited
  | Maximum stacksize for task 327: unlimited
  | Maximum stacksize for task 328: unlimited
  | Maximum stacksize for task 329: unlimited
  | Maximum stacksize for task 330: unlimited
  | Maximum stacksize for task 331: unlimited
  | Maximum stacksize for task 332: unlimited
  | Maximum stacksize for task 333: unlimited
  | Maximum stacksize for task 334: unlimited
  | Maximum stacksize for task 335: unlimited
  | Maximum stacksize for task 336: unlimited
  | Maximum stacksize for task 337: unlimited
  | Maximum stacksize for task 338: unlimited
  | Maximum stacksize for task 339: unlimited
  | Maximum stacksize for task 340: unlimited
  | Maximum stacksize for task 341: unlimited
  | Maximum stacksize for task 342: unlimited
  | Maximum stacksize for task 343: unlimited
  | Maximum stacksize for task 344: unlimited
  | Maximum stacksize for task 345: unlimited
  | Maximum stacksize for task 346: unlimited
  | Maximum stacksize for task 347: unlimited
  | Maximum stacksize for task 348: unlimited
  | Maximum stacksize for task 349: unlimited
  | Maximum stacksize for task 350: unlimited
  | Maximum stacksize for task 351: unlimited
  | Maximum stacksize for task 352: unlimited
  | Maximum stacksize for task 353: unlimited
  | Maximum stacksize for task 354: unlimited
  | Maximum stacksize for task 355: unlimited
  | Maximum stacksize for task 356: unlimited
  | Maximum stacksize for task 357: unlimited
  | Maximum stacksize for task 358: unlimited
  | Maximum stacksize for task 359: unlimited
  | Maximum stacksize for task 360: unlimited
  | Maximum stacksize for task 361: unlimited
  | Maximum stacksize for task 362: unlimited
  | Maximum stacksize for task 363: unlimited
  | Maximum stacksize for task 364: unlimited
  | Maximum stacksize for task 365: unlimited
  | Maximum stacksize for task 366: unlimited
  | Maximum stacksize for task 367: unlimited
  | Maximum stacksize for task 368: unlimited
  | Maximum stacksize for task 369: unlimited
  | Maximum stacksize for task 370: unlimited
  | Maximum stacksize for task 371: unlimited
  | Maximum stacksize for task 372: unlimited
  | Maximum stacksize for task 373: unlimited
  | Maximum stacksize for task 374: unlimited
  | Maximum stacksize for task 375: unlimited
  | Maximum stacksize for task 376: unlimited
  | Maximum stacksize for task 377: unlimited
  | Maximum stacksize for task 378: unlimited
  | Maximum stacksize for task 379: unlimited
  | Maximum stacksize for task 380: unlimited
  | Maximum stacksize for task 381: unlimited
  | Maximum stacksize for task 382: unlimited
  | Maximum stacksize for task 383: unlimited
  | Maximum stacksize for task 384: unlimited
  | Maximum stacksize for task 385: unlimited
  | Maximum stacksize for task 386: unlimited
  | Maximum stacksize for task 387: unlimited
  | Maximum stacksize for task 388: unlimited
  | Maximum stacksize for task 389: unlimited
  | Maximum stacksize for task 390: unlimited
  | Maximum stacksize for task 391: unlimited
  | Maximum stacksize for task 392: unlimited
  | Maximum stacksize for task 393: unlimited
  | Maximum stacksize for task 394: unlimited
  | Maximum stacksize for task 395: unlimited
  | Maximum stacksize for task 396: unlimited
  | Maximum stacksize for task 397: unlimited
  | Maximum stacksize for task 398: unlimited
  | Maximum stacksize for task 399: unlimited
  | Maximum stacksize for task 400: unlimited
  | Maximum stacksize for task 401: unlimited
  | Maximum stacksize for task 402: unlimited
  | Maximum stacksize for task 403: unlimited
  | Maximum stacksize for task 404: unlimited
  | Maximum stacksize for task 405: unlimited
  | Maximum stacksize for task 406: unlimited
  | Maximum stacksize for task 407: unlimited
  | Maximum stacksize for task 408: unlimited
  | Maximum stacksize for task 409: unlimited
  | Maximum stacksize for task 410: unlimited
  | Maximum stacksize for task 411: unlimited
  | Maximum stacksize for task 412: unlimited
  | Maximum stacksize for task 413: unlimited
  | Maximum stacksize for task 414: unlimited
  | Maximum stacksize for task 415: unlimited
  | Maximum stacksize for task 416: unlimited
  | Maximum stacksize for task 417: unlimited
  | Maximum stacksize for task 418: unlimited
  | Maximum stacksize for task 419: unlimited
  | Maximum stacksize for task 420: unlimited
  | Maximum stacksize for task 421: unlimited
  | Maximum stacksize for task 422: unlimited
  | Maximum stacksize for task 423: unlimited
  | Maximum stacksize for task 424: unlimited
  | Maximum stacksize for task 425: unlimited
  | Maximum stacksize for task 426: unlimited
  | Maximum stacksize for task 427: unlimited
  | Maximum stacksize for task 428: unlimited
  | Maximum stacksize for task 429: unlimited
  | Maximum stacksize for task 430: unlimited
  | Maximum stacksize for task 431: unlimited
  | Maximum stacksize for task 432: unlimited
  | Maximum stacksize for task 433: unlimited
  | Maximum stacksize for task 434: unlimited
  | Maximum stacksize for task 435: unlimited
  | Maximum stacksize for task 436: unlimited
  | Maximum stacksize for task 437: unlimited
  | Maximum stacksize for task 438: unlimited
  | Maximum stacksize for task 439: unlimited
  | Maximum stacksize for task 440: unlimited
  | Maximum stacksize for task 441: unlimited
  | Maximum stacksize for task 442: unlimited
  | Maximum stacksize for task 443: unlimited
  | Maximum stacksize for task 444: unlimited
  | Maximum stacksize for task 445: unlimited
  | Maximum stacksize for task 446: unlimited
  | Maximum stacksize for task 447: unlimited
  | Maximum stacksize for task 448: unlimited
  | Maximum stacksize for task 449: unlimited
  | Maximum stacksize for task 450: unlimited
  | Maximum stacksize for task 451: unlimited
  | Maximum stacksize for task 452: unlimited
  | Maximum stacksize for task 453: unlimited
  | Maximum stacksize for task 454: unlimited
  | Maximum stacksize for task 455: unlimited
  | Maximum stacksize for task 456: unlimited
  | Maximum stacksize for task 457: unlimited
  | Maximum stacksize for task 458: unlimited
  | Maximum stacksize for task 459: unlimited
  | Maximum stacksize for task 460: unlimited
  | Maximum stacksize for task 461: unlimited
  | Maximum stacksize for task 462: unlimited
  | Maximum stacksize for task 463: unlimited
  | Maximum stacksize for task 464: unlimited
  | Maximum stacksize for task 465: unlimited
  | Maximum stacksize for task 466: unlimited
  | Maximum stacksize for task 467: unlimited
  | Maximum stacksize for task 468: unlimited
  | Maximum stacksize for task 469: unlimited
  | Maximum stacksize for task 470: unlimited
  | Maximum stacksize for task 471: unlimited
  | Maximum stacksize for task 472: unlimited
  | Maximum stacksize for task 473: unlimited
  | Maximum stacksize for task 474: unlimited
  | Maximum stacksize for task 475: unlimited
  | Maximum stacksize for task 476: unlimited
  | Maximum stacksize for task 477: unlimited
  | Maximum stacksize for task 478: unlimited
  | Maximum stacksize for task 479: unlimited
  | Maximum stacksize for task 480: unlimited
  | Maximum stacksize for task 481: unlimited
  | Maximum stacksize for task 482: unlimited
  | Maximum stacksize for task 483: unlimited
  | Maximum stacksize for task 484: unlimited
  | Maximum stacksize for task 485: unlimited
  | Maximum stacksize for task 486: unlimited
  | Maximum stacksize for task 487: unlimited
  | Maximum stacksize for task 488: unlimited
  | Maximum stacksize for task 489: unlimited
  | Maximum stacksize for task 490: unlimited
  | Maximum stacksize for task 491: unlimited
  | Maximum stacksize for task 492: unlimited
  | Maximum stacksize for task 493: unlimited
  | Maximum stacksize for task 494: unlimited
  | Maximum stacksize for task 495: unlimited
  | Maximum stacksize for task 496: unlimited
  | Maximum stacksize for task 497: unlimited
  | Maximum stacksize for task 498: unlimited
  | Maximum stacksize for task 499: unlimited
  | Maximum stacksize for task 500: unlimited
  | Maximum stacksize for task 501: unlimited
  | Maximum stacksize for task 502: unlimited
  | Maximum stacksize for task 503: unlimited
  | Maximum stacksize for task 504: unlimited
  | Maximum stacksize for task 505: unlimited
  | Maximum stacksize for task 506: unlimited
  | Maximum stacksize for task 507: unlimited
  | Maximum stacksize for task 508: unlimited
  | Maximum stacksize for task 509: unlimited
  | Maximum stacksize for task 510: unlimited
  | Maximum stacksize for task 511: unlimited
  | Current stacksize for task 0: unlimited
  | Current stacksize for task 1: unlimited
  | Current stacksize for task 2: unlimited
  | Current stacksize for task 3: unlimited
  | Current stacksize for task 4: unlimited
  | Current stacksize for task 5: unlimited
  | Current stacksize for task 6: unlimited
  | Current stacksize for task 7: unlimited
  | Current stacksize for task 8: unlimited
  | Current stacksize for task 9: unlimited
  | Current stacksize for task 10: unlimited
  | Current stacksize for task 11: unlimited
  | Current stacksize for task 12: unlimited
  | Current stacksize for task 13: unlimited
  | Current stacksize for task 14: unlimited
  | Current stacksize for task 15: unlimited
  | Current stacksize for task 16: unlimited
  | Current stacksize for task 17: unlimited
  | Current stacksize for task 18: unlimited
  | Current stacksize for task 19: unlimited
  | Current stacksize for task 20: unlimited
  | Current stacksize for task 21: unlimited
  | Current stacksize for task 22: unlimited
  | Current stacksize for task 23: unlimited
  | Current stacksize for task 24: unlimited
  | Current stacksize for task 25: unlimited
  | Current stacksize for task 26: unlimited
  | Current stacksize for task 27: unlimited
  | Current stacksize for task 28: unlimited
  | Current stacksize for task 29: unlimited
  | Current stacksize for task 30: unlimited
  | Current stacksize for task 31: unlimited
  | Current stacksize for task 32: unlimited
  | Current stacksize for task 33: unlimited
  | Current stacksize for task 34: unlimited
  | Current stacksize for task 35: unlimited
  | Current stacksize for task 36: unlimited
  | Current stacksize for task 37: unlimited
  | Current stacksize for task 38: unlimited
  | Current stacksize for task 39: unlimited
  | Current stacksize for task 40: unlimited
  | Current stacksize for task 41: unlimited
  | Current stacksize for task 42: unlimited
  | Current stacksize for task 43: unlimited
  | Current stacksize for task 44: unlimited
  | Current stacksize for task 45: unlimited
  | Current stacksize for task 46: unlimited
  | Current stacksize for task 47: unlimited
  | Current stacksize for task 48: unlimited
  | Current stacksize for task 49: unlimited
  | Current stacksize for task 50: unlimited
  | Current stacksize for task 51: unlimited
  | Current stacksize for task 52: unlimited
  | Current stacksize for task 53: unlimited
  | Current stacksize for task 54: unlimited
  | Current stacksize for task 55: unlimited
  | Current stacksize for task 56: unlimited
  | Current stacksize for task 57: unlimited
  | Current stacksize for task 58: unlimited
  | Current stacksize for task 59: unlimited
  | Current stacksize for task 60: unlimited
  | Current stacksize for task 61: unlimited
  | Current stacksize for task 62: unlimited
  | Current stacksize for task 63: unlimited
  | Current stacksize for task 64: unlimited
  | Current stacksize for task 65: unlimited
  | Current stacksize for task 66: unlimited
  | Current stacksize for task 67: unlimited
  | Current stacksize for task 68: unlimited
  | Current stacksize for task 69: unlimited
  | Current stacksize for task 70: unlimited
  | Current stacksize for task 71: unlimited
  | Current stacksize for task 72: unlimited
  | Current stacksize for task 73: unlimited
  | Current stacksize for task 74: unlimited
  | Current stacksize for task 75: unlimited
  | Current stacksize for task 76: unlimited
  | Current stacksize for task 77: unlimited
  | Current stacksize for task 78: unlimited
  | Current stacksize for task 79: unlimited
  | Current stacksize for task 80: unlimited
  | Current stacksize for task 81: unlimited
  | Current stacksize for task 82: unlimited
  | Current stacksize for task 83: unlimited
  | Current stacksize for task 84: unlimited
  | Current stacksize for task 85: unlimited
  | Current stacksize for task 86: unlimited
  | Current stacksize for task 87: unlimited
  | Current stacksize for task 88: unlimited
  | Current stacksize for task 89: unlimited
  | Current stacksize for task 90: unlimited
  | Current stacksize for task 91: unlimited
  | Current stacksize for task 92: unlimited
  | Current stacksize for task 93: unlimited
  | Current stacksize for task 94: unlimited
  | Current stacksize for task 95: unlimited
  | Current stacksize for task 96: unlimited
  | Current stacksize for task 97: unlimited
  | Current stacksize for task 98: unlimited
  | Current stacksize for task 99: unlimited
  | Current stacksize for task 100: unlimited
  | Current stacksize for task 101: unlimited
  | Current stacksize for task 102: unlimited
  | Current stacksize for task 103: unlimited
  | Current stacksize for task 104: unlimited
  | Current stacksize for task 105: unlimited
  | Current stacksize for task 106: unlimited
  | Current stacksize for task 107: unlimited
  | Current stacksize for task 108: unlimited
  | Current stacksize for task 109: unlimited
  | Current stacksize for task 110: unlimited
  | Current stacksize for task 111: unlimited
  | Current stacksize for task 112: unlimited
  | Current stacksize for task 113: unlimited
  | Current stacksize for task 114: unlimited
  | Current stacksize for task 115: unlimited
  | Current stacksize for task 116: unlimited
  | Current stacksize for task 117: unlimited
  | Current stacksize for task 118: unlimited
  | Current stacksize for task 119: unlimited
  | Current stacksize for task 120: unlimited
  | Current stacksize for task 121: unlimited
  | Current stacksize for task 122: unlimited
  | Current stacksize for task 123: unlimited
  | Current stacksize for task 124: unlimited
  | Current stacksize for task 125: unlimited
  | Current stacksize for task 126: unlimited
  | Current stacksize for task 127: unlimited
  | Current stacksize for task 128: unlimited
  | Current stacksize for task 129: unlimited
  | Current stacksize for task 130: unlimited
  | Current stacksize for task 131: unlimited
  | Current stacksize for task 132: unlimited
  | Current stacksize for task 133: unlimited
  | Current stacksize for task 134: unlimited
  | Current stacksize for task 135: unlimited
  | Current stacksize for task 136: unlimited
  | Current stacksize for task 137: unlimited
  | Current stacksize for task 138: unlimited
  | Current stacksize for task 139: unlimited
  | Current stacksize for task 140: unlimited
  | Current stacksize for task 141: unlimited
  | Current stacksize for task 142: unlimited
  | Current stacksize for task 143: unlimited
  | Current stacksize for task 144: unlimited
  | Current stacksize for task 145: unlimited
  | Current stacksize for task 146: unlimited
  | Current stacksize for task 147: unlimited
  | Current stacksize for task 148: unlimited
  | Current stacksize for task 149: unlimited
  | Current stacksize for task 150: unlimited
  | Current stacksize for task 151: unlimited
  | Current stacksize for task 152: unlimited
  | Current stacksize for task 153: unlimited
  | Current stacksize for task 154: unlimited
  | Current stacksize for task 155: unlimited
  | Current stacksize for task 156: unlimited
  | Current stacksize for task 157: unlimited
  | Current stacksize for task 158: unlimited
  | Current stacksize for task 159: unlimited
  | Current stacksize for task 160: unlimited
  | Current stacksize for task 161: unlimited
  | Current stacksize for task 162: unlimited
  | Current stacksize for task 163: unlimited
  | Current stacksize for task 164: unlimited
  | Current stacksize for task 165: unlimited
  | Current stacksize for task 166: unlimited
  | Current stacksize for task 167: unlimited
  | Current stacksize for task 168: unlimited
  | Current stacksize for task 169: unlimited
  | Current stacksize for task 170: unlimited
  | Current stacksize for task 171: unlimited
  | Current stacksize for task 172: unlimited
  | Current stacksize for task 173: unlimited
  | Current stacksize for task 174: unlimited
  | Current stacksize for task 175: unlimited
  | Current stacksize for task 176: unlimited
  | Current stacksize for task 177: unlimited
  | Current stacksize for task 178: unlimited
  | Current stacksize for task 179: unlimited
  | Current stacksize for task 180: unlimited
  | Current stacksize for task 181: unlimited
  | Current stacksize for task 182: unlimited
  | Current stacksize for task 183: unlimited
  | Current stacksize for task 184: unlimited
  | Current stacksize for task 185: unlimited
  | Current stacksize for task 186: unlimited
  | Current stacksize for task 187: unlimited
  | Current stacksize for task 188: unlimited
  | Current stacksize for task 189: unlimited
  | Current stacksize for task 190: unlimited
  | Current stacksize for task 191: unlimited
  | Current stacksize for task 192: unlimited
  | Current stacksize for task 193: unlimited
  | Current stacksize for task 194: unlimited
  | Current stacksize for task 195: unlimited
  | Current stacksize for task 196: unlimited
  | Current stacksize for task 197: unlimited
  | Current stacksize for task 198: unlimited
  | Current stacksize for task 199: unlimited
  | Current stacksize for task 200: unlimited
  | Current stacksize for task 201: unlimited
  | Current stacksize for task 202: unlimited
  | Current stacksize for task 203: unlimited
  | Current stacksize for task 204: unlimited
  | Current stacksize for task 205: unlimited
  | Current stacksize for task 206: unlimited
  | Current stacksize for task 207: unlimited
  | Current stacksize for task 208: unlimited
  | Current stacksize for task 209: unlimited
  | Current stacksize for task 210: unlimited
  | Current stacksize for task 211: unlimited
  | Current stacksize for task 212: unlimited
  | Current stacksize for task 213: unlimited
  | Current stacksize for task 214: unlimited
  | Current stacksize for task 215: unlimited
  | Current stacksize for task 216: unlimited
  | Current stacksize for task 217: unlimited
  | Current stacksize for task 218: unlimited
  | Current stacksize for task 219: unlimited
  | Current stacksize for task 220: unlimited
  | Current stacksize for task 221: unlimited
  | Current stacksize for task 222: unlimited
  | Current stacksize for task 223: unlimited
  | Current stacksize for task 224: unlimited
  | Current stacksize for task 225: unlimited
  | Current stacksize for task 226: unlimited
  | Current stacksize for task 227: unlimited
  | Current stacksize for task 228: unlimited
  | Current stacksize for task 229: unlimited
  | Current stacksize for task 230: unlimited
  | Current stacksize for task 231: unlimited
  | Current stacksize for task 232: unlimited
  | Current stacksize for task 233: unlimited
  | Current stacksize for task 234: unlimited
  | Current stacksize for task 235: unlimited
  | Current stacksize for task 236: unlimited
  | Current stacksize for task 237: unlimited
  | Current stacksize for task 238: unlimited
  | Current stacksize for task 239: unlimited
  | Current stacksize for task 240: unlimited
  | Current stacksize for task 241: unlimited
  | Current stacksize for task 242: unlimited
  | Current stacksize for task 243: unlimited
  | Current stacksize for task 244: unlimited
  | Current stacksize for task 245: unlimited
  | Current stacksize for task 246: unlimited
  | Current stacksize for task 247: unlimited
  | Current stacksize for task 248: unlimited
  | Current stacksize for task 249: unlimited
  | Current stacksize for task 250: unlimited
  | Current stacksize for task 251: unlimited
  | Current stacksize for task 252: unlimited
  | Current stacksize for task 253: unlimited
  | Current stacksize for task 254: unlimited
  | Current stacksize for task 255: unlimited
  | Current stacksize for task 256: unlimited
  | Current stacksize for task 257: unlimited
  | Current stacksize for task 258: unlimited
  | Current stacksize for task 259: unlimited
  | Current stacksize for task 260: unlimited
  | Current stacksize for task 261: unlimited
  | Current stacksize for task 262: unlimited
  | Current stacksize for task 263: unlimited
  | Current stacksize for task 264: unlimited
  | Current stacksize for task 265: unlimited
  | Current stacksize for task 266: unlimited
  | Current stacksize for task 267: unlimited
  | Current stacksize for task 268: unlimited
  | Current stacksize for task 269: unlimited
  | Current stacksize for task 270: unlimited
  | Current stacksize for task 271: unlimited
  | Current stacksize for task 272: unlimited
  | Current stacksize for task 273: unlimited
  | Current stacksize for task 274: unlimited
  | Current stacksize for task 275: unlimited
  | Current stacksize for task 276: unlimited
  | Current stacksize for task 277: unlimited
  | Current stacksize for task 278: unlimited
  | Current stacksize for task 279: unlimited
  | Current stacksize for task 280: unlimited
  | Current stacksize for task 281: unlimited
  | Current stacksize for task 282: unlimited
  | Current stacksize for task 283: unlimited
  | Current stacksize for task 284: unlimited
  | Current stacksize for task 285: unlimited
  | Current stacksize for task 286: unlimited
  | Current stacksize for task 287: unlimited
  | Current stacksize for task 288: unlimited
  | Current stacksize for task 289: unlimited
  | Current stacksize for task 290: unlimited
  | Current stacksize for task 291: unlimited
  | Current stacksize for task 292: unlimited
  | Current stacksize for task 293: unlimited
  | Current stacksize for task 294: unlimited
  | Current stacksize for task 295: unlimited
  | Current stacksize for task 296: unlimited
  | Current stacksize for task 297: unlimited
  | Current stacksize for task 298: unlimited
  | Current stacksize for task 299: unlimited
  | Current stacksize for task 300: unlimited
  | Current stacksize for task 301: unlimited
  | Current stacksize for task 302: unlimited
  | Current stacksize for task 303: unlimited
  | Current stacksize for task 304: unlimited
  | Current stacksize for task 305: unlimited
  | Current stacksize for task 306: unlimited
  | Current stacksize for task 307: unlimited
  | Current stacksize for task 308: unlimited
  | Current stacksize for task 309: unlimited
  | Current stacksize for task 310: unlimited
  | Current stacksize for task 311: unlimited
  | Current stacksize for task 312: unlimited
  | Current stacksize for task 313: unlimited
  | Current stacksize for task 314: unlimited
  | Current stacksize for task 315: unlimited
  | Current stacksize for task 316: unlimited
  | Current stacksize for task 317: unlimited
  | Current stacksize for task 318: unlimited
  | Current stacksize for task 319: unlimited
  | Current stacksize for task 320: unlimited
  | Current stacksize for task 321: unlimited
  | Current stacksize for task 322: unlimited
  | Current stacksize for task 323: unlimited
  | Current stacksize for task 324: unlimited
  | Current stacksize for task 325: unlimited
  | Current stacksize for task 326: unlimited
  | Current stacksize for task 327: unlimited
  | Current stacksize for task 328: unlimited
  | Current stacksize for task 329: unlimited
  | Current stacksize for task 330: unlimited
  | Current stacksize for task 331: unlimited
  | Current stacksize for task 332: unlimited
  | Current stacksize for task 333: unlimited
  | Current stacksize for task 334: unlimited
  | Current stacksize for task 335: unlimited
  | Current stacksize for task 336: unlimited
  | Current stacksize for task 337: unlimited
  | Current stacksize for task 338: unlimited
  | Current stacksize for task 339: unlimited
  | Current stacksize for task 340: unlimited
  | Current stacksize for task 341: unlimited
  | Current stacksize for task 342: unlimited
  | Current stacksize for task 343: unlimited
  | Current stacksize for task 344: unlimited
  | Current stacksize for task 345: unlimited
  | Current stacksize for task 346: unlimited
  | Current stacksize for task 347: unlimited
  | Current stacksize for task 348: unlimited
  | Current stacksize for task 349: unlimited
  | Current stacksize for task 350: unlimited
  | Current stacksize for task 351: unlimited
  | Current stacksize for task 352: unlimited
  | Current stacksize for task 353: unlimited
  | Current stacksize for task 354: unlimited
  | Current stacksize for task 355: unlimited
  | Current stacksize for task 356: unlimited
  | Current stacksize for task 357: unlimited
  | Current stacksize for task 358: unlimited
  | Current stacksize for task 359: unlimited
  | Current stacksize for task 360: unlimited
  | Current stacksize for task 361: unlimited
  | Current stacksize for task 362: unlimited
  | Current stacksize for task 363: unlimited
  | Current stacksize for task 364: unlimited
  | Current stacksize for task 365: unlimited
  | Current stacksize for task 366: unlimited
  | Current stacksize for task 367: unlimited
  | Current stacksize for task 368: unlimited
  | Current stacksize for task 369: unlimited
  | Current stacksize for task 370: unlimited
  | Current stacksize for task 371: unlimited
  | Current stacksize for task 372: unlimited
  | Current stacksize for task 373: unlimited
  | Current stacksize for task 374: unlimited
  | Current stacksize for task 375: unlimited
  | Current stacksize for task 376: unlimited
  | Current stacksize for task 377: unlimited
  | Current stacksize for task 378: unlimited
  | Current stacksize for task 379: unlimited
  | Current stacksize for task 380: unlimited
  | Current stacksize for task 381: unlimited
  | Current stacksize for task 382: unlimited
  | Current stacksize for task 383: unlimited
  | Current stacksize for task 384: unlimited
  | Current stacksize for task 385: unlimited
  | Current stacksize for task 386: unlimited
  | Current stacksize for task 387: unlimited
  | Current stacksize for task 388: unlimited
  | Current stacksize for task 389: unlimited
  | Current stacksize for task 390: unlimited
  | Current stacksize for task 391: unlimited
  | Current stacksize for task 392: unlimited
  | Current stacksize for task 393: unlimited
  | Current stacksize for task 394: unlimited
  | Current stacksize for task 395: unlimited
  | Current stacksize for task 396: unlimited
  | Current stacksize for task 397: unlimited
  | Current stacksize for task 398: unlimited
  | Current stacksize for task 399: unlimited
  | Current stacksize for task 400: unlimited
  | Current stacksize for task 401: unlimited
  | Current stacksize for task 402: unlimited
  | Current stacksize for task 403: unlimited
  | Current stacksize for task 404: unlimited
  | Current stacksize for task 405: unlimited
  | Current stacksize for task 406: unlimited
  | Current stacksize for task 407: unlimited
  | Current stacksize for task 408: unlimited
  | Current stacksize for task 409: unlimited
  | Current stacksize for task 410: unlimited
  | Current stacksize for task 411: unlimited
  | Current stacksize for task 412: unlimited
  | Current stacksize for task 413: unlimited
  | Current stacksize for task 414: unlimited
  | Current stacksize for task 415: unlimited
  | Current stacksize for task 416: unlimited
  | Current stacksize for task 417: unlimited
  | Current stacksize for task 418: unlimited
  | Current stacksize for task 419: unlimited
  | Current stacksize for task 420: unlimited
  | Current stacksize for task 421: unlimited
  | Current stacksize for task 422: unlimited
  | Current stacksize for task 423: unlimited
  | Current stacksize for task 424: unlimited
  | Current stacksize for task 425: unlimited
  | Current stacksize for task 426: unlimited
  | Current stacksize for task 427: unlimited
  | Current stacksize for task 428: unlimited
  | Current stacksize for task 429: unlimited
  | Current stacksize for task 430: unlimited
  | Current stacksize for task 431: unlimited
  | Current stacksize for task 432: unlimited
  | Current stacksize for task 433: unlimited
  | Current stacksize for task 434: unlimited
  | Current stacksize for task 435: unlimited
  | Current stacksize for task 436: unlimited
  | Current stacksize for task 437: unlimited
  | Current stacksize for task 438: unlimited
  | Current stacksize for task 439: unlimited
  | Current stacksize for task 440: unlimited
  | Current stacksize for task 441: unlimited
  | Current stacksize for task 442: unlimited
  | Current stacksize for task 443: unlimited
  | Current stacksize for task 444: unlimited
  | Current stacksize for task 445: unlimited
  | Current stacksize for task 446: unlimited
  | Current stacksize for task 447: unlimited
  | Current stacksize for task 448: unlimited
  | Current stacksize for task 449: unlimited
  | Current stacksize for task 450: unlimited
  | Current stacksize for task 451: unlimited
  | Current stacksize for task 452: unlimited
  | Current stacksize for task 453: unlimited
  | Current stacksize for task 454: unlimited
  | Current stacksize for task 455: unlimited
  | Current stacksize for task 456: unlimited
  | Current stacksize for task 457: unlimited
  | Current stacksize for task 458: unlimited
  | Current stacksize for task 459: unlimited
  | Current stacksize for task 460: unlimited
  | Current stacksize for task 461: unlimited
  | Current stacksize for task 462: unlimited
  | Current stacksize for task 463: unlimited
  | Current stacksize for task 464: unlimited
  | Current stacksize for task 465: unlimited
  | Current stacksize for task 466: unlimited
  | Current stacksize for task 467: unlimited
  | Current stacksize for task 468: unlimited
  | Current stacksize for task 469: unlimited
  | Current stacksize for task 470: unlimited
  | Current stacksize for task 471: unlimited
  | Current stacksize for task 472: unlimited
  | Current stacksize for task 473: unlimited
  | Current stacksize for task 474: unlimited
  | Current stacksize for task 475: unlimited
  | Current stacksize for task 476: unlimited
  | Current stacksize for task 477: unlimited
  | Current stacksize for task 478: unlimited
  | Current stacksize for task 479: unlimited
  | Current stacksize for task 480: unlimited
  | Current stacksize for task 481: unlimited
  | Current stacksize for task 482: unlimited
  | Current stacksize for task 483: unlimited
  | Current stacksize for task 484: unlimited
  | Current stacksize for task 485: unlimited
  | Current stacksize for task 486: unlimited
  | Current stacksize for task 487: unlimited
  | Current stacksize for task 488: unlimited
  | Current stacksize for task 489: unlimited
  | Current stacksize for task 490: unlimited
  | Current stacksize for task 491: unlimited
  | Current stacksize for task 492: unlimited
  | Current stacksize for task 493: unlimited
  | Current stacksize for task 494: unlimited
  | Current stacksize for task 495: unlimited
  | Current stacksize for task 496: unlimited
  | Current stacksize for task 497: unlimited
  | Current stacksize for task 498: unlimited
  | Current stacksize for task 499: unlimited
  | Current stacksize for task 500: unlimited
  | Current stacksize for task 501: unlimited
  | Current stacksize for task 502: unlimited
  | Current stacksize for task 503: unlimited
  | Current stacksize for task 504: unlimited
  | Current stacksize for task 505: unlimited
  | Current stacksize for task 506: unlimited
  | Current stacksize for task 507: unlimited
  | Current stacksize for task 508: unlimited
  | Current stacksize for task 509: unlimited
  | Current stacksize for task 510: unlimited
  | Current stacksize for task 511: unlimited

  Consistency checks for the contents of control.in are next.

  MPI_IN_PLACE appears to work with this MPI implementation.
  | Keeping use_mpi_in_place .true. (see manual).
  Target number of points in a grid batch is not set. Defaulting to  100
  Method for grid partitioning is not set. Defaulting to parallel hash+maxmin partitioning.
  Batch size limit is not set. Defaulting to    200
  By default, will store active basis functions for each batch.
  If in need of memory, prune_basis_once .false. can be used to disable this option.
  communication_type for Hartree potential was not specified.
  Defaulting to calc_hartree .
  Defaulting to Pulay charge density mixer.
  Pulay mixer: Number of relevant iterations not set.
  Defaulting to    8 iterations.
  Pulay mixer: Number of initial linear mixing iterations not set.
  Defaulting to    0 iterations.
  Work space size for distributed Hartree potential not set.
  Defaulting to   0.200000E+03 MB.
  Mixing parameter for charge density mixing has not been set.
  Using default: charge_mix_param =     0.0500.
  The mixing parameter will be adjusted in iteration number     2 of the first full s.c.f. cycle only.
  Algorithm-dependent basis array size parameters:
  | n_max_pulay                         :        8
  Maximum number of self-consistency iterations not provided.
  Presetting  1000 iterations.
  Presetting      1001 iterations before the initial mixing cycle
  is restarted anyway using the sc_init_iter criterion / keyword.
  Presetting a factor      1.000 between actual scf density residual
  and density convergence criterion sc_accuracy_rho below which sc_init_iter
  takes no effect.
  Calculation of forces was not defined in control.in. No forces will be calculated.
  Geometry relaxation not requested: no relaxation will be performed.
  No accuracy limit for integral partition fn. given. Defaulting to  0.1000E-14.
  No threshold value for u(r) in integrations given. Defaulting to  0.1000E-05.
  No occupation type (smearing scheme) given. Defaulting to Gaussian broadening, width =  0.1000E-01 eV.
  The width will be adjusted in iteration number     2 of the first full s.c.f. cycle only.
  S.C.F. convergence parameters will be adjusted in iteration number     2 of the first full s.c.f. cycle only.
  No accuracy for occupation numbers given. Defaulting to  0.1000E-12.
  No threshold value for occupation numbers given. Defaulting to  0.0000E+00.
  No accuracy for fermi level given. Defaulting to  0.1000E-19.
  Maximum # of iterations to find E_F not set. Defaulting to  200.
  Preferred method for the eigenvalue solver ('KS_method') not specified in 'control.in'.
  Defaulting to serial version, LAPACK (via ELSI), since more k-points than CPUs available.
  Will not use alltoall communication since running on < 1024 CPUs.
  Threshold for basis singularities not set.
  Default threshold for basis singularities:  0.1000E-04
  partition_type (choice of integration weights) for integrals was not specified.
  | Using a version of the partition function of Stratmann and coworkers ('stratmann_sparse').
  | At each grid point, the set of atoms used to build the partition table is smoothly restricted to
  | only those atoms whose free-atom density would be non-zero at that grid point.
  Partitioning for Hartree potential was not defined. Using partition_type for integrals.
  | Adjusted default value of keyword multip_moments_threshold to:       0.10000000E-11
  | This value may affect high angular momentum components of the Hartree potential in periodic systems.
  Angular momentum expansion for Kerker preconditioner not set explicitly.
  | Using default value of   0
  No explicit requirement for turning off preconditioner.
  | By default, it will be turned off when the charge convergence reaches
  | sc_accuracy_rho  =   0.100000E-06
  No special mixing parameter while Kerker preconditioner is on.
  Using default: charge_mix_param =     0.0500.
  No q(lm)/r^(l+1) cutoff set for long-range Hartree potential.
  | Using default value of  0.100000E-09 .
  | Verify using the multipole_threshold keyword.
  Defaulting to new monopole extrapolation.
  Density update method: automatic selection selected.
  Using density matrix based charge density update.
  Using density matrix based charge density update.
  Using packed matrix style: index .
  Defaulting to use time-reversal symmetry for k-point grid.
  Charge integration errors on the 3D integration grid will be compensated
  by explicit normalization and distribution of residual charges.
  Use the "compensate_multipole_errors" flag to change this behaviour.
  Set 'collect_eigenvectors' to be '.true.' for all serial calculations. This is mandatory.
  Set 'collect_eigenvectors' to be '.true.' for KS_method lapack_fast and serial.

  Consistency checks for the contents of geometry.in are next.


  Range separation radius for Ewald summation (hartree_convergence_parameter):      4.05433252 bohr.
  Number of empty states per atom not set in control.in - providing a guess from actual geometry.
  | Total number of empty states used during s.c.f. cycle:       11
  If you use a very high smearing, use empty_states (per atom!) in control.in to increase this value.

  Structure-dependent array size parameters: 
  | Maximum number of distinct radial functions  :       44
  | Maximum number of basis functions            :       98
  | Number of Kohn-Sham states (occupied + empty):       51
------------------------------------------------------------

------------------------------------------------------------
          Preparing all fixed parts of the calculation.
------------------------------------------------------------
  Determining machine precision:
     2.2250738585072014E-308
  Setting up grids for atomic and cluster calculations.

  Creating wave function, potential, and density for free atoms.
  Runtime choices for atomic solver:
  | atomic solver xc        : PBE
  | compute density gradient: 1
  | compute kinetic density : F

  Species: Ba

  List of occupied orbitals and eigenvalues:
    n    l              occ      energy [Ha]    energy [eV]
    1    0           2.0000     -1428.759176    -38878.5153
    2    0           2.0000      -218.156321     -5936.3355
    3    0           2.0000       -45.759571     -1245.1813
    4    0           2.0000        -8.961354      -243.8508
    5    0           2.0000        -1.235311       -33.6145
    6    0           2.0000        -0.117372        -3.1939
    2    1           6.0000      -195.503522     -5319.9215
    3    1           6.0000       -38.566500     -1049.4479
    4    1           6.0000        -6.648037      -180.9023
    5    1           6.0000        -0.686503       -18.6807
    3    2          10.0000       -28.146810      -765.9137
    4    2          10.0000        -3.294406       -89.6453


  Species: Zr

  List of occupied orbitals and eigenvalues:
    n    l              occ      energy [Ha]    energy [eV]
    1    0           2.0000      -668.722933    -18196.8768
    2    0           2.0000       -91.076987     -2478.3309
    3    0           2.0000       -14.873383      -404.7254
    4    0           2.0000        -1.994212       -54.2653
    5    0           2.0000        -0.156460        -4.2575
    2    1           6.0000       -81.194469     -2209.4139
    3    1           6.0000       -11.667913      -317.5001
    4    1           6.0000        -1.184217       -32.2242
    3    2          10.0000        -6.414313      -174.5423
    4    2           2.0000        -0.125045        -3.4027


  Species: S

  List of occupied orbitals and eigenvalues:
    n    l              occ      energy [Ha]    energy [eV]
    1    0           2.0000       -88.680731     -2413.1255
    2    0           2.0000        -7.781719      -211.7513
    3    0           2.0000        -0.633662       -17.2428
    2    1           6.0000        -5.751976      -156.5192
    3    1           4.0000        -0.257086        -6.9957


  Adding cutoff potential to free-atom effective potential.
  Creating fixed part of basis set: Ionic, confined, hydrogenic.

  Ba                   ion:

  List of free ionic orbitals and eigenvalues:
    n    l      energy [Ha]    energy [eV]
    1    0     -1428.980456    -38884.5366
    2    0      -218.370478     -5942.1630
    3    0       -45.972614     -1250.9785
    4    0        -9.173714      -249.6295
    5    0        -1.445296       -39.3285
    6    0        -0.278663        -7.5828
    2    1      -195.717553     -5325.7456
    3    1       -38.779502     -1055.2439
    4    1        -6.860306      -186.6784
    5    1        -0.894905       -24.3516
    3    2       -28.359770      -771.7086
    4    2        -3.506466       -95.4158


  List of ionic basis orbitals and eigenvalues:
    n    l      energy [Ha]    energy [eV]    outer radius [A]
    5    2        -0.260030        -7.0758       7.007670
    4    3        -0.142743        -3.8842       7.093864


  Ba                   hydrogenic:

  List of hydrogenic basis orbitals: 
    n    l      effective z      eigenvalue [eV]  inner max. [A]     outer max. [A]     outer radius [A]   
    3    1         2.700000       -11.0183           0.585865           2.360755           7.358861
    4    0         3.300000        -9.1387           0.118110           3.896996           7.449375
    4    3         5.800000       -28.6057           1.465516           1.465516           5.905331
    5    4         7.400000       -29.8017           1.782126           1.782126           6.354768


  Zr                   ion:

  List of free ionic orbitals and eigenvalues:
    n    l      energy [Ha]    energy [eV]
    1    0      -669.421026    -18215.8729
    2    0       -91.769634     -2497.1788
    3    0       -15.560469      -423.4219
    4    0        -2.663352       -72.4735
    5    0        -0.640863       -17.4388
    2    1       -81.886574     -2228.2470
    3    1       -12.354892      -336.1937
    4    1        -1.844122       -50.1811
    3    2        -7.101714      -193.2475
    4    2        -0.726930       -19.7808


  List of ionic basis orbitals and eigenvalues:
    n    l      energy [Ha]    energy [eV]    outer radius [A]
    4    2        -0.726920       -19.7805       5.008334
    5    1        -0.469561       -12.7774       5.455794
    5    0        -0.640774       -17.4363       5.389503


  Zr                   hydrogenic:

  List of hydrogenic basis orbitals: 
    n    l      effective z      eigenvalue [eV]  inner max. [A]     outer max. [A]     outer radius [A]   
    4    3         7.200000       -44.0822           1.169212           1.169212           5.008334
    5    4        10.400000       -58.8635           1.273673           1.273673           4.887365


  S                    ion:

  List of free ionic orbitals and eigenvalues:
    n    l      energy [Ha]    energy [eV]
    1    0       -89.703778     -2440.9640
    2    0        -8.775428      -238.7916
    3    0        -1.470343       -40.0101
    2    1        -6.747660      -183.6132
    3    1        -1.048627       -28.5346


  List of ionic basis orbitals and eigenvalues:
    n    l      energy [Ha]    energy [eV]    outer radius [A]
    3    2        -0.495605       -13.4861       5.386362
    3    0        -1.470336       -40.0099       3.967934


  S                    hydrogenic:

  List of hydrogenic basis orbitals: 
    n    l      effective z      eigenvalue [eV]  inner max. [A]     outer max. [A]     outer radius [A]   
    2    1         1.800000       -11.0118           1.168531           1.168531           5.452614
    4    3         7.000000       -41.6672           1.212182           1.212182           5.066981
    4    2         6.200000       -32.6848           0.582121           1.814567           5.386362
    5    4        10.800000       -63.4785           1.227092           1.227092           4.766538

  Creating atomic-like basis functions for current effective potential.

  Species Ba                  :

  List of atomic basis orbitals and eigenvalues:
    n    l      energy [Ha]    energy [eV]    outer radius [A]
    1    0     -1428.759176    -38878.5153       0.181180
    2    0      -218.156321     -5936.3355       0.481781
    3    0       -45.759571     -1245.1813       1.053516
    4    0        -8.961354      -243.8508       2.303735
    5    0        -1.235311       -33.6145       5.905331
    6    0        -0.117372        -3.1939       7.358861
    2    1      -195.503522     -5319.9215       0.493705
    3    1       -38.566500     -1049.4479       1.119920
    4    1        -6.648037      -180.9023       2.603304
    5    1        -0.686503       -18.6807       6.838410
    3    2       -28.146810      -765.9137       1.250174
    4    2        -3.294406       -89.6453       3.490975


  Species Zr                  :

  List of atomic basis orbitals and eigenvalues:
    n    l      energy [Ha]    energy [eV]    outer radius [A]
    1    0      -668.722933    -18196.8768       0.259930
    2    0       -91.076987     -2478.3309       0.725827
    3    0       -14.873383      -404.7254       1.771771
    4    0        -1.994212       -54.2653       4.541709
    5    0        -0.156460        -4.2575       5.455794
    2    1       -81.194469     -2209.4139       0.743792
    3    1       -11.667913      -317.5001       1.930067
    4    1        -1.184217       -32.2242       5.008334
    3    2        -6.414313      -174.5423       2.434714
    4    2        -0.125045        -3.4027       5.389503


  Species S                   :

  List of atomic basis orbitals and eigenvalues:
    n    l      energy [Ha]    energy [eV]    outer radius [A]
    1    0       -88.680731     -2413.1255       0.682391
    2    0        -7.781719      -211.7513       2.289014
    3    0        -0.633662       -17.2428       5.256262
    2    1        -5.751976      -156.5192       2.555240
    3    1        -0.257086        -6.9957       5.386362

  Assembling full basis from fixed parts.
  | Species Ba :   atomic orbital   1 s accepted.
  | Species Ba :   atomic orbital   2 s accepted.
  | Species Ba :   atomic orbital   3 s accepted.
  | Species Ba :   atomic orbital   4 s accepted.
  | Species Ba :   atomic orbital   5 s accepted.
  | Species Ba :   atomic orbital   6 s accepted.
  | Species Ba :    hydro orbital   4 s accepted.
  | Species Ba :   atomic orbital   2 p accepted.
  | Species Ba :   atomic orbital   3 p accepted.
  | Species Ba :   atomic orbital   4 p accepted.
  | Species Ba :   atomic orbital   5 p accepted.
  | Species Ba :    hydro orbital   3 p accepted.
  | Species Ba :   atomic orbital   3 d accepted.
  | Species Ba :   atomic orbital   4 d accepted.
  | Species Ba :    ionic orbital   5 d accepted.
  | Species Ba :    hydro orbital   4 f accepted.
  | Species Ba :    ionic orbital   4 f accepted.
  | Species Ba :    hydro orbital   5 g accepted.
  | Species Zr :   atomic orbital   1 s accepted.
  | Species Zr :   atomic orbital   2 s accepted.
  | Species Zr :   atomic orbital   3 s accepted.
  | Species Zr :   atomic orbital   4 s accepted.
  | Species Zr :    ionic orbital   5 s accepted.
  | Species Zr :   atomic orbital   5 s accepted.
  | Species Zr :   atomic orbital   2 p accepted.
  | Species Zr :   atomic orbital   3 p accepted.
  | Species Zr :   atomic orbital   4 p accepted.
  | Species Zr :    ionic orbital   5 p accepted.
  | Species Zr :   atomic orbital   3 d accepted.
  | Species Zr :    ionic orbital   4 d accepted.
  | Species Zr :   atomic orbital   4 d accepted.
  | Species Zr :    hydro orbital   4 f accepted.
  | Species Zr :    hydro orbital   5 g accepted.
  | Species S :   atomic orbital   1 s accepted.
  | Species S :   atomic orbital   2 s accepted.
  | Species S :    ionic orbital   3 s accepted.
  | Species S :   atomic orbital   3 s accepted.
  | Species S :   atomic orbital   2 p accepted.
  | Species S :   atomic orbital   3 p accepted.
  | Species S :    hydro orbital   2 p accepted.
  | Species S :    ionic orbital   3 d accepted.
  | Species S :    hydro orbital   4 d accepted.
  | Species S :    hydro orbital   4 f accepted.
  | Species S :    hydro orbital   5 g accepted.

  Basis size parameters after reduction:
  | Total number of radial functions:       44
  | Total number of basis functions :       98

  Per-task memory consumption for arrays in subroutine allocate_ext:
  |          16.450524MB.
  Testing on-site integration grid accuracy.
  |  Species  Function  <phi|h_atom|phi> (log., in eV)  <phi|h_atom|phi> (rad., in eV)
           1        1             -38878.5152842456             -38878.5102682711
           1        2              -5936.3355416432              -5936.3354463181
           1        3              -1245.1812725370              -1245.1812651319
           1        4               -243.8508498583               -243.8508475766
           1        5                -33.6145129113                -33.6145123744
           1        6                 -3.1953474132                 -3.1940995993
           1        7                  1.7217240859                  1.7400532086
           1        8              -5319.9215180603              -5319.9215128547
           1        9              -1049.4478540965              -1049.4478516474
           1       10               -180.9022912879               -180.9022896989
           1       11                -18.6806852844                -18.6806849603
           1       12                 -0.6584997172                 -0.6579606663
           1       13               -765.9136710812               -765.9136703559
           1       14                -89.6453457527                -89.6453448903
           1       15                 -1.8801763382                 -1.8802515933
           1       16                  8.1569476582                  8.1569486797
           1       17                  8.6054070843                  8.6053383614
           1       18                 17.5600091881                 17.5599879188
           2       19             -18196.8768435665             -18196.8755705220
           2       20              -2478.3309144498              -2478.3308916069
           2       21               -404.7253557491               -404.7253534742
           2       22                -54.2652640714                -54.2652635286
           2       23                 -3.7119764275                 -3.7119846577
           2       24                  4.5875772639                  4.5868905659
           2       25              -2209.4139097225              -2209.4139071812
           2       26               -317.5000788444               -317.5000777556
           2       27                -32.2241784576                -32.2241781542
           2       28                 -0.3319152745                 -0.3319660629
           2       29               -174.5423275335               -174.5423272575
           2       30                 -3.0504029429                 -3.0504025329
           2       31                  4.9970437712                  4.9966978803
           2       32                 16.8632595236                 16.8632598612
           2       33                 37.0867992037                 37.0867988501
           3       34              -2413.1254568977              -2413.1254096663
           3       35               -211.7513411281               -211.7513404762
           3       36                -16.9725280787                -16.9725279206
           3       37                  7.6024436204                  7.6024549059
           3       38               -156.5192206929               -156.5192205451
           3       39                 -6.9959757887                 -6.9959777655
           3       40                  6.8896462808                  6.8895564741
           3       41                  6.0214250550                  6.0214220200
           3       42                 19.6206468977                 19.6206494558
           3       43                 24.7008710786                 24.7008710738
           3       44                 47.5292252001                 47.5292260486

  Preparing densities etc. for the partition functions (integrals / Hartree potential).

  Preparations completed.
  max(cpu_time)          :      0.640 s.
  Wall clock time (cpu1) :      0.703 s.
------------------------------------------------------------

  Initializing index lists of integration centers etc. from given atomic structure:
  Mapping all atomic coordinates to central unit cell.

  Initializing the k-points
  Using symmetry for reducing the k-points
  | k-points reduced from:     3072 to     1540
  | Number of k-points                             :      1540
  The eigenvectors in the calculations are COMPLEX.
  | K-points in task   0:         3
  | K-points in task   1:         4
  | K-points in task   2:         4
  | K-points in task   3:         4
  | K-points in task   4:         4
  | K-points in task   5:         3
  | K-points in task   6:         3
  | K-points in task   7:         3
  | K-points in task   8:         3
  | K-points in task   9:         3
  | K-points in task  10:         3
  | K-points in task  11:         3
  | K-points in task  12:         3
  | K-points in task  13:         3
  | K-points in task  14:         3
  | K-points in task  15:         3
  | K-points in task  16:         3
  | K-points in task  17:         3
  | K-points in task  18:         3
  | K-points in task  19:         3
  | K-points in task  20:         3
  | K-points in task  21:         3
  | K-points in task  22:         3
  | K-points in task  23:         3
  | K-points in task  24:         3
  | K-points in task  25:         3
  | K-points in task  26:         3
  | K-points in task  27:         3
  | K-points in task  28:         3
  | K-points in task  29:         3
  | K-points in task  30:         3
  | K-points in task  31:         3
  | K-points in task  32:         3
  | K-points in task  33:         3
  | K-points in task  34:         3
  | K-points in task  35:         3
  | K-points in task  36:         3
  | K-points in task  37:         3
  | K-points in task  38:         3
  | K-points in task  39:         3
  | K-points in task  40:         3
  | K-points in task  41:         3
  | K-points in task  42:         3
  | K-points in task  43:         3
  | K-points in task  44:         3
  | K-points in task  45:         3
  | K-points in task  46:         3
  | K-points in task  47:         3
  | K-points in task  48:         3
  | K-points in task  49:         3
  | K-points in task  50:         3
  | K-points in task  51:         3
  | K-points in task  52:         3
  | K-points in task  53:         3
  | K-points in task  54:         3
  | K-points in task  55:         3
  | K-points in task  56:         3
  | K-points in task  57:         3
  | K-points in task  58:         3
  | K-points in task  59:         3
  | K-points in task  60:         3
  | K-points in task  61:         3
  | K-points in task  62:         3
  | K-points in task  63:         3
  | K-points in task  64:         3
  | K-points in task  65:         3
  | K-points in task  66:         3
  | K-points in task  67:         3
  | K-points in task  68:         3
  | K-points in task  69:         3
  | K-points in task  70:         3
  | K-points in task  71:         3
  | K-points in task  72:         3
  | K-points in task  73:         3
  | K-points in task  74:         3
  | K-points in task  75:         3
  | K-points in task  76:         3
  | K-points in task  77:         3
  | K-points in task  78:         3
  | K-points in task  79:         3
  | K-points in task  80:         3
  | K-points in task  81:         3
  | K-points in task  82:         3
  | K-points in task  83:         3
  | K-points in task  84:         3
  | K-points in task  85:         3
  | K-points in task  86:         3
  | K-points in task  87:         3
  | K-points in task  88:         3
  | K-points in task  89:         3
  | K-points in task  90:         3
  | K-points in task  91:         3
  | K-points in task  92:         3
  | K-points in task  93:         3
  | K-points in task  94:         3
  | K-points in task  95:         3
  | K-points in task  96:         3
  | K-points in task  97:         3
  | K-points in task  98:         3
  | K-points in task  99:         3
  | K-points in task 100:         3
  | K-points in task 101:         3
  | K-points in task 102:         3
  | K-points in task 103:         3
  | K-points in task 104:         3
  | K-points in task 105:         3
  | K-points in task 106:         3
  | K-points in task 107:         3
  | K-points in task 108:         3
  | K-points in task 109:         3
  | K-points in task 110:         3
  | K-points in task 111:         3
  | K-points in task 112:         3
  | K-points in task 113:         3
  | K-points in task 114:         3
  | K-points in task 115:         3
  | K-points in task 116:         3
  | K-points in task 117:         3
  | K-points in task 118:         3
  | K-points in task 119:         3
  | K-points in task 120:         3
  | K-points in task 121:         3
  | K-points in task 122:         3
  | K-points in task 123:         3
  | K-points in task 124:         3
  | K-points in task 125:         3
  | K-points in task 126:         3
  | K-points in task 127:         3
  | K-points in task 128:         3
  | K-points in task 129:         3
  | K-points in task 130:         3
  | K-points in task 131:         3
  | K-points in task 132:         3
  | K-points in task 133:         3
  | K-points in task 134:         3
  | K-points in task 135:         3
  | K-points in task 136:         3
  | K-points in task 137:         3
  | K-points in task 138:         3
  | K-points in task 139:         3
  | K-points in task 140:         3
  | K-points in task 141:         3
  | K-points in task 142:         3
  | K-points in task 143:         3
  | K-points in task 144:         3
  | K-points in task 145:         3
  | K-points in task 146:         3
  | K-points in task 147:         3
  | K-points in task 148:         3
  | K-points in task 149:         3
  | K-points in task 150:         3
  | K-points in task 151:         3
  | K-points in task 152:         3
  | K-points in task 153:         3
  | K-points in task 154:         3
  | K-points in task 155:         3
  | K-points in task 156:         3
  | K-points in task 157:         3
  | K-points in task 158:         3
  | K-points in task 159:         3
  | K-points in task 160:         3
  | K-points in task 161:         3
  | K-points in task 162:         3
  | K-points in task 163:         3
  | K-points in task 164:         3
  | K-points in task 165:         3
  | K-points in task 166:         3
  | K-points in task 167:         3
  | K-points in task 168:         3
  | K-points in task 169:         3
  | K-points in task 170:         3
  | K-points in task 171:         3
  | K-points in task 172:         3
  | K-points in task 173:         3
  | K-points in task 174:         3
  | K-points in task 175:         3
  | K-points in task 176:         3
  | K-points in task 177:         3
  | K-points in task 178:         3
  | K-points in task 179:         3
  | K-points in task 180:         3
  | K-points in task 181:         3
  | K-points in task 182:         3
  | K-points in task 183:         3
  | K-points in task 184:         3
  | K-points in task 185:         3
  | K-points in task 186:         3
  | K-points in task 187:         3
  | K-points in task 188:         3
  | K-points in task 189:         3
  | K-points in task 190:         3
  | K-points in task 191:         3
  | K-points in task 192:         3
  | K-points in task 193:         3
  | K-points in task 194:         3
  | K-points in task 195:         3
  | K-points in task 196:         3
  | K-points in task 197:         3
  | K-points in task 198:         3
  | K-points in task 199:         3
  | K-points in task 200:         3
  | K-points in task 201:         3
  | K-points in task 202:         3
  | K-points in task 203:         3
  | K-points in task 204:         3
  | K-points in task 205:         3
  | K-points in task 206:         3
  | K-points in task 207:         3
  | K-points in task 208:         3
  | K-points in task 209:         3
  | K-points in task 210:         3
  | K-points in task 211:         3
  | K-points in task 212:         3
  | K-points in task 213:         3
  | K-points in task 214:         3
  | K-points in task 215:         3
  | K-points in task 216:         3
  | K-points in task 217:         3
  | K-points in task 218:         3
  | K-points in task 219:         3
  | K-points in task 220:         3
  | K-points in task 221:         3
  | K-points in task 222:         3
  | K-points in task 223:         3
  | K-points in task 224:         3
  | K-points in task 225:         3
  | K-points in task 226:         3
  | K-points in task 227:         3
  | K-points in task 228:         3
  | K-points in task 229:         3
  | K-points in task 230:         3
  | K-points in task 231:         3
  | K-points in task 232:         3
  | K-points in task 233:         3
  | K-points in task 234:         3
  | K-points in task 235:         3
  | K-points in task 236:         3
  | K-points in task 237:         3
  | K-points in task 238:         3
  | K-points in task 239:         3
  | K-points in task 240:         3
  | K-points in task 241:         3
  | K-points in task 242:         3
  | K-points in task 243:         3
  | K-points in task 244:         3
  | K-points in task 245:         3
  | K-points in task 246:         3
  | K-points in task 247:         3
  | K-points in task 248:         3
  | K-points in task 249:         3
  | K-points in task 250:         3
  | K-points in task 251:         3
  | K-points in task 252:         3
  | K-points in task 253:         3
  | K-points in task 254:         3
  | K-points in task 255:         3
  | K-points in task 256:         3
  | K-points in task 257:         3
  | K-points in task 258:         3
  | K-points in task 259:         3
  | K-points in task 260:         3
  | K-points in task 261:         3
  | K-points in task 262:         3
  | K-points in task 263:         3
  | K-points in task 264:         3
  | K-points in task 265:         3
  | K-points in task 266:         3
  | K-points in task 267:         3
  | K-points in task 268:         3
  | K-points in task 269:         3
  | K-points in task 270:         3
  | K-points in task 271:         3
  | K-points in task 272:         3
  | K-points in task 273:         3
  | K-points in task 274:         3
  | K-points in task 275:         3
  | K-points in task 276:         3
  | K-points in task 277:         3
  | K-points in task 278:         3
  | K-points in task 279:         3
  | K-points in task 280:         3
  | K-points in task 281:         3
  | K-points in task 282:         3
  | K-points in task 283:         3
  | K-points in task 284:         3
  | K-points in task 285:         3
  | K-points in task 286:         3
  | K-points in task 287:         3
  | K-points in task 288:         3
  | K-points in task 289:         3
  | K-points in task 290:         3
  | K-points in task 291:         3
  | K-points in task 292:         3
  | K-points in task 293:         3
  | K-points in task 294:         3
  | K-points in task 295:         3
  | K-points in task 296:         3
  | K-points in task 297:         3
  | K-points in task 298:         3
  | K-points in task 299:         3
  | K-points in task 300:         3
  | K-points in task 301:         3
  | K-points in task 302:         3
  | K-points in task 303:         3
  | K-points in task 304:         3
  | K-points in task 305:         3
  | K-points in task 306:         3
  | K-points in task 307:         3
  | K-points in task 308:         3
  | K-points in task 309:         3
  | K-points in task 310:         3
  | K-points in task 311:         3
  | K-points in task 312:         3
  | K-points in task 313:         3
  | K-points in task 314:         3
  | K-points in task 315:         3
  | K-points in task 316:         3
  | K-points in task 317:         3
  | K-points in task 318:         3
  | K-points in task 319:         3
  | K-points in task 320:         3
  | K-points in task 321:         3
  | K-points in task 322:         3
  | K-points in task 323:         3
  | K-points in task 324:         3
  | K-points in task 325:         3
  | K-points in task 326:         3
  | K-points in task 327:         3
  | K-points in task 328:         3
  | K-points in task 329:         3
  | K-points in task 330:         3
  | K-points in task 331:         3
  | K-points in task 332:         3
  | K-points in task 333:         3
  | K-points in task 334:         3
  | K-points in task 335:         3
  | K-points in task 336:         3
  | K-points in task 337:         3
  | K-points in task 338:         3
  | K-points in task 339:         3
  | K-points in task 340:         3
  | K-points in task 341:         3
  | K-points in task 342:         3
  | K-points in task 343:         3
  | K-points in task 344:         3
  | K-points in task 345:         3
  | K-points in task 346:         3
  | K-points in task 347:         3
  | K-points in task 348:         3
  | K-points in task 349:         3
  | K-points in task 350:         3
  | K-points in task 351:         3
  | K-points in task 352:         3
  | K-points in task 353:         3
  | K-points in task 354:         3
  | K-points in task 355:         3
  | K-points in task 356:         3
  | K-points in task 357:         3
  | K-points in task 358:         3
  | K-points in task 359:         3
  | K-points in task 360:         3
  | K-points in task 361:         3
  | K-points in task 362:         3
  | K-points in task 363:         3
  | K-points in task 364:         3
  | K-points in task 365:         3
  | K-points in task 366:         3
  | K-points in task 367:         3
  | K-points in task 368:         3
  | K-points in task 369:         3
  | K-points in task 370:         3
  | K-points in task 371:         3
  | K-points in task 372:         3
  | K-points in task 373:         3
  | K-points in task 374:         3
  | K-points in task 375:         3
  | K-points in task 376:         3
  | K-points in task 377:         3
  | K-points in task 378:         3
  | K-points in task 379:         3
  | K-points in task 380:         3
  | K-points in task 381:         3
  | K-points in task 382:         3
  | K-points in task 383:         3
  | K-points in task 384:         3
  | K-points in task 385:         3
  | K-points in task 386:         3
  | K-points in task 387:         3
  | K-points in task 388:         3
  | K-points in task 389:         3
  | K-points in task 390:         3
  | K-points in task 391:         3
  | K-points in task 392:         3
  | K-points in task 393:         3
  | K-points in task 394:         3
  | K-points in task 395:         3
  | K-points in task 396:         3
  | K-points in task 397:         3
  | K-points in task 398:         3
  | K-points in task 399:         3
  | K-points in task 400:         3
  | K-points in task 401:         3
  | K-points in task 402:         3
  | K-points in task 403:         3
  | K-points in task 404:         3
  | K-points in task 405:         3
  | K-points in task 406:         3
  | K-points in task 407:         3
  | K-points in task 408:         3
  | K-points in task 409:         3
  | K-points in task 410:         3
  | K-points in task 411:         3
  | K-points in task 412:         3
  | K-points in task 413:         3
  | K-points in task 414:         3
  | K-points in task 415:         3
  | K-points in task 416:         3
  | K-points in task 417:         3
  | K-points in task 418:         3
  | K-points in task 419:         3
  | K-points in task 420:         3
  | K-points in task 421:         3
  | K-points in task 422:         3
  | K-points in task 423:         3
  | K-points in task 424:         3
  | K-points in task 425:         3
  | K-points in task 426:         3
  | K-points in task 427:         3
  | K-points in task 428:         3
  | K-points in task 429:         3
  | K-points in task 430:         3
  | K-points in task 431:         3
  | K-points in task 432:         3
  | K-points in task 433:         3
  | K-points in task 434:         3
  | K-points in task 435:         3
  | K-points in task 436:         3
  | K-points in task 437:         3
  | K-points in task 438:         3
  | K-points in task 439:         3
  | K-points in task 440:         3
  | K-points in task 441:         3
  | K-points in task 442:         3
  | K-points in task 443:         3
  | K-points in task 444:         3
  | K-points in task 445:         3
  | K-points in task 446:         3
  | K-points in task 447:         3
  | K-points in task 448:         3
  | K-points in task 449:         3
  | K-points in task 450:         3
  | K-points in task 451:         3
  | K-points in task 452:         3
  | K-points in task 453:         3
  | K-points in task 454:         3
  | K-points in task 455:         3
  | K-points in task 456:         3
  | K-points in task 457:         3
  | K-points in task 458:         3
  | K-points in task 459:         3
  | K-points in task 460:         3
  | K-points in task 461:         3
  | K-points in task 462:         3
  | K-points in task 463:         3
  | K-points in task 464:         3
  | K-points in task 465:         3
  | K-points in task 466:         3
  | K-points in task 467:         3
  | K-points in task 468:         3
  | K-points in task 469:         3
  | K-points in task 470:         3
  | K-points in task 471:         3
  | K-points in task 472:         3
  | K-points in task 473:         3
  | K-points in task 474:         3
  | K-points in task 475:         3
  | K-points in task 476:         3
  | K-points in task 477:         3
  | K-points in task 478:         3
  | K-points in task 479:         3
  | K-points in task 480:         3
  | K-points in task 481:         3
  | K-points in task 482:         3
  | K-points in task 483:         3
  | K-points in task 484:         3
  | K-points in task 485:         3
  | K-points in task 486:         3
  | K-points in task 487:         3
  | K-points in task 488:         3
  | K-points in task 489:         3
  | K-points in task 490:         3
  | K-points in task 491:         3
  | K-points in task 492:         3
  | K-points in task 493:         3
  | K-points in task 494:         3
  | K-points in task 495:         3
  | K-points in task 496:         3
  | K-points in task 497:         3
  | K-points in task 498:         3
  | K-points in task 499:         3
  | K-points in task 500:         3
  | K-points in task 501:         3
  | K-points in task 502:         3
  | K-points in task 503:         3
  | K-points in task 504:         3
  | K-points in task 505:         3
  | K-points in task 506:         3
  | K-points in task 507:         3
  | K-points in task 508:         3
  | K-points in task 509:         3
  | K-points in task 510:         3
  | K-points in task 511:         3
  | Number of basis functions in the Hamiltonian integrals :      3780
  | Number of basis functions in a single unit cell        :        98
  | Number of centers in hartree potential         :       904
  | Number of centers in hartree multipole         :       484
  | Number of centers in electron density summation:       346
  | Number of centers in basis integrals           :       388
  | Number of centers in integrals                 :       126
  | Number of centers in hamiltonian               :       816
  | Consuming       8229 KiB for k_phase.
  | Number of super-cells (origin) [n_cells]                     :        2025
  | Number of super-cells (after PM_index) [n_cells]             :         342
  | Number of super-cells in hamiltonian [n_cells_in_hamiltonian]:         342
  | Size of matrix packed + index [n_hamiltonian_matrix_size] :      352311

------------------------------------------------------------
          Begin self-consistency loop: Initialization.

          Date     :  20220728, Time     :  132803.564
------------------------------------------------------------
  | Estimated reciprocal-space cutoff momentum G_max:         2.39262869 bohr^-1 .
  | Reciprocal lattice points for long-range Hartree potential:      66
  Partitioning the integration grid into batches with parallel hashing+maxmin method.
  | Number of batches:      644
  | Maximal batch size:     111
  | Minimal batch size:       1
  | Average batch size:      70.528
  | Standard deviation of batch sizes:      22.898

  Integration load balanced across   512 MPI tasks.
  Work distribution over tasks is as follows:
  Task     0 has         94 integration points.
  Task     1 has         85 integration points.
  Task     2 has         88 integration points.
  Task     3 has         77 integration points.
  Task     4 has         80 integration points.
  Task     5 has         67 integration points.
  Task     6 has         69 integration points.
  Task     7 has         88 integration points.
  Task     8 has         79 integration points.
  Task     9 has         90 integration points.
  Task    10 has         70 integration points.
  Task    11 has         73 integration points.
  Task    12 has         70 integration points.
  Task    13 has         72 integration points.
  Task    14 has         63 integration points.
  Task    15 has         66 integration points.
  Task    16 has         70 integration points.
  Task    17 has         73 integration points.
  Task    18 has         90 integration points.
  Task    19 has         87 integration points.
  Task    20 has         82 integration points.
  Task    21 has        129 integration points.
  Task    22 has         64 integration points.
  Task    23 has        129 integration points.
  Task    24 has         65 integration points.
  Task    25 has        144 integration points.
  Task    26 has        122 integration points.
  Task    27 has        150 integration points.
  Task    28 has        128 integration points.
  Task    29 has        131 integration points.
  Task    30 has         65 integration points.
  Task    31 has        124 integration points.
  Task    32 has         64 integration points.
  Task    33 has         82 integration points.
  Task    34 has         86 integration points.
  Task    35 has         67 integration points.
  Task    36 has         70 integration points.
  Task    37 has        153 integration points.
  Task    38 has        130 integration points.
  Task    39 has        119 integration points.
  Task    40 has         63 integration points.
  Task    41 has         65 integration points.
  Task    42 has         68 integration points.
  Task    43 has        152 integration points.
  Task    44 has        118 integration points.
  Task    45 has         67 integration points.
  Task    46 has         70 integration points.
  Task    47 has         86 integration points.
  Task    48 has         81 integration points.
  Task    49 has         64 integration points.
  Task    50 has         67 integration points.
  Task    51 has        161 integration points.
  Task    52 has        121 integration points.
  Task    53 has         67 integration points.
  Task    54 has         69 integration points.
  Task    55 has         64 integration points.
  Task    56 has         67 integration points.
  Task    57 has         81 integration points.
  Task    58 has         78 integration points.
  Task    59 has         67 integration points.
  Task    60 has         79 integration points.
  Task    61 has         82 integration points.
  Task    62 has         94 integration points.
  Task    63 has         96 integration points.
  Task    64 has         67 integration points.
  Task    65 has         81 integration points.
  Task    66 has         82 integration points.
  Task    67 has        103 integration points.
  Task    68 has         82 integration points.
  Task    69 has        100 integration points.
  Task    70 has         89 integration points.
  Task    71 has         83 integration points.
  Task    72 has         88 integration points.
  Task    73 has         90 integration points.
  Task    74 has         88 integration points.
  Task    75 has         90 integration points.
  Task    76 has         83 integration points.
  Task    77 has         76 integration points.
  Task    78 has         83 integration points.
  Task    79 has         63 integration points.
  Task    80 has         65 integration points.
  Task    81 has         92 integration points.
  Task    82 has         95 integration points.
  Task    83 has         91 integration points.
  Task    84 has         93 integration points.
  Task    85 has         92 integration points.
  Task    86 has         94 integration points.
  Task    87 has         92 integration points.
  Task    88 has         95 integration points.
  Task    89 has         63 integration points.
  Task    90 has         65 integration points.
  Task    91 has         79 integration points.
  Task    92 has        133 integration points.
  Task    93 has         65 integration points.
  Task    94 has         88 integration points.
  Task    95 has         91 integration points.
  Task    96 has         76 integration points.
  Task    97 has         79 integration points.
  Task    98 has         78 integration points.
  Task    99 has         80 integration points.
  Task   100 has         82 integration points.
  Task   101 has         84 integration points.
  Task   102 has         76 integration points.
  Task   103 has         79 integration points.
  Task   104 has         88 integration points.
  Task   105 has         91 integration points.
  Task   106 has        132 integration points.
  Task   107 has         65 integration points.
  Task   108 has        106 integration points.
  Task   109 has         77 integration points.
  Task   110 has         79 integration points.
  Task   111 has         75 integration points.
  Task   112 has         77 integration points.
  Task   113 has         74 integration points.
  Task   114 has         77 integration points.
  Task   115 has         85 integration points.
  Task   116 has         87 integration points.
  Task   117 has         75 integration points.
  Task   118 has         77 integration points.
  Task   119 has         77 integration points.
  Task   120 has         79 integration points.
  Task   121 has        106 integration points.
  Task   122 has         79 integration points.
  Task   123 has        106 integration points.
  Task   124 has         77 integration points.
  Task   125 has         80 integration points.
  Task   126 has         85 integration points.
  Task   127 has         87 integration points.
  Task   128 has        107 integration points.
  Task   129 has        110 integration points.
  Task   130 has         77 integration points.
  Task   131 has         80 integration points.
  Task   132 has        106 integration points.
  Task   133 has         77 integration points.
  Task   134 has        110 integration points.
  Task   135 has         72 integration points.
  Task   136 has         75 integration points.
  Task   137 has        103 integration points.
  Task   138 has        106 integration points.
  Task   139 has        104 integration points.
  Task   140 has        107 integration points.
  Task   141 has        104 integration points.
  Task   142 has        106 integration points.
  Task   143 has        105 integration points.
  Task   144 has        108 integration points.
  Task   145 has         67 integration points.
  Task   146 has         70 integration points.
  Task   147 has         69 integration points.
  Task   148 has         71 integration points.
  Task   149 has         68 integration points.
  Task   150 has         70 integration points.
  Task   151 has         69 integration points.
  Task   152 has         72 integration points.
  Task   153 has         68 integration points.
  Task   154 has         70 integration points.
  Task   155 has         69 integration points.
  Task   156 has         71 integration points.
  Task   157 has         68 integration points.
  Task   158 has         71 integration points.
  Task   159 has         69 integration points.
  Task   160 has         72 integration points.
  Task   161 has         72 integration points.
  Task   162 has         75 integration points.
  Task   163 has        112 integration points.
  Task   164 has         76 integration points.
  Task   165 has         79 integration points.
  Task   166 has        106 integration points.
  Task   167 has        109 integration points.
  Task   168 has         65 integration points.
  Task   169 has         69 integration points.
  Task   170 has         79 integration points.
  Task   171 has         63 integration points.
  Task   172 has         74 integration points.
  Task   173 has         77 integration points.
  Task   174 has         71 integration points.
  Task   175 has         74 integration points.
  Task   176 has         63 integration points.
  Task   177 has         79 integration points.
  Task   178 has         81 integration points.
  Task   179 has        104 integration points.
  Task   180 has         68 integration points.
  Task   181 has         71 integration points.
  Task   182 has         72 integration points.
  Task   183 has         75 integration points.
  Task   184 has         69 integration points.
  Task   185 has         72 integration points.
  Task   186 has         68 integration points.
  Task   187 has         71 integration points.
  Task   188 has        104 integration points.
  Task   189 has        108 integration points.
  Task   190 has         96 integration points.
  Task   191 has         68 integration points.
  Task   192 has         70 integration points.
  Task   193 has        147 integration points.
  Task   194 has        139 integration points.
  Task   195 has         64 integration points.
  Task   196 has         66 integration points.
  Task   197 has        128 integration points.
  Task   198 has         64 integration points.
  Task   199 has        118 integration points.
  Task   200 has        163 integration points.
  Task   201 has         68 integration points.
  Task   202 has         70 integration points.
  Task   203 has         96 integration points.
  Task   204 has         87 integration points.
  Task   205 has        155 integration points.
  Task   206 has        131 integration points.
  Task   207 has        147 integration points.
  Task   208 has         63 integration points.
  Task   209 has        140 integration points.
  Task   210 has        135 integration points.
  Task   211 has        152 integration points.
  Task   212 has         65 integration points.
  Task   213 has        143 integration points.
  Task   214 has         63 integration points.
  Task   215 has        146 integration points.
  Task   216 has        122 integration points.
  Task   217 has         87 integration points.
  Task   218 has         88 integration points.
  Task   219 has        120 integration points.
  Task   220 has         64 integration points.
  Task   221 has         68 integration points.
  Task   222 has         71 integration points.
  Task   223 has         78 integration points.
  Task   224 has         80 integration points.
  Task   225 has        126 integration points.
  Task   226 has        150 integration points.
  Task   227 has         88 integration points.
  Task   228 has         84 integration points.
  Task   229 has        149 integration points.
  Task   230 has        125 integration points.
  Task   231 has         77 integration points.
  Task   232 has         80 integration points.
  Task   233 has         79 integration points.
  Task   234 has         81 integration points.
  Task   235 has         78 integration points.
  Task   236 has         80 integration points.
  Task   237 has         79 integration points.
  Task   238 has         82 integration points.
  Task   239 has         99 integration points.
  Task   240 has        102 integration points.
  Task   241 has        100 integration points.
  Task   242 has        103 integration points.
  Task   243 has        100 integration points.
  Task   244 has        102 integration points.
  Task   245 has        101 integration points.
  Task   246 has        104 integration points.
  Task   247 has        150 integration points.
  Task   248 has        123 integration points.
  Task   249 has         87 integration points.
  Task   250 has         65 integration points.
  Task   251 has         68 integration points.
  Task   252 has         79 integration points.
  Task   253 has         82 integration points.
  Task   254 has         94 integration points.
  Task   255 has         85 integration points.
  Task   256 has         88 integration points.
  Task   257 has         77 integration points.
  Task   258 has         80 integration points.
  Task   259 has         67 integration points.
  Task   260 has         69 integration points.
  Task   261 has         88 integration points.
  Task   262 has         64 integration points.
  Task   263 has         90 integration points.
  Task   264 has         70 integration points.
  Task   265 has         73 integration points.
  Task   266 has         70 integration points.
  Task   267 has         72 integration points.
  Task   268 has         63 integration points.
  Task   269 has         66 integration points.
  Task   270 has         70 integration points.
  Task   271 has         73 integration points.
  Task   272 has         90 integration points.
  Task   273 has         67 integration points.
  Task   274 has         82 integration points.
  Task   275 has        126 integration points.
  Task   276 has         64 integration points.
  Task   277 has        131 integration points.
  Task   278 has         65 integration points.
  Task   279 has        121 integration points.
  Task   280 has        155 integration points.
  Task   281 has        153 integration points.
  Task   282 has        124 integration points.
  Task   283 has        134 integration points.
  Task   284 has         65 integration points.
  Task   285 has        119 integration points.
  Task   286 has         64 integration points.
  Task   287 has         82 integration points.
  Task   288 has         86 integration points.
  Task   289 has         67 integration points.
  Task   290 has         70 integration points.
  Task   291 has        121 integration points.
  Task   292 has        127 integration points.
  Task   293 has        121 integration points.
  Task   294 has         63 integration points.
  Task   295 has         65 integration points.
  Task   296 has         68 integration points.
  Task   297 has        123 integration points.
  Task   298 has        141 integration points.
  Task   299 has         67 integration points.
  Task   300 has         70 integration points.
  Task   301 has         86 integration points.
  Task   302 has         81 integration points.
  Task   303 has         64 integration points.
  Task   304 has         67 integration points.
  Task   305 has        157 integration points.
  Task   306 has        117 integration points.
  Task   307 has         67 integration points.
  Task   308 has         69 integration points.
  Task   309 has         64 integration points.
  Task   310 has         67 integration points.
  Task   311 has         81 integration points.
  Task   312 has         78 integration points.
  Task   313 has         67 integration points.
  Task   314 has         79 integration points.
  Task   315 has         82 integration points.
  Task   316 has         94 integration points.
  Task   317 has         96 integration points.
  Task   318 has         67 integration points.
  Task   319 has         81 integration points.
  Task   320 has         82 integration points.
  Task   321 has        103 integration points.
  Task   322 has        104 integration points.
  Task   323 has         81 integration points.
  Task   324 has        107 integration points.
  Task   325 has         67 integration points.
  Task   326 has         96 integration points.
  Task   327 has         98 integration points.
  Task   328 has         77 integration points.
  Task   329 has         80 integration points.
  Task   330 has         67 integration points.
  Task   331 has         82 integration points.
  Task   332 has         81 integration points.
  Task   333 has         64 integration points.
  Task   334 has         67 integration points.
  Task   335 has         68 integration points.
  Task   336 has         70 integration points.
  Task   337 has        120 integration points.
  Task   338 has        146 integration points.
  Task   339 has         64 integration points.
  Task   340 has         67 integration points.
  Task   341 has         81 integration points.
  Task   342 has         86 integration points.
  Task   343 has         67 integration points.
  Task   344 has         70 integration points.
  Task   345 has        127 integration points.
  Task   346 has        130 integration points.
  Task   347 has         65 integration points.
  Task   348 has         68 integration points.
  Task   349 has        123 integration points.
  Task   350 has         63 integration points.
  Task   351 has        141 integration points.
  Task   352 has        118 integration points.
  Task   353 has         67 integration points.
  Task   354 has         70 integration points.
  Task   355 has         86 integration points.
  Task   356 has         82 integration points.
  Task   357 has        126 integration points.
  Task   358 has         64 integration points.
  Task   359 has        137 integration points.
  Task   360 has         65 integration points.
  Task   361 has        148 integration points.
  Task   362 has        120 integration points.
  Task   363 has        136 integration points.
  Task   364 has        139 integration points.
  Task   365 has        139 integration points.
  Task   366 has         65 integration points.
  Task   367 has        122 integration points.
  Task   368 has         64 integration points.
  Task   369 has         82 integration points.
  Task   370 has         90 integration points.
  Task   371 has         90 integration points.
  Task   372 has         70 integration points.
  Task   373 has         73 integration points.
  Task   374 has         64 integration points.
  Task   375 has         67 integration points.
  Task   376 has         69 integration points.
  Task   377 has         71 integration points.
  Task   378 has         70 integration points.
  Task   379 has         73 integration points.
  Task   380 has         90 integration points.
  Task   381 has         93 integration points.
  Task   382 has         88 integration points.
  Task   383 has         69 integration points.
  Task   384 has         72 integration points.
  Task   385 has         75 integration points.
  Task   386 has         77 integration points.
  Task   387 has         88 integration points.
  Task   388 has         87 integration points.
  Task   389 has         92 integration points.
  Task   390 has         81 integration points.
  Task   391 has         84 integration points.
  Task   392 has         63 integration points.
  Task   393 has         66 integration points.
  Task   394 has        107 integration points.
  Task   395 has        150 integration points.
  Task   396 has        125 integration points.
  Task   397 has         99 integration points.
  Task   398 has        102 integration points.
  Task   399 has        101 integration points.
  Task   400 has        103 integration points.
  Task   401 has        100 integration points.
  Task   402 has        102 integration points.
  Task   403 has        101 integration points.
  Task   404 has        104 integration points.
  Task   405 has         77 integration points.
  Task   406 has         80 integration points.
  Task   407 has         78 integration points.
  Task   408 has         81 integration points.
  Task   409 has         78 integration points.
  Task   410 has         80 integration points.
  Task   411 has         79 integration points.
  Task   412 has         82 integration points.
  Task   413 has        144 integration points.
  Task   414 has        143 integration points.
  Task   415 has         78 integration points.
  Task   416 has         88 integration points.
  Task   417 has        126 integration points.
  Task   418 has        150 integration points.
  Task   419 has         79 integration points.
  Task   420 has         82 integration points.
  Task   421 has         67 integration points.
  Task   422 has         69 integration points.
  Task   423 has        125 integration points.
  Task   424 has        149 integration points.
  Task   425 has         88 integration points.
  Task   426 has         87 integration points.
  Task   427 has        146 integration points.
  Task   428 has         63 integration points.
  Task   429 has        151 integration points.
  Task   430 has         63 integration points.
  Task   431 has        154 integration points.
  Task   432 has         65 integration points.
  Task   433 has        140 integration points.
  Task   434 has         62 integration points.
  Task   435 has        131 integration points.
  Task   436 has         63 integration points.
  Task   437 has        141 integration points.
  Task   438 has        134 integration points.
  Task   439 has         87 integration points.
  Task   440 has         96 integration points.
  Task   441 has         68 integration points.
  Task   442 has         70 integration points.
  Task   443 has        119 integration points.
  Task   444 has        123 integration points.
  Task   445 has        125 integration points.
  Task   446 has         64 integration points.
  Task   447 has         64 integration points.
  Task   448 has         66 integration points.
  Task   449 has        121 integration points.
  Task   450 has        126 integration points.
  Task   451 has         68 integration points.
  Task   452 has         70 integration points.
  Task   453 has         96 integration points.
  Task   454 has         78 integration points.
  Task   455 has        104 integration points.
  Task   456 has         68 integration points.
  Task   457 has         71 integration points.
  Task   458 has         71 integration points.
  Task   459 has         73 integration points.
  Task   460 has         71 integration points.
  Task   461 has         73 integration points.
  Task   462 has         68 integration points.
  Task   463 has         71 integration points.
  Task   464 has        104 integration points.
  Task   465 has         81 integration points.
  Task   466 has         84 integration points.
  Task   467 has         63 integration points.
  Task   468 has         71 integration points.
  Task   469 has         74 integration points.
  Task   470 has         74 integration points.
  Task   471 has         77 integration points.
  Task   472 has         63 integration points.
  Task   473 has         86 integration points.
  Task   474 has         70 integration points.
  Task   475 has         64 integration points.
  Task   476 has        109 integration points.
  Task   477 has        111 integration points.
  Task   478 has         74 integration points.
  Task   479 has         76 integration points.
  Task   480 has         80 integration points.
  Task   481 has         72 integration points.
  Task   482 has         75 integration points.
  Task   483 has         67 integration points.
  Task   484 has         70 integration points.
  Task   485 has         69 integration points.
  Task   486 has         71 integration points.
  Task   487 has         68 integration points.
  Task   488 has         70 integration points.
  Task   489 has         69 integration points.
  Task   490 has         72 integration points.
  Task   491 has         68 integration points.
  Task   492 has         70 integration points.
  Task   493 has         69 integration points.
  Task   494 has         71 integration points.
  Task   495 has         68 integration points.
  Task   496 has         71 integration points.
  Task   497 has         70 integration points.
  Task   498 has         72 integration points.
  Task   499 has        103 integration points.
  Task   500 has        106 integration points.
  Task   501 has        104 integration points.
  Task   502 has        107 integration points.
  Task   503 has        104 integration points.
  Task   504 has        106 integration points.
  Task   505 has        105 integration points.
  Task   506 has        107 integration points.
  Task   507 has         72 integration points.
  Task   508 has         75 integration points.
  Task   509 has         76 integration points.
  Task   510 has         80 integration points.
  Task   511 has        106 integration points.
  Initializing partition tables, free-atom densities, potentials, etc. across the integration grid (initialize_grid_storage).
  | initialize_grid_storage: Actual outermost partition radius vs. multipole_radius_free
  | (-- VB: in principle, multipole_radius_free should be larger, hence this output)
  | Species        1: Confinement radius =              8.000000000000000 AA, multipole_radius_free =              8.016324652127386 AA.
  | Species        1: outer_partition_radius set to              8.016324652127386 AA .
  | Species        2: Confinement radius =              6.000000000000000 AA, multipole_radius_free =              6.016333975203386 AA.
  | Species        2: outer_partition_radius set to              6.016333975203386 AA .
  | Species        3: Confinement radius =              6.000000000000000 AA, multipole_radius_free =              6.012827091137924 AA.
  | Species        3: outer_partition_radius set to              6.012827091137924 AA .
  | The sparse table of interatomic distances needs       1373.40 kbyte instead of      1204.35 kbyte of memory.
  | Using the partition_type stratmann_smoother will reduce your memory usage.
  | Net number of integration points:    45420
  | of which are non-zero points    :    35088
  | Numerical average free-atom electrostatic potential    :    -23.97925926 eV
  Renormalizing the initial density to the exact electron count on the 3D integration grid.
  | Initial density: Formal number of electrons (from input files) :      80.0000000000
  | Integrated number of electrons on 3D grid     :      80.0000154158
  | Charge integration error                      :       0.0000154158
  | Normalization factor for density and gradient :       0.9999998073
  Renormalizing the free-atom superposition density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      80.0000000000
  | Integrated number of electrons on 3D grid     :      80.0000154158
  | Charge integration error                      :       0.0000154158
  | Normalization factor for density and gradient :       0.9999998073
  Obtaining max. number of non-zero basis functions in each batch (get_n_compute_maxes).
  | Maximal number of non-zero basis functions:     1174 in task     0
  | Maximal number of non-zero basis functions:     1174 in task     1
  | Maximal number of non-zero basis functions:     1155 in task     2
  | Maximal number of non-zero basis functions:     1168 in task     3
  | Maximal number of non-zero basis functions:     1137 in task     4
  | Maximal number of non-zero basis functions:     1160 in task     5
  | Maximal number of non-zero basis functions:     1137 in task     6
  | Maximal number of non-zero basis functions:     1155 in task     7
  | Maximal number of non-zero basis functions:     1165 in task     8
  | Maximal number of non-zero basis functions:     1157 in task     9
  | Maximal number of non-zero basis functions:     1141 in task    10
  | Maximal number of non-zero basis functions:     1139 in task    11
  | Maximal number of non-zero basis functions:     1108 in task    12
  | Maximal number of non-zero basis functions:     1155 in task    13
  | Maximal number of non-zero basis functions:     1117 in task    14
  | Maximal number of non-zero basis functions:     1164 in task    15
  | Maximal number of non-zero basis functions:     1141 in task    16
  | Maximal number of non-zero basis functions:     1139 in task    17
  | Maximal number of non-zero basis functions:     1157 in task    18
  | Maximal number of non-zero basis functions:     1228 in task    19
  | Maximal number of non-zero basis functions:     1203 in task    20
  | Maximal number of non-zero basis functions:     1223 in task    21
  | Maximal number of non-zero basis functions:     1149 in task    22
  | Maximal number of non-zero basis functions:     1180 in task    23
  | Maximal number of non-zero basis functions:     1172 in task    24
  | Maximal number of non-zero basis functions:     1254 in task    25
  | Maximal number of non-zero basis functions:     1204 in task    26
  | Maximal number of non-zero basis functions:     1247 in task    27
  | Maximal number of non-zero basis functions:     1167 in task    28
  | Maximal number of non-zero basis functions:     1172 in task    29
  | Maximal number of non-zero basis functions:     1180 in task    30
  | Maximal number of non-zero basis functions:     1259 in task    31
  | Maximal number of non-zero basis functions:     1149 in task    32
  | Maximal number of non-zero basis functions:     1203 in task    33
  | Maximal number of non-zero basis functions:     1187 in task    34
  | Maximal number of non-zero basis functions:     1155 in task    35
  | Maximal number of non-zero basis functions:     1134 in task    36
  | Maximal number of non-zero basis functions:     1160 in task    37
  | Maximal number of non-zero basis functions:     1173 in task    38
  | Maximal number of non-zero basis functions:     1259 in task    39
  | Maximal number of non-zero basis functions:     1204 in task    40
  | Maximal number of non-zero basis functions:     1223 in task    41
  | Maximal number of non-zero basis functions:     1277 in task    42
  | Maximal number of non-zero basis functions:     1147 in task    43
  | Maximal number of non-zero basis functions:     1162 in task    44
  | Maximal number of non-zero basis functions:     1155 in task    45
  | Maximal number of non-zero basis functions:     1134 in task    46
  | Maximal number of non-zero basis functions:     1187 in task    47
  | Maximal number of non-zero basis functions:     1157 in task    48
  | Maximal number of non-zero basis functions:     1149 in task    49
  | Maximal number of non-zero basis functions:     1137 in task    50
  | Maximal number of non-zero basis functions:     1166 in task    51
  | Maximal number of non-zero basis functions:     1172 in task    52
  | Maximal number of non-zero basis functions:     1173 in task    53
  | Maximal number of non-zero basis functions:     1153 in task    54
  | Maximal number of non-zero basis functions:     1149 in task    55
  | Maximal number of non-zero basis functions:     1137 in task    56
  | Maximal number of non-zero basis functions:     1157 in task    57
  | Maximal number of non-zero basis functions:     1130 in task    58
  | Maximal number of non-zero basis functions:     1202 in task    59
  | Maximal number of non-zero basis functions:     1180 in task    60
  | Maximal number of non-zero basis functions:     1203 in task    61
  | Maximal number of non-zero basis functions:     1194 in task    62
  | Maximal number of non-zero basis functions:     1244 in task    63
  | Maximal number of non-zero basis functions:     1202 in task    64
  | Maximal number of non-zero basis functions:     1178 in task    65
  | Maximal number of non-zero basis functions:     1201 in task    66
  | Maximal number of non-zero basis functions:     1198 in task    67
  | Maximal number of non-zero basis functions:     1146 in task    68
  | Maximal number of non-zero basis functions:     1152 in task    69
  | Maximal number of non-zero basis functions:     1231 in task    70
  | Maximal number of non-zero basis functions:     1133 in task    71
  | Maximal number of non-zero basis functions:     1128 in task    72
  | Maximal number of non-zero basis functions:     1100 in task    73
  | Maximal number of non-zero basis functions:     1112 in task    74
  | Maximal number of non-zero basis functions:     1100 in task    75
  | Maximal number of non-zero basis functions:     1133 in task    76
  | Maximal number of non-zero basis functions:     1200 in task    77
  | Maximal number of non-zero basis functions:     1239 in task    78
  | Maximal number of non-zero basis functions:     1073 in task    79
  | Maximal number of non-zero basis functions:     1087 in task    80
  | Maximal number of non-zero basis functions:     1160 in task    81
  | Maximal number of non-zero basis functions:     1130 in task    82
  | Maximal number of non-zero basis functions:     1171 in task    83
  | Maximal number of non-zero basis functions:     1084 in task    84
  | Maximal number of non-zero basis functions:     1155 in task    85
  | Maximal number of non-zero basis functions:     1116 in task    86
  | Maximal number of non-zero basis functions:     1160 in task    87
  | Maximal number of non-zero basis functions:     1130 in task    88
  | Maximal number of non-zero basis functions:     1073 in task    89
  | Maximal number of non-zero basis functions:     1087 in task    90
  | Maximal number of non-zero basis functions:     1234 in task    91
  | Maximal number of non-zero basis functions:     1113 in task    92
  | Maximal number of non-zero basis functions:     1094 in task    93
  | Maximal number of non-zero basis functions:     1177 in task    94
  | Maximal number of non-zero basis functions:     1157 in task    95
  | Maximal number of non-zero basis functions:     1227 in task    96
  | Maximal number of non-zero basis functions:     1250 in task    97
  | Maximal number of non-zero basis functions:     1224 in task    98
  | Maximal number of non-zero basis functions:     1206 in task    99
  | Maximal number of non-zero basis functions:     1252 in task   100
  | Maximal number of non-zero basis functions:     1261 in task   101
  | Maximal number of non-zero basis functions:     1227 in task   102
  | Maximal number of non-zero basis functions:     1250 in task   103
  | Maximal number of non-zero basis functions:     1177 in task   104
  | Maximal number of non-zero basis functions:     1157 in task   105
  | Maximal number of non-zero basis functions:     1139 in task   106
  | Maximal number of non-zero basis functions:     1094 in task   107
  | Maximal number of non-zero basis functions:     1127 in task   108
  | Maximal number of non-zero basis functions:     1131 in task   109
  | Maximal number of non-zero basis functions:     1120 in task   110
  | Maximal number of non-zero basis functions:     1165 in task   111
  | Maximal number of non-zero basis functions:     1162 in task   112
  | Maximal number of non-zero basis functions:     1222 in task   113
  | Maximal number of non-zero basis functions:     1210 in task   114
  | Maximal number of non-zero basis functions:     1231 in task   115
  | Maximal number of non-zero basis functions:     1228 in task   116
  | Maximal number of non-zero basis functions:     1165 in task   117
  | Maximal number of non-zero basis functions:     1162 in task   118
  | Maximal number of non-zero basis functions:     1131 in task   119
  | Maximal number of non-zero basis functions:     1120 in task   120
  | Maximal number of non-zero basis functions:     1127 in task   121
  | Maximal number of non-zero basis functions:     1222 in task   122
  | Maximal number of non-zero basis functions:     1129 in task   123
  | Maximal number of non-zero basis functions:     1160 in task   124
  | Maximal number of non-zero basis functions:     1148 in task   125
  | Maximal number of non-zero basis functions:     1142 in task   126
  | Maximal number of non-zero basis functions:     1140 in task   127
  | Maximal number of non-zero basis functions:     1135 in task   128
  | Maximal number of non-zero basis functions:     1183 in task   129
  | Maximal number of non-zero basis functions:     1160 in task   130
  | Maximal number of non-zero basis functions:     1148 in task   131
  | Maximal number of non-zero basis functions:     1129 in task   132
  | Maximal number of non-zero basis functions:     1162 in task   133
  | Maximal number of non-zero basis functions:     1183 in task   134
  | Maximal number of non-zero basis functions:     1113 in task   135
  | Maximal number of non-zero basis functions:     1102 in task   136
  | Maximal number of non-zero basis functions:     1097 in task   137
  | Maximal number of non-zero basis functions:     1039 in task   138
  | Maximal number of non-zero basis functions:     1008 in task   139
  | Maximal number of non-zero basis functions:     1071 in task   140
  | Maximal number of non-zero basis functions:      918 in task   141
  | Maximal number of non-zero basis functions:      909 in task   142
  | Maximal number of non-zero basis functions:      918 in task   143
  | Maximal number of non-zero basis functions:      945 in task   144
  | Maximal number of non-zero basis functions:     1053 in task   145
  | Maximal number of non-zero basis functions:     1071 in task   146
  | Maximal number of non-zero basis functions:     1024 in task   147
  | Maximal number of non-zero basis functions:      962 in task   148
  | Maximal number of non-zero basis functions:     1004 in task   149
  | Maximal number of non-zero basis functions:      918 in task   150
  | Maximal number of non-zero basis functions:     1062 in task   151
  | Maximal number of non-zero basis functions:     1018 in task   152
  | Maximal number of non-zero basis functions:      918 in task   153
  | Maximal number of non-zero basis functions:      945 in task   154
  | Maximal number of non-zero basis functions:      918 in task   155
  | Maximal number of non-zero basis functions:      918 in task   156
  | Maximal number of non-zero basis functions:      918 in task   157
  | Maximal number of non-zero basis functions:      909 in task   158
  | Maximal number of non-zero basis functions:      918 in task   159
  | Maximal number of non-zero basis functions:      918 in task   160
  | Maximal number of non-zero basis functions:     1113 in task   161
  | Maximal number of non-zero basis functions:     1102 in task   162
  | Maximal number of non-zero basis functions:     1144 in task   163
  | Maximal number of non-zero basis functions:     1103 in task   164
  | Maximal number of non-zero basis functions:     1052 in task   165
  | Maximal number of non-zero basis functions:     1095 in task   166
  | Maximal number of non-zero basis functions:     1110 in task   167
  | Maximal number of non-zero basis functions:     1143 in task   168
  | Maximal number of non-zero basis functions:     1133 in task   169
  | Maximal number of non-zero basis functions:     1165 in task   170
  | Maximal number of non-zero basis functions:     1126 in task   171
  | Maximal number of non-zero basis functions:     1103 in task   172
  | Maximal number of non-zero basis functions:     1110 in task   173
  | Maximal number of non-zero basis functions:     1107 in task   174
  | Maximal number of non-zero basis functions:     1110 in task   175
  | Maximal number of non-zero basis functions:     1126 in task   176
  | Maximal number of non-zero basis functions:     1116 in task   177
  | Maximal number of non-zero basis functions:     1131 in task   178
  | Maximal number of non-zero basis functions:     1111 in task   179
  | Maximal number of non-zero basis functions:     1097 in task   180
  | Maximal number of non-zero basis functions:     1123 in task   181
  | Maximal number of non-zero basis functions:     1095 in task   182
  | Maximal number of non-zero basis functions:     1154 in task   183
  | Maximal number of non-zero basis functions:     1148 in task   184
  | Maximal number of non-zero basis functions:     1096 in task   185
  | Maximal number of non-zero basis functions:     1120 in task   186
  | Maximal number of non-zero basis functions:     1111 in task   187
  | Maximal number of non-zero basis functions:     1111 in task   188
  | Maximal number of non-zero basis functions:     1127 in task   189
  | Maximal number of non-zero basis functions:     1114 in task   190
  | Maximal number of non-zero basis functions:     1156 in task   191
  | Maximal number of non-zero basis functions:     1152 in task   192
  | Maximal number of non-zero basis functions:     1194 in task   193
  | Maximal number of non-zero basis functions:     1208 in task   194
  | Maximal number of non-zero basis functions:     1226 in task   195
  | Maximal number of non-zero basis functions:     1197 in task   196
  | Maximal number of non-zero basis functions:     1218 in task   197
  | Maximal number of non-zero basis functions:     1188 in task   198
  | Maximal number of non-zero basis functions:     1194 in task   199
  | Maximal number of non-zero basis functions:     1208 in task   200
  | Maximal number of non-zero basis functions:     1152 in task   201
  | Maximal number of non-zero basis functions:     1156 in task   202
  | Maximal number of non-zero basis functions:     1114 in task   203
  | Maximal number of non-zero basis functions:     1116 in task   204
  | Maximal number of non-zero basis functions:     1155 in task   205
  | Maximal number of non-zero basis functions:     1155 in task   206
  | Maximal number of non-zero basis functions:     1187 in task   207
  | Maximal number of non-zero basis functions:     1141 in task   208
  | Maximal number of non-zero basis functions:     1233 in task   209
  | Maximal number of non-zero basis functions:     1211 in task   210
  | Maximal number of non-zero basis functions:     1223 in task   211
  | Maximal number of non-zero basis functions:     1213 in task   212
  | Maximal number of non-zero basis functions:     1203 in task   213
  | Maximal number of non-zero basis functions:     1141 in task   214
  | Maximal number of non-zero basis functions:     1085 in task   215
  | Maximal number of non-zero basis functions:     1150 in task   216
  | Maximal number of non-zero basis functions:     1116 in task   217
  | Maximal number of non-zero basis functions:     1126 in task   218
  | Maximal number of non-zero basis functions:     1166 in task   219
  | Maximal number of non-zero basis functions:     1124 in task   220
  | Maximal number of non-zero basis functions:     1090 in task   221
  | Maximal number of non-zero basis functions:     1148 in task   222
  | Maximal number of non-zero basis functions:     1160 in task   223
  | Maximal number of non-zero basis functions:     1122 in task   224
  | Maximal number of non-zero basis functions:     1202 in task   225
  | Maximal number of non-zero basis functions:     1155 in task   226
  | Maximal number of non-zero basis functions:     1126 in task   227
  | Maximal number of non-zero basis functions:     1140 in task   228
  | Maximal number of non-zero basis functions:     1171 in task   229
  | Maximal number of non-zero basis functions:     1194 in task   230
  | Maximal number of non-zero basis functions:      927 in task   231
  | Maximal number of non-zero basis functions:      918 in task   232
  | Maximal number of non-zero basis functions:      909 in task   233
  | Maximal number of non-zero basis functions:      918 in task   234
  | Maximal number of non-zero basis functions:     1051 in task   235
  | Maximal number of non-zero basis functions:     1046 in task   236
  | Maximal number of non-zero basis functions:     1016 in task   237
  | Maximal number of non-zero basis functions:     1073 in task   238
  | Maximal number of non-zero basis functions:      909 in task   239
  | Maximal number of non-zero basis functions:      918 in task   240
  | Maximal number of non-zero basis functions:      930 in task   241
  | Maximal number of non-zero basis functions:      918 in task   242
  | Maximal number of non-zero basis functions:     1051 in task   243
  | Maximal number of non-zero basis functions:     1086 in task   244
  | Maximal number of non-zero basis functions:     1040 in task   245
  | Maximal number of non-zero basis functions:     1082 in task   246
  | Maximal number of non-zero basis functions:     1130 in task   247
  | Maximal number of non-zero basis functions:     1180 in task   248
  | Maximal number of non-zero basis functions:     1151 in task   249
  | Maximal number of non-zero basis functions:     1065 in task   250
  | Maximal number of non-zero basis functions:     1101 in task   251
  | Maximal number of non-zero basis functions:     1091 in task   252
  | Maximal number of non-zero basis functions:     1123 in task   253
  | Maximal number of non-zero basis functions:     1174 in task   254
  | Maximal number of non-zero basis functions:     1174 in task   255
  | Maximal number of non-zero basis functions:     1155 in task   256
  | Maximal number of non-zero basis functions:     1137 in task   257
  | Maximal number of non-zero basis functions:     1168 in task   258
  | Maximal number of non-zero basis functions:     1137 in task   259
  | Maximal number of non-zero basis functions:     1160 in task   260
  | Maximal number of non-zero basis functions:     1155 in task   261
  | Maximal number of non-zero basis functions:     1094 in task   262
  | Maximal number of non-zero basis functions:     1157 in task   263
  | Maximal number of non-zero basis functions:     1139 in task   264
  | Maximal number of non-zero basis functions:     1141 in task   265
  | Maximal number of non-zero basis functions:     1108 in task   266
  | Maximal number of non-zero basis functions:     1155 in task   267
  | Maximal number of non-zero basis functions:     1117 in task   268
  | Maximal number of non-zero basis functions:     1164 in task   269
  | Maximal number of non-zero basis functions:     1139 in task   270
  | Maximal number of non-zero basis functions:     1141 in task   271
  | Maximal number of non-zero basis functions:     1157 in task   272
  | Maximal number of non-zero basis functions:     1101 in task   273
  | Maximal number of non-zero basis functions:     1203 in task   274
  | Maximal number of non-zero basis functions:     1194 in task   275
  | Maximal number of non-zero basis functions:     1149 in task   276
  | Maximal number of non-zero basis functions:     1172 in task   277
  | Maximal number of non-zero basis functions:     1180 in task   278
  | Maximal number of non-zero basis functions:     1254 in task   279
  | Maximal number of non-zero basis functions:     1232 in task   280
  | Maximal number of non-zero basis functions:     1167 in task   281
  | Maximal number of non-zero basis functions:     1253 in task   282
  | Maximal number of non-zero basis functions:     1180 in task   283
  | Maximal number of non-zero basis functions:     1172 in task   284
  | Maximal number of non-zero basis functions:     1194 in task   285
  | Maximal number of non-zero basis functions:     1149 in task   286
  | Maximal number of non-zero basis functions:     1203 in task   287
  | Maximal number of non-zero basis functions:     1187 in task   288
  | Maximal number of non-zero basis functions:     1130 in task   289
  | Maximal number of non-zero basis functions:     1155 in task   290
  | Maximal number of non-zero basis functions:     1140 in task   291
  | Maximal number of non-zero basis functions:     1159 in task   292
  | Maximal number of non-zero basis functions:     1259 in task   293
  | Maximal number of non-zero basis functions:     1204 in task   294
  | Maximal number of non-zero basis functions:     1277 in task   295
  | Maximal number of non-zero basis functions:     1223 in task   296
  | Maximal number of non-zero basis functions:     1140 in task   297
  | Maximal number of non-zero basis functions:     1159 in task   298
  | Maximal number of non-zero basis functions:     1130 in task   299
  | Maximal number of non-zero basis functions:     1155 in task   300
  | Maximal number of non-zero basis functions:     1187 in task   301
  | Maximal number of non-zero basis functions:     1157 in task   302
  | Maximal number of non-zero basis functions:     1134 in task   303
  | Maximal number of non-zero basis functions:     1149 in task   304
  | Maximal number of non-zero basis functions:     1215 in task   305
  | Maximal number of non-zero basis functions:     1179 in task   306
  | Maximal number of non-zero basis functions:     1147 in task   307
  | Maximal number of non-zero basis functions:     1173 in task   308
  | Maximal number of non-zero basis functions:     1134 in task   309
  | Maximal number of non-zero basis functions:     1149 in task   310
  | Maximal number of non-zero basis functions:     1157 in task   311
  | Maximal number of non-zero basis functions:     1130 in task   312
  | Maximal number of non-zero basis functions:     1202 in task   313
  | Maximal number of non-zero basis functions:     1203 in task   314
  | Maximal number of non-zero basis functions:     1180 in task   315
  | Maximal number of non-zero basis functions:     1194 in task   316
  | Maximal number of non-zero basis functions:     1244 in task   317
  | Maximal number of non-zero basis functions:     1202 in task   318
  | Maximal number of non-zero basis functions:     1178 in task   319
  | Maximal number of non-zero basis functions:     1201 in task   320
  | Maximal number of non-zero basis functions:     1198 in task   321
  | Maximal number of non-zero basis functions:     1198 in task   322
  | Maximal number of non-zero basis functions:     1201 in task   323
  | Maximal number of non-zero basis functions:     1129 in task   324
  | Maximal number of non-zero basis functions:     1202 in task   325
  | Maximal number of non-zero basis functions:     1232 in task   326
  | Maximal number of non-zero basis functions:     1215 in task   327
  | Maximal number of non-zero basis functions:     1181 in task   328
  | Maximal number of non-zero basis functions:     1191 in task   329
  | Maximal number of non-zero basis functions:     1202 in task   330
  | Maximal number of non-zero basis functions:     1228 in task   331
  | Maximal number of non-zero basis functions:     1157 in task   332
  | Maximal number of non-zero basis functions:     1149 in task   333
  | Maximal number of non-zero basis functions:     1137 in task   334
  | Maximal number of non-zero basis functions:     1170 in task   335
  | Maximal number of non-zero basis functions:     1165 in task   336
  | Maximal number of non-zero basis functions:     1254 in task   337
  | Maximal number of non-zero basis functions:     1187 in task   338
  | Maximal number of non-zero basis functions:     1149 in task   339
  | Maximal number of non-zero basis functions:     1137 in task   340
  | Maximal number of non-zero basis functions:     1157 in task   341
  | Maximal number of non-zero basis functions:     1187 in task   342
  | Maximal number of non-zero basis functions:     1155 in task   343
  | Maximal number of non-zero basis functions:     1134 in task   344
  | Maximal number of non-zero basis functions:     1147 in task   345
  | Maximal number of non-zero basis functions:     1155 in task   346
  | Maximal number of non-zero basis functions:     1223 in task   347
  | Maximal number of non-zero basis functions:     1277 in task   348
  | Maximal number of non-zero basis functions:     1204 in task   349
  | Maximal number of non-zero basis functions:     1259 in task   350
  | Maximal number of non-zero basis functions:     1147 in task   351
  | Maximal number of non-zero basis functions:     1140 in task   352
  | Maximal number of non-zero basis functions:     1155 in task   353
  | Maximal number of non-zero basis functions:     1134 in task   354
  | Maximal number of non-zero basis functions:     1187 in task   355
  | Maximal number of non-zero basis functions:     1203 in task   356
  | Maximal number of non-zero basis functions:     1180 in task   357
  | Maximal number of non-zero basis functions:     1194 in task   358
  | Maximal number of non-zero basis functions:     1172 in task   359
  | Maximal number of non-zero basis functions:     1180 in task   360
  | Maximal number of non-zero basis functions:     1247 in task   361
  | Maximal number of non-zero basis functions:     1167 in task   362
  | Maximal number of non-zero basis functions:     1191 in task   363
  | Maximal number of non-zero basis functions:     1254 in task   364
  | Maximal number of non-zero basis functions:     1180 in task   365
  | Maximal number of non-zero basis functions:     1172 in task   366
  | Maximal number of non-zero basis functions:     1140 in task   367
  | Maximal number of non-zero basis functions:     1194 in task   368
  | Maximal number of non-zero basis functions:     1203 in task   369
  | Maximal number of non-zero basis functions:     1157 in task   370
  | Maximal number of non-zero basis functions:     1157 in task   371
  | Maximal number of non-zero basis functions:     1141 in task   372
  | Maximal number of non-zero basis functions:     1139 in task   373
  | Maximal number of non-zero basis functions:     1152 in task   374
  | Maximal number of non-zero basis functions:     1118 in task   375
  | Maximal number of non-zero basis functions:     1149 in task   376
  | Maximal number of non-zero basis functions:     1113 in task   377
  | Maximal number of non-zero basis functions:     1141 in task   378
  | Maximal number of non-zero basis functions:     1139 in task   379
  | Maximal number of non-zero basis functions:     1157 in task   380
  | Maximal number of non-zero basis functions:     1177 in task   381
  | Maximal number of non-zero basis functions:     1155 in task   382
  | Maximal number of non-zero basis functions:     1161 in task   383
  | Maximal number of non-zero basis functions:     1137 in task   384
  | Maximal number of non-zero basis functions:     1168 in task   385
  | Maximal number of non-zero basis functions:     1125 in task   386
  | Maximal number of non-zero basis functions:     1155 in task   387
  | Maximal number of non-zero basis functions:     1174 in task   388
  | Maximal number of non-zero basis functions:     1174 in task   389
  | Maximal number of non-zero basis functions:     1123 in task   390
  | Maximal number of non-zero basis functions:     1091 in task   391
  | Maximal number of non-zero basis functions:     1070 in task   392
  | Maximal number of non-zero basis functions:     1095 in task   393
  | Maximal number of non-zero basis functions:     1127 in task   394
  | Maximal number of non-zero basis functions:     1112 in task   395
  | Maximal number of non-zero basis functions:     1194 in task   396
  | Maximal number of non-zero basis functions:     1082 in task   397
  | Maximal number of non-zero basis functions:     1053 in task   398
  | Maximal number of non-zero basis functions:     1086 in task   399
  | Maximal number of non-zero basis functions:     1051 in task   400
  | Maximal number of non-zero basis functions:      918 in task   401
  | Maximal number of non-zero basis functions:      930 in task   402
  | Maximal number of non-zero basis functions:      918 in task   403
  | Maximal number of non-zero basis functions:      909 in task   404
  | Maximal number of non-zero basis functions:     1069 in task   405
  | Maximal number of non-zero basis functions:     1016 in task   406
  | Maximal number of non-zero basis functions:     1028 in task   407
  | Maximal number of non-zero basis functions:     1051 in task   408
  | Maximal number of non-zero basis functions:      918 in task   409
  | Maximal number of non-zero basis functions:      909 in task   410
  | Maximal number of non-zero basis functions:      918 in task   411
  | Maximal number of non-zero basis functions:      927 in task   412
  | Maximal number of non-zero basis functions:     1100 in task   413
  | Maximal number of non-zero basis functions:     1203 in task   414
  | Maximal number of non-zero basis functions:     1116 in task   415
  | Maximal number of non-zero basis functions:     1126 in task   416
  | Maximal number of non-zero basis functions:     1202 in task   417
  | Maximal number of non-zero basis functions:     1155 in task   418
  | Maximal number of non-zero basis functions:     1122 in task   419
  | Maximal number of non-zero basis functions:     1160 in task   420
  | Maximal number of non-zero basis functions:     1148 in task   421
  | Maximal number of non-zero basis functions:     1094 in task   422
  | Maximal number of non-zero basis functions:     1277 in task   423
  | Maximal number of non-zero basis functions:     1174 in task   424
  | Maximal number of non-zero basis functions:     1126 in task   425
  | Maximal number of non-zero basis functions:     1116 in task   426
  | Maximal number of non-zero basis functions:     1150 in task   427
  | Maximal number of non-zero basis functions:     1085 in task   428
  | Maximal number of non-zero basis functions:     1157 in task   429
  | Maximal number of non-zero basis functions:     1142 in task   430
  | Maximal number of non-zero basis functions:     1213 in task   431
  | Maximal number of non-zero basis functions:     1223 in task   432
  | Maximal number of non-zero basis functions:     1211 in task   433
  | Maximal number of non-zero basis functions:     1233 in task   434
  | Maximal number of non-zero basis functions:     1140 in task   435
  | Maximal number of non-zero basis functions:     1142 in task   436
  | Maximal number of non-zero basis functions:     1150 in task   437
  | Maximal number of non-zero basis functions:     1141 in task   438
  | Maximal number of non-zero basis functions:     1116 in task   439
  | Maximal number of non-zero basis functions:     1114 in task   440
  | Maximal number of non-zero basis functions:     1156 in task   441
  | Maximal number of non-zero basis functions:     1152 in task   442
  | Maximal number of non-zero basis functions:     1201 in task   443
  | Maximal number of non-zero basis functions:     1194 in task   444
  | Maximal number of non-zero basis functions:     1185 in task   445
  | Maximal number of non-zero basis functions:     1225 in task   446
  | Maximal number of non-zero basis functions:     1197 in task   447
  | Maximal number of non-zero basis functions:     1226 in task   448
  | Maximal number of non-zero basis functions:     1201 in task   449
  | Maximal number of non-zero basis functions:     1194 in task   450
  | Maximal number of non-zero basis functions:     1152 in task   451
  | Maximal number of non-zero basis functions:     1156 in task   452
  | Maximal number of non-zero basis functions:     1114 in task   453
  | Maximal number of non-zero basis functions:     1234 in task   454
  | Maximal number of non-zero basis functions:     1111 in task   455
  | Maximal number of non-zero basis functions:     1097 in task   456
  | Maximal number of non-zero basis functions:     1123 in task   457
  | Maximal number of non-zero basis functions:     1096 in task   458
  | Maximal number of non-zero basis functions:     1152 in task   459
  | Maximal number of non-zero basis functions:     1148 in task   460
  | Maximal number of non-zero basis functions:     1095 in task   461
  | Maximal number of non-zero basis functions:     1120 in task   462
  | Maximal number of non-zero basis functions:     1111 in task   463
  | Maximal number of non-zero basis functions:     1111 in task   464
  | Maximal number of non-zero basis functions:     1228 in task   465
  | Maximal number of non-zero basis functions:     1261 in task   466
  | Maximal number of non-zero basis functions:     1126 in task   467
  | Maximal number of non-zero basis functions:     1110 in task   468
  | Maximal number of non-zero basis functions:     1108 in task   469
  | Maximal number of non-zero basis functions:     1110 in task   470
  | Maximal number of non-zero basis functions:     1113 in task   471
  | Maximal number of non-zero basis functions:     1126 in task   472
  | Maximal number of non-zero basis functions:     1252 in task   473
  | Maximal number of non-zero basis functions:     1133 in task   474
  | Maximal number of non-zero basis functions:     1143 in task   475
  | Maximal number of non-zero basis functions:     1110 in task   476
  | Maximal number of non-zero basis functions:     1095 in task   477
  | Maximal number of non-zero basis functions:     1048 in task   478
  | Maximal number of non-zero basis functions:     1103 in task   479
  | Maximal number of non-zero basis functions:     1131 in task   480
  | Maximal number of non-zero basis functions:     1102 in task   481
  | Maximal number of non-zero basis functions:     1134 in task   482
  | Maximal number of non-zero basis functions:      918 in task   483
  | Maximal number of non-zero basis functions:      918 in task   484
  | Maximal number of non-zero basis functions:      909 in task   485
  | Maximal number of non-zero basis functions:      918 in task   486
  | Maximal number of non-zero basis functions:      918 in task   487
  | Maximal number of non-zero basis functions:      918 in task   488
  | Maximal number of non-zero basis functions:      945 in task   489
  | Maximal number of non-zero basis functions:      918 in task   490
  | Maximal number of non-zero basis functions:     1018 in task   491
  | Maximal number of non-zero basis functions:     1056 in task   492
  | Maximal number of non-zero basis functions:      918 in task   493
  | Maximal number of non-zero basis functions:     1004 in task   494
  | Maximal number of non-zero basis functions:      962 in task   495
  | Maximal number of non-zero basis functions:     1024 in task   496
  | Maximal number of non-zero basis functions:     1053 in task   497
  | Maximal number of non-zero basis functions:     1071 in task   498
  | Maximal number of non-zero basis functions:      945 in task   499
  | Maximal number of non-zero basis functions:      918 in task   500
  | Maximal number of non-zero basis functions:      909 in task   501
  | Maximal number of non-zero basis functions:      918 in task   502
  | Maximal number of non-zero basis functions:     1071 in task   503
  | Maximal number of non-zero basis functions:     1008 in task   504
  | Maximal number of non-zero basis functions:     1039 in task   505
  | Maximal number of non-zero basis functions:     1097 in task   506
  | Maximal number of non-zero basis functions:     1102 in task   507
  | Maximal number of non-zero basis functions:     1134 in task   508
  | Maximal number of non-zero basis functions:     1162 in task   509
  | Maximal number of non-zero basis functions:     1206 in task   510
  | Maximal number of non-zero basis functions:     1129 in task   511
  Allocating        0.229 MB for KS_eigenvector_complex
  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work       12.112 s, elapsed       21.582 s => Consider using load balancing!
  Integrating overlap matrix.
  Time summed over all CPUs for integration: real work        9.107 s, elapsed       16.812 s
  Decreasing sparse matrix size:
  | Tolerance:  0.1000E-12
  Hamiltonian matrix
  | Array has   253226 nonzero elements out of   352311 elements
  | Sparsity factor is 0.281
  Overlap matrix
  | Array has   235656 nonzero elements out of   352311 elements
  | Sparsity factor is 0.331
  New size of hamiltonian matrix:      254919

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the (modified) LAPACK eigensolver.
  Singularity check in k-point 512, task 0 (analysis for other k-points/tasks may follow below):
  Overlap matrix is not singular
  | Lowest and highest eigenvalues :  0.1874E-03,  0.9057E+01
  Finished singularity check of overlap matrix
  | Time :     0.073 s
  Starting LAPACK eigensolver
  Finished Cholesky decomposition
  | Time :     0.049 s
  Finished transformation to standard eigenproblem
  | Time :     0.001 s
  Finished solving standard eigenproblem
  | Time :     0.002 s
  Finished back-transformation of eigenvectors
  | Time :     0.000 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -7.32646434 eV
  Writing Kohn-Sham eigenvalues.
  K-point:       1 at    0.000000    0.000000    0.000000 (in units of recip. lattice)

  State    Occupation    Eigenvalue [Ha]    Eigenvalue [eV]
      1       2.00000        -668.744338       -18197.45932
      2       2.00000        -668.744338       -18197.45932
      3       2.00000         -91.098955        -2478.92871
      4       2.00000         -91.098955        -2478.92871
      5       2.00000         -81.216413        -2210.01105
      6       2.00000         -81.216413        -2210.01105
      7       2.00000         -81.216407        -2210.01089
      8       2.00000         -81.216407        -2210.01089
      9       2.00000         -81.216407        -2210.01089
     10       2.00000         -81.216407        -2210.01089
     11       2.00000         -14.897323         -405.37678
     12       2.00000         -14.897323         -405.37678
     13       2.00000         -11.691989         -318.15520
     14       2.00000         -11.691989         -318.15520
     15       2.00000         -11.691924         -318.15344
     16       2.00000         -11.691924         -318.15344
     17       2.00000         -11.691924         -318.15344
     18       2.00000         -11.691924         -318.15344
     19       2.00000          -6.438399         -175.19774
     20       2.00000          -6.438398         -175.19774
     21       2.00000          -6.438374         -175.19706
     22       2.00000          -6.438374         -175.19706
     23       2.00000          -6.438374         -175.19706
     24       2.00000          -6.438374         -175.19706
     25       2.00000          -6.438332         -175.19593
     26       2.00000          -6.438332         -175.19593
     27       2.00000          -6.438332         -175.19593
     28       2.00000          -6.438332         -175.19593
     29       2.00000          -2.041545          -55.55327
     30       2.00000          -2.034765          -55.36877
     31       2.00000          -1.258959          -34.25803
     32       2.00000          -1.222240          -33.25883
     33       2.00000          -1.222240          -33.25883
     34       2.00000          -1.216381          -33.09942
     35       2.00000          -1.216381          -33.09942
     36       2.00000          -1.215673          -33.08015
     37       2.00000          -0.485207          -13.20316
     38       2.00000          -0.387931          -10.55613
     39       0.00000          -0.235109           -6.39765
     40       0.00000          -0.235109           -6.39763
     41       0.00000          -0.230574           -6.27423
     42       0.00000          -0.225966           -6.14884
     43       0.00000          -0.207950           -5.65860
     44       0.00000          -0.207949           -5.65858
     45       0.00000          -0.181947           -4.95102
     46       0.00000          -0.181940           -4.95085
     47       0.00000          -0.092419           -2.51484
     48       0.00000          -0.092411           -2.51462
     49       0.00000           0.086134            2.34383
     50       0.00000           0.174768            4.75567
     51       0.00000           0.229079            6.23357

  What follows are estimated values for band gap, HOMO, LUMO, etc.
  | They are estimated on a discrete k-point grid and not necessarily exact.
  | For converged numbers, create a DOS and/or band structure plot on a denser k-grid.

  Highest occupied state (VBM) at     -7.33152710 eV (relative to internal zero)
  | Occupation number:      1.52599750
  | K-point:     869 at    0.375000    0.312500    0.583333 (in units of recip. lattice)

  Lowest unoccupied state (CBM) at    -7.31466793 eV (relative to internal zero)
  | Occupation number:      0.09526331
  | K-point:     941 at    0.375000    0.812500    0.583333 (in units of recip. lattice)

  ESTIMATED overall HOMO-LUMO gap:      0.01685917 eV between HOMO at k-point 869 and LUMO at k-point 941
  | This appears to be an indirect band gap.
  | Smallest direct gap :      0.13524870 eV for k_point 723 at    0.312500    0.312500    0.333333 (in units of recip. lattice)
  However, this system has fractional occupation numbers. Since we use a finite k-point grid,
  this material is metallic within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.
  Calculating total energy contributions from superposition of free atom densities.

  Total energy components:
  | Sum of eigenvalues            :       -4368.28086530 Ha     -118866.97022973 eV
  | XC energy correction          :        -229.40096901 Ha       -6242.31797228 eV
  | XC potential correction       :         298.87049655 Ha        8132.67999720 eV
  | Free-atom electrostatic energy:       -2961.56366195 Ha      -80588.24752646 eV
  | Hartree energy correction     :          -0.00000000 Ha          -0.00000000 eV
  | Entropy correction            :          -0.00000050 Ha          -0.00001359 eV
  | ---------------------------
  | Total energy                  :       -7260.37499971 Ha     -197564.85573128 eV
  | Total energy, T -> 0          :       -7260.37500021 Ha     -197564.85574487 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :       -7260.37500071 Ha     -197564.85575846 eV

  Derived energy quantities:
  | Kinetic energy                :        7466.94733654 Ha      203185.97501596 eV
  | Electrostatic energy          :      -14497.92136725 Ha     -394508.51277495 eV
  | Energy correction for multipole
  | error in Hartree potential    :           0.00000000 Ha           0.00000000 eV
  | Sum of eigenvalues per atom                           :      -59433.48511487 eV
  | Total energy (T->0) per atom                          :      -98782.42787243 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -98782.42787923 eV
  Initialize hartree_potential_storage
  Max. number of atoms included in rho_multipole:            2

  End scf initialization - timings             :  max(cpu_time)    wall_clock(cpu1)
  | Time for scf. initialization                :        0.374 s           0.424 s
  | Boundary condition initialization           :        0.119 s           0.120 s
  | Integration                                 :        0.186 s           0.186 s
  | Solution of K.-S. eqns.                     :        0.134 s           0.184 s
  | Grid partitioning                           :        0.022 s           0.022 s
  | Preloading free-atom quantities on grid     :        0.017 s           0.017 s
  | Free-atom superposition energy              :        0.001 s           0.002 s
  | Total energy evaluation                     :        0.002 s           0.002 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        5.092 MB (on task   0)
  |   Maximum:        5.169 MB (on task   1)
  |   Average:        5.093 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:       15.584 MB (on task 142 after allocating wave)
  |   Maximum:       22.665 MB (on task  42 after allocating wave)
  |   Average:       19.677 MB
  | Largest tracked array allocation so far:
  |   Minimum:        6.304 MB (hamiltonian_shell on task 142)
  |   Maximum:       12.441 MB (hamiltonian_shell on task  42)
  |   Average:        9.825 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------
  Evaluating new KS density using the density matrix
  Evaluating density matrix
  Time summed over all CPUs for getting density from density matrix: real work       22.251 s, elapsed       37.735 s
  Integration grid: deviation in total charge (<rho> - N_e) =   1.209344E-11

  Time for density update prior                :  max(cpu_time)    wall_clock(cpu1)
  | self-consistency iterative process          :        0.086 s           0.086 s

------------------------------------------------------------
          Begin self-consistency iteration #    1

  Date     :  20220728, Time     :  132804.120
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      80.0000000000
  | Integrated number of electrons on 3D grid     :      80.0002187926
  | Charge integration error                      :       0.0002187926
  | Normalization factor for density and gradient :       0.9999972651

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =  -0.156534E-13
  | Sum of charges compensated after spline to logarithmic grids =  -0.815739E-08
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =  -0.000000E+00
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        4.215 s, elapsed        6.501 s
  | RMS charge density error from multipole expansion :   0.295902E-03
  | Average real-space part of the electrostatic potential :     -0.02389560 eV

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work       11.534 s, elapsed       20.809 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the (modified) LAPACK eigensolver.
  Starting LAPACK eigensolver
  Finished Cholesky decomposition
  | Time :     0.001 s
  Finished transformation to standard eigenproblem
  | Time :     0.000 s
  Finished solving standard eigenproblem
  | Time :     0.002 s
  Finished back-transformation of eigenvectors
  | Time :     0.000 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -7.33701250 eV
  Writing Kohn-Sham eigenvalues.
  K-point:       1 at    0.000000    0.000000    0.000000 (in units of recip. lattice)

  State    Occupation    Eigenvalue [Ha]    Eigenvalue [eV]
      1       2.00000        -668.748044       -18197.56015
      2       2.00000        -668.748044       -18197.56015
      3       2.00000         -91.102378        -2479.02185
      4       2.00000         -91.102378        -2479.02185
      5       2.00000         -81.219895        -2210.10580
      6       2.00000         -81.219895        -2210.10580
      7       2.00000         -81.219863        -2210.10493
      8       2.00000         -81.219863        -2210.10493
      9       2.00000         -81.219863        -2210.10493
     10       2.00000         -81.219863        -2210.10493
     11       2.00000         -14.900143         -405.45353
     12       2.00000         -14.900143         -405.45353
     13       2.00000         -11.694853         -318.23315
     14       2.00000         -11.694853         -318.23315
     15       2.00000         -11.694716         -318.22941
     16       2.00000         -11.694716         -318.22941
     17       2.00000         -11.694716         -318.22941
     18       2.00000         -11.694716         -318.22941
     19       2.00000          -6.441263         -175.27568
     20       2.00000          -6.441263         -175.27568
     21       2.00000          -6.441236         -175.27495
     22       2.00000          -6.441236         -175.27495
     23       2.00000          -6.441236         -175.27495
     24       2.00000          -6.441236         -175.27495
     25       2.00000          -6.441136         -175.27223
     26       2.00000          -6.441136         -175.27223
     27       2.00000          -6.441136         -175.27223
     28       2.00000          -6.441136         -175.27223
     29       2.00000          -2.043141          -55.59670
     30       2.00000          -2.036382          -55.41277
     31       2.00000          -1.260310          -34.29478
     32       2.00000          -1.223611          -33.29615
     33       2.00000          -1.223611          -33.29614
     34       2.00000          -1.217769          -33.13719
     35       2.00000          -1.217769          -33.13718
     36       2.00000          -1.217162          -33.12067
     37       2.00000          -0.485321          -13.20626
     38       2.00000          -0.388177          -10.56283
     39       0.00000          -0.235641           -6.41211
     40       0.00000          -0.235640           -6.41209
     41       0.00000          -0.231217           -6.29174
     42       0.00000          -0.226239           -6.15627
     43       0.00000          -0.208541           -5.67469
     44       0.00000          -0.208541           -5.67468
     45       0.00000          -0.182634           -4.96974
     46       0.00000          -0.182628           -4.96957
     47       0.00000          -0.093266           -2.53791
     48       0.00000          -0.093258           -2.53769
     49       0.00000           0.085503            2.32666
     50       0.00000           0.174686            4.75344
     51       0.00000           0.228991            6.23118

  What follows are estimated values for band gap, HOMO, LUMO, etc.
  | They are estimated on a discrete k-point grid and not necessarily exact.
  | For converged numbers, create a DOS and/or band structure plot on a denser k-grid.

  Highest occupied state (VBM) at     -7.34035490 eV (relative to internal zero)
  | Occupation number:      1.36356344
  | K-point:    1332 at    0.687500    0.625000    0.583333 (in units of recip. lattice)

  Lowest unoccupied state (CBM) at    -7.32770402 eV (relative to internal zero)
  | Occupation number:      0.18803365
  | K-point:    1263 at    0.625000    0.187500    0.583333 (in units of recip. lattice)

  ESTIMATED overall HOMO-LUMO gap:      0.01265088 eV between HOMO at k-point 1332 and LUMO at k-point 1263
  | This appears to be an indirect band gap.
  | Smallest direct gap :      0.13493037 eV for k_point 723 at    0.312500    0.312500    0.333333 (in units of recip. lattice)
  However, this system has fractional occupation numbers. Since we use a finite k-point grid,
  this material is metallic within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.

  Total energy components:
  | Sum of eigenvalues            :       -4368.47824799 Ha     -118872.34128589 eV
  | XC energy correction          :        -229.39264879 Ha       -6242.09156768 eV
  | XC potential correction       :         298.85958642 Ha        8132.38311756 eV
  | Free-atom electrostatic energy:       -2961.56366195 Ha      -80588.24752646 eV
  | Hartree energy correction     :           0.20056967 Ha           5.45777840 eV
  | Entropy correction            :          -0.00000068 Ha          -0.00001855 eV
  | ---------------------------
  | Total energy                  :       -7260.37440264 Ha     -197564.83948406 eV
  | Total energy, T -> 0          :       -7260.37440332 Ha     -197564.83950261 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :       -7260.37440400 Ha     -197564.83952117 eV

  Derived energy quantities:
  | Kinetic energy                :        7466.82401873 Ha      203182.61936754 eV
  | Electrostatic energy          :      -14497.80577258 Ha     -394505.36728392 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00004055 Ha          -0.00110335 eV
  | Sum of eigenvalues per atom                           :      -59436.17064294 eV
  | Total energy (T->0) per atom                          :      -98782.41975131 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -98782.41976058 eV
  Evaluating new KS density using the density matrix
  Evaluating density matrix
  Time summed over all CPUs for getting density from density matrix: real work       21.913 s, elapsed       37.102 s
  Integration grid: deviation in total charge (<rho> - N_e) =   1.222134E-11

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.7587E-01
  | Change of unmixed KS density  :  0.1948E+03
  | Change of sum of eigenvalues  : -0.5371E+01 eV
  | Change of total energy        :  0.1625E-01 eV


------------------------------------------------------------
  End self-consistency iteration #     1       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.211 s           0.212 s
  | Charge density update                       :        0.083 s           0.082 s
  | Density mixing & preconditioning            :        0.007 s           0.007 s
  | Hartree multipole update                    :        0.002 s           0.002 s
  | Hartree multipole summation                 :        0.017 s           0.018 s
  | Integration                                 :        0.053 s           0.053 s
  | Solution of K.-S. eqns.                     :        0.045 s           0.045 s
  | Total energy evaluation                     :        0.002 s           0.002 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        5.092 MB (on task   0)
  |   Maximum:        5.169 MB (on task   1)
  |   Average:        5.093 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:       16.015 MB (on task 142 after allocating gradient_basis_wave)
  |   Maximum:       24.023 MB (on task  42 after allocating gradient_basis_wave)
  |   Average:       20.670 MB
  | Largest tracked array allocation so far:
  |   Minimum:        6.304 MB (hamiltonian_shell on task 142)
  |   Maximum:       12.441 MB (hamiltonian_shell on task  42)
  |   Average:        9.825 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #    2

  Date     :  20220728, Time     :  132804.355
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      80.0000000000
  | Integrated number of electrons on 3D grid     :      80.0033975593
  | Charge integration error                      :       0.0033975593
  | Normalization factor for density and gradient :       0.9999575323

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =  -0.938439E-14
  | Sum of charges compensated after spline to logarithmic grids =  -0.908086E-07
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =  -0.000000E+00
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        4.828 s, elapsed        7.690 s
  | RMS charge density error from multipole expansion :   0.470346E-02
  | Average real-space part of the electrostatic potential :     -0.38069474 eV

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work       11.546 s, elapsed       20.863 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the (modified) LAPACK eigensolver.
  Starting LAPACK eigensolver
  Finished Cholesky decomposition
  | Time :     0.001 s
  Finished transformation to standard eigenproblem
  | Time :     0.001 s
  Finished solving standard eigenproblem
  | Time :     0.001 s
  Finished back-transformation of eigenvectors
  | Time :     0.000 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -7.51864923 eV
  What follows are estimated values for band gap, HOMO, LUMO, etc.
  | They are estimated on a discrete k-point grid and not necessarily exact.
  | For converged numbers, create a DOS and/or band structure plot on a denser k-grid.

  Highest occupied state (VBM) at     -7.51951837 eV (relative to internal zero)
  | Occupation number:      1.09782585
  | K-point:     419 at    0.187500    0.187500    0.583333 (in units of recip. lattice)

  Lowest unoccupied state (CBM) at    -7.51337647 eV (relative to internal zero)
  | Occupation number:      0.45586046
  | K-point:    1215 at    0.562500    0.187500    0.583333 (in units of recip. lattice)

  ESTIMATED overall HOMO-LUMO gap:      0.00614190 eV between HOMO at k-point 419 and LUMO at k-point 1215
  | This appears to be an indirect band gap.
  | Smallest direct gap :      0.09756169 eV for k_point 1335 at    0.687500    0.687500    0.583333 (in units of recip. lattice)
  However, this system has fractional occupation numbers. Since we use a finite k-point grid,
  this material is metallic within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.

  Checking to see if s.c.f. parameters should be adjusted.
  Adjusted the Pulay mixing parameter (charge_mix_param) for an expected low-gap system. New value:   0.020000 .
  Adjusted the occupation broadening width for an expected low-gap system. New value:      0.05000000 eV.

  Total energy components:
  | Sum of eigenvalues            :       -4371.39165008 Ha     -118951.61899054 eV
  | XC energy correction          :        -229.27320980 Ha       -6238.84146755 eV
  | XC potential correction       :         298.70257829 Ha        8128.11070909 eV
  | Free-atom electrostatic energy:       -2961.56366195 Ha      -80588.24752646 eV
  | Hartree energy correction     :           3.15639984 Ha          85.89000961 eV
  | Entropy correction            :          -0.00004155 Ha          -0.00113069 eV
  | ---------------------------
  | Total energy                  :       -7260.36954370 Ha     -197564.70726583 eV
  | Total energy, T -> 0          :       -7260.36958526 Ha     -197564.70839652 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :       -7260.36962681 Ha     -197564.70952720 eV

  Derived energy quantities:
  | Kinetic energy                :        7465.02543537 Ha      203133.67742403 eV
  | Electrostatic energy          :      -14496.12176927 Ha     -394459.54322231 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00065675 Ha          -0.01787109 eV
  | Sum of eigenvalues per atom                           :      -59475.80949527 eV
  | Total energy (T->0) per atom                          :      -98782.35419826 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -98782.35476360 eV
  Evaluating new KS density using the density matrix
  Evaluating density matrix
  Time summed over all CPUs for getting density from density matrix: real work       22.052 s, elapsed       37.389 s
  Integration grid: deviation in total charge (<rho> - N_e) =   1.227818E-11

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.7152E-01
  | Change of unmixed KS density  :  0.1744E-02
  | Change of sum of eigenvalues  : -0.7928E+02 eV
  | Change of total energy        :  0.1322E+00 eV


------------------------------------------------------------
  End self-consistency iteration #     2       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.233 s           0.212 s
  | Charge density update                       :        0.083 s           0.082 s
  | Density mixing & preconditioning            :        0.028 s           0.007 s
  | Hartree multipole update                    :        0.001 s           0.001 s
  | Hartree multipole summation                 :        0.018 s           0.019 s
  | Integration                                 :        0.054 s           0.054 s
  | Solution of K.-S. eqns.                     :        0.045 s           0.046 s
  | Total energy evaluation                     :        0.002 s           0.002 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        5.093 MB (on task   0)
  |   Maximum:        5.170 MB (on task   1)
  |   Average:        5.094 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:       16.016 MB (on task 142 after allocating gradient_basis_wave)
  |   Maximum:       24.024 MB (on task  42 after allocating gradient_basis_wave)
  |   Average:       20.671 MB
  | Largest tracked array allocation so far:
  |   Minimum:        6.304 MB (hamiltonian_shell on task 142)
  |   Maximum:       12.441 MB (hamiltonian_shell on task  42)
  |   Average:        9.825 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #    3

  Date     :  20220728, Time     :  132804.590
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      80.0000000000
  | Integrated number of electrons on 3D grid     :      80.0023025390
  | Charge integration error                      :       0.0023025390
  | Normalization factor for density and gradient :       0.9999712191

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =   0.530703E-14
  | Sum of charges compensated after spline to logarithmic grids =  -0.105509E-06
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =  -0.000000E+00
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        4.832 s, elapsed        7.686 s
  | RMS charge density error from multipole expansion :   0.444201E-02
  | Average real-space part of the electrostatic potential :     -0.37283270 eV

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work       11.557 s, elapsed       20.811 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the (modified) LAPACK eigensolver.
  Starting LAPACK eigensolver
  Finished Cholesky decomposition
  | Time :     0.001 s
  Finished transformation to standard eigenproblem
  | Time :     0.000 s
  Finished solving standard eigenproblem
  | Time :     0.002 s
  Finished back-transformation of eigenvectors
  | Time :     0.000 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -7.49895659 eV
  What follows are estimated values for band gap, HOMO, LUMO, etc.
  | They are estimated on a discrete k-point grid and not necessarily exact.
  | For converged numbers, create a DOS and/or band structure plot on a denser k-grid.

  Highest occupied state (VBM) at     -7.50038442 eV (relative to internal zero)
  | Occupation number:      1.03221377
  | K-point:     419 at    0.187500    0.187500    0.583333 (in units of recip. lattice)

  Lowest unoccupied state (CBM) at    -7.49367204 eV (relative to internal zero)
  | Occupation number:      0.88118301
  | K-point:    1085 at    0.437500    0.812500    0.583333 (in units of recip. lattice)

  ESTIMATED overall HOMO-LUMO gap:      0.00671238 eV between HOMO at k-point 419 and LUMO at k-point 1085
  | This appears to be an indirect band gap.
  | Smallest direct gap :      0.09875948 eV for k_point 725 at    0.312500    0.312500    0.583333 (in units of recip. lattice)
  However, this system has fractional occupation numbers. Since we use a finite k-point grid,
  this material is metallic within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.

  Total energy components:
  | Sum of eigenvalues            :       -4370.72893065 Ha     -118933.58547707 eV
  | XC energy correction          :        -229.31146586 Ha       -6239.88246789 eV
  | XC potential correction       :         298.75074169 Ha        8129.42130183 eV
  | Free-atom electrostatic energy:       -2961.56366195 Ha      -80588.24752646 eV
  | Hartree energy correction     :           2.48366776 Ha          67.58403851 eV
  | Entropy correction            :          -0.00003905 Ha          -0.00106267 eV
  | ---------------------------
  | Total energy                  :       -7260.36964900 Ha     -197564.71013109 eV
  | Total energy, T -> 0          :       -7260.36968805 Ha     -197564.71119376 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :       -7260.36972711 Ha     -197564.71225643 eV

  Derived energy quantities:
  | Kinetic energy                :        7465.96477709 Ha      203159.23821282 eV
  | Electrostatic energy          :      -14497.02296023 Ha     -394484.06587602 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00061034 Ha          -0.01660817 eV
  | Sum of eigenvalues per atom                           :      -59466.79273854 eV
  | Total energy (T->0) per atom                          :      -98782.35559688 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -98782.35612822 eV
  Evaluating new KS density using the density matrix
  Evaluating density matrix
  Time summed over all CPUs for getting density from density matrix: real work       22.028 s, elapsed       37.324 s
  Integration grid: deviation in total charge (<rho> - N_e) =   1.199396E-11

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.2222E-01
  | Change of unmixed KS density  :  0.2640E-01
  | Change of sum of eigenvalues  :  0.1803E+02 eV
  | Change of total energy        : -0.2865E-02 eV


------------------------------------------------------------
  End self-consistency iteration #     3       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.234 s           0.213 s
  | Charge density update                       :        0.083 s           0.082 s
  | Density mixing & preconditioning            :        0.028 s           0.007 s
  | Hartree multipole update                    :        0.001 s           0.001 s
  | Hartree multipole summation                 :        0.019 s           0.019 s
  | Integration                                 :        0.054 s           0.053 s
  | Solution of K.-S. eqns.                     :        0.047 s           0.047 s
  | Total energy evaluation                     :        0.002 s           0.002 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        5.094 MB (on task   0)
  |   Maximum:        5.170 MB (on task   1)
  |   Average:        5.094 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:       16.017 MB (on task 142 after allocating gradient_basis_wave)
  |   Maximum:       24.024 MB (on task  42 after allocating gradient_basis_wave)
  |   Average:       20.671 MB
  | Largest tracked array allocation so far:
  |   Minimum:        6.304 MB (hamiltonian_shell on task 142)
  |   Maximum:       12.441 MB (hamiltonian_shell on task  42)
  |   Average:        9.825 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #    4

  Date     :  20220728, Time     :  132804.826
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      80.0000000000
  | Integrated number of electrons on 3D grid     :      80.0008857712
  | Charge integration error                      :       0.0008857712
  | Normalization factor for density and gradient :       0.9999889280

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =   0.394354E-14
  | Sum of charges compensated after spline to logarithmic grids =  -0.117232E-06
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =  -0.000000E+00
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        4.860 s, elapsed        7.669 s
  | RMS charge density error from multipole expansion :   0.493444E-02
  | Average real-space part of the electrostatic potential :     -0.41537012 eV

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work       11.565 s, elapsed       20.768 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the (modified) LAPACK eigensolver.
  Starting LAPACK eigensolver
  Finished Cholesky decomposition
  | Time :     0.000 s
  Finished transformation to standard eigenproblem
  | Time :     0.001 s
  Finished solving standard eigenproblem
  | Time :     0.001 s
  Finished back-transformation of eigenvectors
  | Time :     0.000 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -7.51603033 eV
  What follows are estimated values for band gap, HOMO, LUMO, etc.
  | They are estimated on a discrete k-point grid and not necessarily exact.
  | For converged numbers, create a DOS and/or band structure plot on a denser k-grid.

  Highest occupied state (VBM) at     -7.51991868 eV (relative to internal zero)
  | Occupation number:      1.08757418
  | K-point:     419 at    0.187500    0.187500    0.583333 (in units of recip. lattice)

  Lowest unoccupied state (CBM) at    -7.51301628 eV (relative to internal zero)
  | Occupation number:      0.93206241
  | K-point:    1218 at    0.562500    0.250000    0.583333 (in units of recip. lattice)

  ESTIMATED overall HOMO-LUMO gap:      0.00690241 eV between HOMO at k-point 419 and LUMO at k-point 1218
  | This appears to be an indirect band gap.
  | Smallest direct gap :      0.09841895 eV for k_point 1335 at    0.687500    0.687500    0.583333 (in units of recip. lattice)
  However, this system has fractional occupation numbers. Since we use a finite k-point grid,
  this material is metallic within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.

  Total energy components:
  | Sum of eigenvalues            :       -4370.95233810 Ha     -118939.66470312 eV
  | XC energy correction          :        -229.30493918 Ha       -6239.70486771 eV
  | XC potential correction       :         298.74170102 Ha        8129.17529252 eV
  | Free-atom electrostatic energy:       -2961.56366195 Ha      -80588.24752646 eV
  | Hartree energy correction     :           2.70971952 Ha          73.73521987 eV
  | Entropy correction            :          -0.00004018 Ha          -0.00109343 eV
  | ---------------------------
  | Total energy                  :       -7260.36951868 Ha     -197564.70658490 eV
  | Total energy, T -> 0          :       -7260.36955886 Ha     -197564.70767833 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :       -7260.36959905 Ha     -197564.70877176 eV

  Derived energy quantities:
  | Kinetic energy                :        7465.93754572 Ha      203158.49720954 eV
  | Electrostatic energy          :      -14497.00212522 Ha     -394483.49892674 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00067821 Ha          -0.01845491 eV
  | Sum of eigenvalues per atom                           :      -59469.83235156 eV
  | Total energy (T->0) per atom                          :      -98782.35383917 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -98782.35438588 eV
  Evaluating new KS density using the density matrix
  Evaluating density matrix
  Time summed over all CPUs for getting density from density matrix: real work       22.051 s, elapsed       37.488 s
  Integration grid: deviation in total charge (<rho> - N_e) =   1.196554E-11

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.1431E-01
  | Change of unmixed KS density  :  0.4163E-02
  | Change of sum of eigenvalues  : -0.6079E+01 eV
  | Change of total energy        :  0.3546E-02 eV


------------------------------------------------------------
  End self-consistency iteration #     4       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.235 s           0.214 s
  | Charge density update                       :        0.083 s           0.083 s
  | Density mixing & preconditioning            :        0.028 s           0.007 s
  | Hartree multipole update                    :        0.001 s           0.001 s
  | Hartree multipole summation                 :        0.018 s           0.018 s
  | Integration                                 :        0.053 s           0.054 s
  | Solution of K.-S. eqns.                     :        0.047 s           0.047 s
  | Total energy evaluation                     :        0.002 s           0.002 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        5.094 MB (on task   0)
  |   Maximum:        5.170 MB (on task   1)
  |   Average:        5.095 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:       16.017 MB (on task 142 after allocating gradient_basis_wave)
  |   Maximum:       24.024 MB (on task  42 after allocating gradient_basis_wave)
  |   Average:       20.671 MB
  | Largest tracked array allocation so far:
  |   Minimum:        6.304 MB (hamiltonian_shell on task 142)
  |   Maximum:       12.441 MB (hamiltonian_shell on task  42)
  |   Average:        9.825 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #    5

  Date     :  20220728, Time     :  132805.062
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      80.0000000000
  | Integrated number of electrons on 3D grid     :      80.0001523137
  | Charge integration error                      :       0.0001523137
  | Normalization factor for density and gradient :       0.9999980961

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =  -0.110971E-13
  | Sum of charges compensated after spline to logarithmic grids =  -0.135407E-06
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =  -0.000000E+00
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        4.886 s, elapsed        7.746 s
  | RMS charge density error from multipole expansion :   0.531100E-02
  | Average real-space part of the electrostatic potential :     -0.45242347 eV

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work       11.555 s, elapsed       20.796 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the (modified) LAPACK eigensolver.
  Starting LAPACK eigensolver
  Finished Cholesky decomposition
  | Time :     0.000 s
  Finished transformation to standard eigenproblem
  | Time :     0.001 s
  Finished solving standard eigenproblem
  | Time :     0.001 s
  Finished back-transformation of eigenvectors
  | Time :     0.001 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -7.52880252 eV
  What follows are estimated values for band gap, HOMO, LUMO, etc.
  | They are estimated on a discrete k-point grid and not necessarily exact.
  | For converged numbers, create a DOS and/or band structure plot on a denser k-grid.

  Highest occupied state (VBM) at     -7.53550038 eV (relative to internal zero)
  | Occupation number:      1.15025523
  | K-point:    1437 at    0.812500    0.812500    0.583333 (in units of recip. lattice)

  Lowest unoccupied state (CBM) at    -7.52857277 eV (relative to internal zero)
  | Occupation number:      0.99481514
  | K-point:     473 at    0.187500    0.562500    0.583333 (in units of recip. lattice)

  ESTIMATED overall HOMO-LUMO gap:      0.00692761 eV between HOMO at k-point 1437 and LUMO at k-point 473
  | This appears to be an indirect band gap.
  | Smallest direct gap :      0.09783920 eV for k_point 725 at    0.312500    0.312500    0.583333 (in units of recip. lattice)
  However, this system has fractional occupation numbers. Since we use a finite k-point grid,
  this material is metallic within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.

  Total energy components:
  | Sum of eigenvalues            :       -4371.12772678 Ha     -118944.43727212 eV
  | XC energy correction          :        -229.29982885 Ha       -6239.56580861 eV
  | XC potential correction       :         298.73499721 Ha        8128.99287276 eV
  | Free-atom electrostatic energy:       -2961.56366195 Ha      -80588.24752646 eV
  | Hartree energy correction     :           2.88674646 Ha          78.55236794 eV
  | Entropy correction            :          -0.00004141 Ha          -0.00112684 eV
  | ---------------------------
  | Total energy                  :       -7260.36947390 Ha     -197564.70536649 eV
  | Total energy, T -> 0          :       -7260.36951532 Ha     -197564.70649333 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :       -7260.36955673 Ha     -197564.70762017 eV

  Derived energy quantities:
  | Kinetic energy                :        7466.05073804 Ha      203161.57732923 eV
  | Electrostatic energy          :      -14497.12038309 Ha     -394486.71688710 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00072541 Ha          -0.01973936 eV
  | Sum of eigenvalues per atom                           :      -59472.21863606 eV
  | Total energy (T->0) per atom                          :      -98782.35324666 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -98782.35381008 eV
  Evaluating new KS density using the density matrix
  Evaluating density matrix
  Time summed over all CPUs for getting density from density matrix: real work       22.047 s, elapsed       37.525 s
  Integration grid: deviation in total charge (<rho> - N_e) =   1.210765E-11

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.8882E-02
  | Change of unmixed KS density  :  0.2575E-02
  | Change of sum of eigenvalues  : -0.4773E+01 eV
  | Change of total energy        :  0.1218E-02 eV


------------------------------------------------------------
  End self-consistency iteration #     5       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.237 s           0.216 s
  | Charge density update                       :        0.083 s           0.083 s
  | Density mixing & preconditioning            :        0.029 s           0.008 s
  | Hartree multipole update                    :        0.001 s           0.002 s
  | Hartree multipole summation                 :        0.019 s           0.018 s
  | Integration                                 :        0.054 s           0.054 s
  | Solution of K.-S. eqns.                     :        0.048 s           0.048 s
  | Total energy evaluation                     :        0.002 s           0.002 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        5.094 MB (on task   0)
  |   Maximum:        5.171 MB (on task   1)
  |   Average:        5.095 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:       16.017 MB (on task 142 after allocating gradient_basis_wave)
  |   Maximum:       24.024 MB (on task  42 after allocating gradient_basis_wave)
  |   Average:       20.671 MB
  | Largest tracked array allocation so far:
  |   Minimum:        6.304 MB (hamiltonian_shell on task 142)
  |   Maximum:       12.441 MB (hamiltonian_shell on task  42)
  |   Average:        9.825 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #    6

  Date     :  20220728, Time     :  132805.301
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      80.0000000000
  | Integrated number of electrons on 3D grid     :      80.0000400583
  | Charge integration error                      :       0.0000400583
  | Normalization factor for density and gradient :       0.9999994993

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =  -0.127832E-13
  | Sum of charges compensated after spline to logarithmic grids =  -0.140535E-06
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =  -0.000000E+00
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        4.882 s, elapsed        7.830 s
  | RMS charge density error from multipole expansion :   0.541416E-02
  | Average real-space part of the electrostatic potential :     -0.46263872 eV

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work       11.565 s, elapsed       20.759 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the (modified) LAPACK eigensolver.
  Starting LAPACK eigensolver
  Finished Cholesky decomposition
  | Time :     0.001 s
  Finished transformation to standard eigenproblem
  | Time :     0.000 s
  Finished solving standard eigenproblem
  | Time :     0.002 s
  Finished back-transformation of eigenvectors
  | Time :     0.000 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -7.53224672 eV
  What follows are estimated values for band gap, HOMO, LUMO, etc.
  | They are estimated on a discrete k-point grid and not necessarily exact.
  | For converged numbers, create a DOS and/or band structure plot on a denser k-grid.

  Highest occupied state (VBM) at     -7.53279742 eV (relative to internal zero)
  | Occupation number:      1.01242758
  | K-point:     563 at    0.250000    0.187500    0.583333 (in units of recip. lattice)

  Lowest unoccupied state (CBM) at    -7.53174914 eV (relative to internal zero)
  | Occupation number:      0.98877130
  | K-point:       6 at    0.000000    0.000000    0.500000 (in units of recip. lattice)

  ESTIMATED overall HOMO-LUMO gap:      0.00104828 eV between HOMO at k-point 563 and LUMO at k-point 6
  | This appears to be an indirect band gap.
  | Smallest direct gap :      0.09768099 eV for k_point 1335 at    0.687500    0.687500    0.583333 (in units of recip. lattice)
  However, this system has fractional occupation numbers. Since we use a finite k-point grid,
  this material is metallic within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.

  Total energy components:
  | Sum of eigenvalues            :       -4371.17441968 Ha     -118945.70785054 eV
  | XC energy correction          :        -229.29851861 Ha       -6239.53015531 eV
  | XC potential correction       :         298.73327935 Ha        8128.94612723 eV
  | Free-atom electrostatic energy:       -2961.56366195 Ha      -80588.24752646 eV
  | Hartree energy correction     :           2.93384875 Ha          79.83408637 eV
  | Entropy correction            :          -0.00004173 Ha          -0.00113552 eV
  | ---------------------------
  | Total energy                  :       -7260.36947215 Ha     -197564.70531870 eV
  | Total energy, T -> 0          :       -7260.36951388 Ha     -197564.70645422 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :       -7260.36955561 Ha     -197564.70758974 eV

  Derived energy quantities:
  | Kinetic energy                :        7466.08620336 Ha      203162.54238981 eV
  | Electrostatic energy          :      -14497.15715690 Ha     -394487.71755321 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00073815 Ha          -0.02008596 eV
  | Sum of eigenvalues per atom                           :      -59472.85392527 eV
  | Total energy (T->0) per atom                          :      -98782.35322711 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -98782.35379487 eV
  Evaluating new KS density using the density matrix
  Evaluating density matrix
  Time summed over all CPUs for getting density from density matrix: real work       22.046 s, elapsed       37.795 s
  Integration grid: deviation in total charge (<rho> - N_e) =   1.193712E-11

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.1907E-02
  | Change of unmixed KS density  :  0.2074E-02
  | Change of sum of eigenvalues  : -0.1271E+01 eV
  | Change of total energy        :  0.4778E-04 eV


------------------------------------------------------------
  End self-consistency iteration #     6       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.236 s           0.215 s
  | Charge density update                       :        0.084 s           0.083 s
  | Density mixing & preconditioning            :        0.029 s           0.008 s
  | Hartree multipole update                    :        0.001 s           0.001 s
  | Hartree multipole summation                 :        0.019 s           0.019 s
  | Integration                                 :        0.053 s           0.054 s
  | Solution of K.-S. eqns.                     :        0.047 s           0.047 s
  | Total energy evaluation                     :        0.002 s           0.002 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        5.095 MB (on task   0)
  |   Maximum:        5.171 MB (on task   1)
  |   Average:        5.095 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:       16.017 MB (on task 142 after allocating gradient_basis_wave)
  |   Maximum:       24.025 MB (on task  42 after allocating gradient_basis_wave)
  |   Average:       20.672 MB
  | Largest tracked array allocation so far:
  |   Minimum:        6.304 MB (hamiltonian_shell on task 142)
  |   Maximum:       12.441 MB (hamiltonian_shell on task  42)
  |   Average:        9.825 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #    7

  Date     :  20220728, Time     :  132805.538
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      80.0000000000
  | Integrated number of electrons on 3D grid     :      80.0000795236
  | Charge integration error                      :       0.0000795236
  | Normalization factor for density and gradient :       0.9999990060

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =  -0.696075E-14
  | Sum of charges compensated after spline to logarithmic grids =  -0.138708E-06
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =  -0.000000E+00
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        4.888 s, elapsed        7.756 s
  | RMS charge density error from multipole expansion :   0.540383E-02
  | Average real-space part of the electrostatic potential :     -0.46093535 eV

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work       11.569 s, elapsed       20.913 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the (modified) LAPACK eigensolver.
  Starting LAPACK eigensolver
  Finished Cholesky decomposition
  | Time :     0.001 s
  Finished transformation to standard eigenproblem
  | Time :     0.000 s
  Finished solving standard eigenproblem
  | Time :     0.002 s
  Finished back-transformation of eigenvectors
  | Time :     0.000 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -7.53202569 eV
  What follows are estimated values for band gap, HOMO, LUMO, etc.
  | They are estimated on a discrete k-point grid and not necessarily exact.
  | For converged numbers, create a DOS and/or band structure plot on a denser k-grid.

  Highest occupied state (VBM) at     -7.53219791 eV (relative to internal zero)
  | Occupation number:      1.00388663
  | K-point:     428 at    0.187500    0.250000    0.583333 (in units of recip. lattice)

  Lowest unoccupied state (CBM) at    -7.53045245 eV (relative to internal zero)
  | Occupation number:      0.96450754
  | K-point:       6 at    0.000000    0.000000    0.500000 (in units of recip. lattice)

  ESTIMATED overall HOMO-LUMO gap:      0.00174546 eV between HOMO at k-point 428 and LUMO at k-point 6
  | This appears to be an indirect band gap.
  | Smallest direct gap :      0.09781641 eV for k_point 725 at    0.312500    0.312500    0.583333 (in units of recip. lattice)
  However, this system has fractional occupation numbers. Since we use a finite k-point grid,
  this material is metallic within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.

  Total energy components:
  | Sum of eigenvalues            :       -4371.16948909 Ha     -118945.57368223 eV
  | XC energy correction          :        -229.29860389 Ha       -6239.53247570 eV
  | XC potential correction       :         298.73337875 Ha        8128.94883229 eV
  | Free-atom electrostatic energy:       -2961.56366195 Ha      -80588.24752646 eV
  | Hartree energy correction     :           2.92890394 Ha          79.69953139 eV
  | Entropy correction            :          -0.00004158 Ha          -0.00113141 eV
  | ---------------------------
  | Total energy                  :       -7260.36947222 Ha     -197564.70532072 eV
  | Total energy, T -> 0          :       -7260.36951380 Ha     -197564.70645214 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :       -7260.36955538 Ha     -197564.70758355 eV

  Derived energy quantities:
  | Kinetic energy                :        7466.08114678 Ha      203162.40479320 eV
  | Electrostatic energy          :      -14497.15201511 Ha     -394487.57763822 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00073460 Ha          -0.01998956 eV
  | Sum of eigenvalues per atom                           :      -59472.78684112 eV
  | Total energy (T->0) per atom                          :      -98782.35322607 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -98782.35379177 eV
  Evaluating new KS density using the density matrix
  Evaluating density matrix
  Time summed over all CPUs for getting density from density matrix: real work       22.064 s, elapsed       37.762 s
  Integration grid: deviation in total charge (<rho> - N_e) =   1.207923E-11

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.6650E-03
  | Change of unmixed KS density  :  0.5643E-03
  | Change of sum of eigenvalues  :  0.1342E+00 eV
  | Change of total energy        : -0.2020E-05 eV


------------------------------------------------------------
  End self-consistency iteration #     7       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.233 s           0.214 s
  | Charge density update                       :        0.083 s           0.084 s
  | Density mixing & preconditioning            :        0.027 s           0.008 s
  | Hartree multipole update                    :        0.001 s           0.001 s
  | Hartree multipole summation                 :        0.019 s           0.019 s
  | Integration                                 :        0.054 s           0.053 s
  | Solution of K.-S. eqns.                     :        0.046 s           0.046 s
  | Total energy evaluation                     :        0.002 s           0.002 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        5.095 MB (on task   0)
  |   Maximum:        5.171 MB (on task   1)
  |   Average:        5.095 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:       16.018 MB (on task 142 after allocating gradient_basis_wave)
  |   Maximum:       24.025 MB (on task  42 after allocating gradient_basis_wave)
  |   Average:       20.672 MB
  | Largest tracked array allocation so far:
  |   Minimum:        6.304 MB (hamiltonian_shell on task 142)
  |   Maximum:       12.441 MB (hamiltonian_shell on task  42)
  |   Average:        9.825 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #    8

  Date     :  20220728, Time     :  132805.775
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      80.0000000000
  | Integrated number of electrons on 3D grid     :      79.9999969011
  | Charge integration error                      :      -0.0000030989
  | Normalization factor for density and gradient :       1.0000000387

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =  -0.879369E-14
  | Sum of charges compensated after spline to logarithmic grids =  -0.138701E-06
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =  -0.000000E+00
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        4.893 s, elapsed        7.787 s
  | RMS charge density error from multipole expansion :   0.540372E-02
  | Average real-space part of the electrostatic potential :     -0.46094515 eV

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work       11.563 s, elapsed       20.911 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the (modified) LAPACK eigensolver.
  Starting LAPACK eigensolver
  Finished Cholesky decomposition
  | Time :     0.000 s
  Finished transformation to standard eigenproblem
  | Time :     0.001 s
  Finished solving standard eigenproblem
  | Time :     0.002 s
  Finished back-transformation of eigenvectors
  | Time :     0.000 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -7.53202151 eV
  What follows are estimated values for band gap, HOMO, LUMO, etc.
  | They are estimated on a discrete k-point grid and not necessarily exact.
  | For converged numbers, create a DOS and/or band structure plot on a denser k-grid.

  Highest occupied state (VBM) at     -7.53220153 eV (relative to internal zero)
  | Occupation number:      1.00406253
  | K-point:    1434 at    0.812500    0.750000    0.583333 (in units of recip. lattice)

  Lowest unoccupied state (CBM) at    -7.53047399 eV (relative to internal zero)
  | Occupation number:      0.96508722
  | K-point:       6 at    0.000000    0.000000    0.500000 (in units of recip. lattice)

  ESTIMATED overall HOMO-LUMO gap:      0.00172754 eV between HOMO at k-point 1434 and LUMO at k-point 6
  | This appears to be an indirect band gap.
  | Smallest direct gap :      0.09781322 eV for k_point 1335 at    0.687500    0.687500    0.583333 (in units of recip. lattice)
  However, this system has fractional occupation numbers. Since we use a finite k-point grid,
  this material is metallic within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.

  Total energy components:
  | Sum of eigenvalues            :       -4371.16957757 Ha     -118945.57608999 eV
  | XC energy correction          :        -229.29859793 Ha       -6239.53231369 eV
  | XC potential correction       :         298.73337204 Ha        8128.94864969 eV
  | Free-atom electrostatic energy:       -2961.56366195 Ha      -80588.24752646 eV
  | Hartree energy correction     :           2.92899319 Ha          79.70196002 eV
  | Entropy correction            :          -0.00004158 Ha          -0.00113150 eV
  | ---------------------------
  | Total energy                  :       -7260.36947221 Ha     -197564.70532042 eV
  | Total energy, T -> 0          :       -7260.36951379 Ha     -197564.70645192 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :       -7260.36955538 Ha     -197564.70758342 eV

  Derived energy quantities:
  | Kinetic energy                :        7466.08103112 Ha      203162.40164609 eV
  | Electrostatic energy          :      -14497.15190540 Ha     -394487.57465282 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00073464 Ha          -0.01999055 eV
  | Sum of eigenvalues per atom                           :      -59472.78804499 eV
  | Total energy (T->0) per atom                          :      -98782.35322596 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -98782.35379171 eV
  Evaluating new KS density using the density matrix
  Evaluating density matrix
  Time summed over all CPUs for getting density from density matrix: real work       22.048 s, elapsed       37.571 s
  Integration grid: deviation in total charge (<rho> - N_e) =   1.200817E-11

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.8439E-04
  | Change of unmixed KS density  :  0.2064E-03
  | Change of sum of eigenvalues  : -0.2408E-02 eV
  | Change of total energy        :  0.3000E-06 eV


------------------------------------------------------------
  End self-consistency iteration #     8       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.237 s           0.215 s
  | Charge density update                       :        0.083 s           0.083 s
  | Density mixing & preconditioning            :        0.029 s           0.007 s
  | Hartree multipole update                    :        0.001 s           0.002 s
  | Hartree multipole summation                 :        0.019 s           0.019 s
  | Integration                                 :        0.054 s           0.053 s
  | Solution of K.-S. eqns.                     :        0.047 s           0.047 s
  | Total energy evaluation                     :        0.002 s           0.002 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        5.095 MB (on task   0)
  |   Maximum:        5.171 MB (on task   1)
  |   Average:        5.096 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:       16.018 MB (on task 142 after allocating gradient_basis_wave)
  |   Maximum:       24.025 MB (on task  42 after allocating gradient_basis_wave)
  |   Average:       20.672 MB
  | Largest tracked array allocation so far:
  |   Minimum:        6.304 MB (hamiltonian_shell on task 142)
  |   Maximum:       12.441 MB (hamiltonian_shell on task  42)
  |   Average:        9.825 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #    9

  Date     :  20220728, Time     :  132806.013
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      80.0000000000
  | Integrated number of electrons on 3D grid     :      79.9999914282
  | Charge integration error                      :      -0.0000085718
  | Normalization factor for density and gradient :       1.0000001071

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =  -0.628387E-14
  | Sum of charges compensated after spline to logarithmic grids =  -0.136312E-06
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =  -0.000000E+00
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        4.890 s, elapsed        7.821 s
  | RMS charge density error from multipole expansion :   0.540342E-02
  | Average real-space part of the electrostatic potential :     -0.46123740 eV

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work       11.568 s, elapsed       20.960 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the (modified) LAPACK eigensolver.
  Starting LAPACK eigensolver
  Finished Cholesky decomposition
  | Time :     0.001 s
  Finished transformation to standard eigenproblem
  | Time :     0.001 s
  Finished solving standard eigenproblem
  | Time :     0.001 s
  Finished back-transformation of eigenvectors
  | Time :     0.000 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -7.53204046 eV
  What follows are estimated values for band gap, HOMO, LUMO, etc.
  | They are estimated on a discrete k-point grid and not necessarily exact.
  | For converged numbers, create a DOS and/or band structure plot on a denser k-grid.

  Highest occupied state (VBM) at     -7.53224887 eV (relative to internal zero)
  | Occupation number:      1.00470335
  | K-point:    1389 at    0.750000    0.812500    0.583333 (in units of recip. lattice)

  Lowest unoccupied state (CBM) at    -7.53063123 eV (relative to internal zero)
  | Occupation number:      0.96820552
  | K-point:       6 at    0.000000    0.000000    0.500000 (in units of recip. lattice)

  ESTIMATED overall HOMO-LUMO gap:      0.00161764 eV between HOMO at k-point 1389 and LUMO at k-point 6
  | This appears to be an indirect band gap.
  | Smallest direct gap :      0.09780154 eV for k_point 1335 at    0.687500    0.687500    0.583333 (in units of recip. lattice)
  However, this system has fractional occupation numbers. Since we use a finite k-point grid,
  this material is metallic within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.

  Total energy components:
  | Sum of eigenvalues            :       -4371.16897817 Ha     -118945.55977935 eV
  | XC energy correction          :        -229.29862196 Ha       -6239.53296745 eV
  | XC potential correction       :         298.73340274 Ha        8128.94948487 eV
  | Free-atom electrostatic energy:       -2961.56366195 Ha      -80588.24752646 eV
  | Hartree energy correction     :           2.92838716 Ha          79.68546904 eV
  | Entropy correction            :          -0.00004160 Ha          -0.00113191 eV
  | ---------------------------
  | Total energy                  :       -7260.36947217 Ha     -197564.70531935 eV
  | Total energy, T -> 0          :       -7260.36951377 Ha     -197564.70645125 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :       -7260.36955537 Ha     -197564.70758316 eV

  Derived energy quantities:
  | Kinetic energy                :        7466.08112808 Ha      203162.40428446 eV
  | Electrostatic energy          :      -14497.15197830 Ha     -394487.57663635 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00073450 Ha          -0.01998680 eV
  | Sum of eigenvalues per atom                           :      -59472.77988968 eV
  | Total energy (T->0) per atom                          :      -98782.35322563 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -98782.35379158 eV
  Evaluating new KS density using the density matrix
  Evaluating density matrix
  Time summed over all CPUs for getting density from density matrix: real work       22.061 s, elapsed       37.593 s
  Integration grid: deviation in total charge (<rho> - N_e) =   1.195133E-11

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.7472E-04
  | Change of unmixed KS density  :  0.4874E-05
  | Change of sum of eigenvalues  :  0.1631E-01 eV
  | Change of total energy        :  0.1075E-05 eV


------------------------------------------------------------
  End self-consistency iteration #     9       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.234 s           0.213 s
  | Charge density update                       :        0.083 s           0.083 s
  | Density mixing & preconditioning            :        0.027 s           0.007 s
  | Hartree multipole update                    :        0.001 s           0.001 s
  | Hartree multipole summation                 :        0.019 s           0.019 s
  | Integration                                 :        0.054 s           0.054 s
  | Solution of K.-S. eqns.                     :        0.046 s           0.046 s
  | Total energy evaluation                     :        0.002 s           0.002 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        5.095 MB (on task   0)
  |   Maximum:        5.172 MB (on task   1)
  |   Average:        5.096 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:       16.018 MB (on task 142 after allocating gradient_basis_wave)
  |   Maximum:       24.025 MB (on task  42 after allocating gradient_basis_wave)
  |   Average:       20.672 MB
  | Largest tracked array allocation so far:
  |   Minimum:        6.304 MB (hamiltonian_shell on task 142)
  |   Maximum:       12.441 MB (hamiltonian_shell on task  42)
  |   Average:        9.825 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #   10

  Date     :  20220728, Time     :  132806.246
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      80.0000000000
  | Integrated number of electrons on 3D grid     :      80.0000008747
  | Charge integration error                      :       0.0000008747
  | Normalization factor for density and gradient :       0.9999999891

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =   0.141294E-14
  | Sum of charges compensated after spline to logarithmic grids =  -0.136357E-06
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =  -0.000000E+00
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        4.887 s, elapsed        7.719 s
  | RMS charge density error from multipole expansion :   0.540322E-02
  | Average real-space part of the electrostatic potential :     -0.46120676 eV

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work       11.577 s, elapsed       20.940 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the (modified) LAPACK eigensolver.
  Starting LAPACK eigensolver
  Finished Cholesky decomposition
  | Time :     0.000 s
  Finished transformation to standard eigenproblem
  | Time :     0.001 s
  Finished solving standard eigenproblem
  | Time :     0.002 s
  Finished back-transformation of eigenvectors
  | Time :     0.000 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -7.53203287 eV
  What follows are estimated values for band gap, HOMO, LUMO, etc.
  | They are estimated on a discrete k-point grid and not necessarily exact.
  | For converged numbers, create a DOS and/or band structure plot on a denser k-grid.

  Highest occupied state (VBM) at     -7.53223699 eV (relative to internal zero)
  | Occupation number:      1.00460650
  | K-point:     563 at    0.250000    0.187500    0.583333 (in units of recip. lattice)

  Lowest unoccupied state (CBM) at    -7.53061144 eV (relative to internal zero)
  | Occupation number:      0.96793028
  | K-point:       6 at    0.000000    0.000000    0.500000 (in units of recip. lattice)

  ESTIMATED overall HOMO-LUMO gap:      0.00162556 eV between HOMO at k-point 563 and LUMO at k-point 6
  | This appears to be an indirect band gap.
  | Smallest direct gap :      0.09780298 eV for k_point 1335 at    0.687500    0.687500    0.583333 (in units of recip. lattice)
  However, this system has fractional occupation numbers. Since we use a finite k-point grid,
  this material is metallic within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.

  Total energy components:
  | Sum of eigenvalues            :       -4371.16884121 Ha     -118945.55605266 eV
  | XC energy correction          :        -229.29862736 Ha       -6239.53311447 eV
  | XC potential correction       :         298.73340959 Ha        8128.94967133 eV
  | Free-atom electrostatic energy:       -2961.56366195 Ha      -80588.24752646 eV
  | Hartree energy correction     :           2.92824876 Ha          79.68170282 eV
  | Entropy correction            :          -0.00004160 Ha          -0.00113186 eV
  | ---------------------------
  | Total energy                  :       -7260.36947218 Ha     -197564.70531943 eV
  | Total energy, T -> 0          :       -7260.36951377 Ha     -197564.70645129 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :       -7260.36955537 Ha     -197564.70758315 eV

  Derived energy quantities:
  | Kinetic energy                :        7466.08117228 Ha      203162.40548716 eV
  | Electrostatic energy          :      -14497.15201710 Ha     -394487.57769212 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00073446 Ha          -0.01998568 eV
  | Sum of eigenvalues per atom                           :      -59472.77802633 eV
  | Total energy (T->0) per atom                          :      -98782.35322565 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -98782.35379157 eV
  Evaluating new KS density using the density matrix
  Evaluating density matrix
  Time summed over all CPUs for getting density from density matrix: real work       22.058 s, elapsed       37.350 s
  Integration grid: deviation in total charge (<rho> - N_e) =   1.217870E-11

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.7437E-05
  | Change of unmixed KS density  :  0.2332E-04
  | Change of sum of eigenvalues  :  0.3727E-02 eV
  | Change of total energy        : -0.8803E-07 eV


------------------------------------------------------------
  End self-consistency iteration #    10       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.233 s           0.215 s
  | Charge density update                       :        0.083 s           0.083 s
  | Density mixing & preconditioning            :        0.028 s           0.009 s
  | Hartree multipole update                    :        0.001 s           0.002 s
  | Hartree multipole summation                 :        0.019 s           0.018 s
  | Integration                                 :        0.054 s           0.054 s
  | Solution of K.-S. eqns.                     :        0.046 s           0.046 s
  | Total energy evaluation                     :        0.002 s           0.002 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        5.095 MB (on task   0)
  |   Maximum:        5.172 MB (on task   1)
  |   Average:        5.096 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:       16.018 MB (on task 142 after allocating gradient_basis_wave)
  |   Maximum:       24.025 MB (on task  42 after allocating gradient_basis_wave)
  |   Average:       20.672 MB
  | Largest tracked array allocation so far:
  |   Minimum:        6.304 MB (hamiltonian_shell on task 142)
  |   Maximum:       12.441 MB (hamiltonian_shell on task  42)
  |   Average:        9.825 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #   11

  Date     :  20220728, Time     :  132806.483
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      80.0000000000
  | Integrated number of electrons on 3D grid     :      79.9999999098
  | Charge integration error                      :      -0.0000000902
  | Normalization factor for density and gradient :       1.0000000011

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =  -0.494818E-14
  | Sum of charges compensated after spline to logarithmic grids =  -0.136349E-06
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =  -0.000000E+00
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        4.896 s, elapsed        7.736 s
  | RMS charge density error from multipole expansion :   0.540320E-02
  | Average real-space part of the electrostatic potential :     -0.46120653 eV

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work       11.564 s, elapsed       20.751 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the (modified) LAPACK eigensolver.
  Starting LAPACK eigensolver
  Finished Cholesky decomposition
  | Time :     0.000 s
  Finished transformation to standard eigenproblem
  | Time :     0.001 s
  Finished solving standard eigenproblem
  | Time :     0.001 s
  Finished back-transformation of eigenvectors
  | Time :     0.000 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -7.53203209 eV
  What follows are estimated values for band gap, HOMO, LUMO, etc.
  | They are estimated on a discrete k-point grid and not necessarily exact.
  | For converged numbers, create a DOS and/or band structure plot on a denser k-grid.

  Highest occupied state (VBM) at     -7.53223654 eV (relative to internal zero)
  | Occupation number:      1.00461395
  | K-point:    1389 at    0.750000    0.812500    0.583333 (in units of recip. lattice)

  Lowest unoccupied state (CBM) at    -7.53061162 eV (relative to internal zero)
  | Occupation number:      0.96795195
  | K-point:       6 at    0.000000    0.000000    0.500000 (in units of recip. lattice)

  ESTIMATED overall HOMO-LUMO gap:      0.00162493 eV between HOMO at k-point 1389 and LUMO at k-point 6
  | This appears to be an indirect band gap.
  | Smallest direct gap :      0.09780285 eV for k_point 1335 at    0.687500    0.687500    0.583333 (in units of recip. lattice)
  However, this system has fractional occupation numbers. Since we use a finite k-point grid,
  this material is metallic within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.

  Total energy components:
  | Sum of eigenvalues            :       -4371.16882884 Ha     -118945.55571607 eV
  | XC energy correction          :        -229.29862796 Ha       -6239.53313067 eV
  | XC potential correction       :         298.73341037 Ha        8128.94969248 eV
  | Free-atom electrostatic energy:       -2961.56366195 Ha      -80588.24752646 eV
  | Hartree energy correction     :           2.92823621 Ha          79.68136130 eV
  | Entropy correction            :          -0.00004160 Ha          -0.00113186 eV
  | ---------------------------
  | Total energy                  :       -7260.36947218 Ha     -197564.70531943 eV
  | Total energy, T -> 0          :       -7260.36951377 Ha     -197564.70645129 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :       -7260.36955537 Ha     -197564.70758315 eV

  Derived energy quantities:
  | Kinetic energy                :        7466.08118424 Ha      203162.40581260 eV
  | Electrostatic energy          :      -14497.15202846 Ha     -394487.57800135 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00073446 Ha          -0.01998561 eV
  | Sum of eigenvalues per atom                           :      -59472.77785804 eV
  | Total energy (T->0) per atom                          :      -98782.35322564 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -98782.35379157 eV
  Evaluating new KS density using the density matrix
  Evaluating density matrix
  Time summed over all CPUs for getting density from density matrix: real work       22.083 s, elapsed       37.643 s
  Integration grid: deviation in total charge (<rho> - N_e) =   1.207923E-11

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.5021E-05
  | Change of unmixed KS density  :  0.3394E-05
  | Change of sum of eigenvalues  :  0.3366E-03 eV
  | Change of total energy        :  0.6930E-08 eV


------------------------------------------------------------
  End self-consistency iteration #    11       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.235 s           0.215 s
  | Charge density update                       :        0.083 s           0.083 s
  | Density mixing & preconditioning            :        0.028 s           0.007 s
  | Hartree multipole update                    :        0.001 s           0.002 s
  | Hartree multipole summation                 :        0.019 s           0.018 s
  | Integration                                 :        0.054 s           0.054 s
  | Solution of K.-S. eqns.                     :        0.047 s           0.047 s
  | Total energy evaluation                     :        0.002 s           0.002 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        5.095 MB (on task   0)
  |   Maximum:        5.172 MB (on task   1)
  |   Average:        5.096 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:       16.018 MB (on task 142 after allocating gradient_basis_wave)
  |   Maximum:       24.025 MB (on task  42 after allocating gradient_basis_wave)
  |   Average:       20.672 MB
  | Largest tracked array allocation so far:
  |   Minimum:        6.304 MB (hamiltonian_shell on task 142)
  |   Maximum:       12.441 MB (hamiltonian_shell on task  42)
  |   Average:        9.825 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #   12

  Date     :  20220728, Time     :  132806.720
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      80.0000000000
  | Integrated number of electrons on 3D grid     :      80.0000001945
  | Charge integration error                      :       0.0000001945
  | Normalization factor for density and gradient :       0.9999999976

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =  -0.214962E-13
  | Sum of charges compensated after spline to logarithmic grids =  -0.136146E-06
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =  -0.000000E+00
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        4.889 s, elapsed        7.780 s
  | RMS charge density error from multipole expansion :   0.540309E-02
  | Average real-space part of the electrostatic potential :     -0.46120373 eV

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work       11.568 s, elapsed       20.857 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the (modified) LAPACK eigensolver.
  Starting LAPACK eigensolver
  Finished Cholesky decomposition
  | Time :     0.000 s
  Finished transformation to standard eigenproblem
  | Time :     0.001 s
  Finished solving standard eigenproblem
  | Time :     0.002 s
  Finished back-transformation of eigenvectors
  | Time :     0.000 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -7.53202868 eV
  What follows are estimated values for band gap, HOMO, LUMO, etc.
  | They are estimated on a discrete k-point grid and not necessarily exact.
  | For converged numbers, create a DOS and/or band structure plot on a denser k-grid.

  Highest occupied state (VBM) at     -7.53223694 eV (relative to internal zero)
  | Occupation number:      1.00469982
  | K-point:    1434 at    0.812500    0.750000    0.583333 (in units of recip. lattice)

  Lowest unoccupied state (CBM) at    -7.53060652 eV (relative to internal zero)
  | Occupation number:      0.96791394
  | K-point:       6 at    0.000000    0.000000    0.500000 (in units of recip. lattice)

  ESTIMATED overall HOMO-LUMO gap:      0.00163042 eV between HOMO at k-point 1434 and LUMO at k-point 6
  | This appears to be an indirect band gap.
  | Smallest direct gap :      0.09780224 eV for k_point 725 at    0.312500    0.312500    0.583333 (in units of recip. lattice)
  However, this system has fractional occupation numbers. Since we use a finite k-point grid,
  this material is metallic within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.

  Total energy components:
  | Sum of eigenvalues            :       -4371.16884020 Ha     -118945.55602498 eV
  | XC energy correction          :        -229.29862789 Ha       -6239.53312896 eV
  | XC potential correction       :         298.73340980 Ha        8128.94967712 eV
  | Free-atom electrostatic energy:       -2961.56366195 Ha      -80588.24752646 eV
  | Hartree energy correction     :           2.92824806 Ha          79.68168392 eV
  | Entropy correction            :          -0.00004160 Ha          -0.00113188 eV
  | ---------------------------
  | Total energy                  :       -7260.36947217 Ha     -197564.70531935 eV
  | Total energy, T -> 0          :       -7260.36951377 Ha     -197564.70645124 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :       -7260.36955536 Ha     -197564.70758312 eV

  Derived energy quantities:
  | Kinetic energy                :        7466.08118436 Ha      203162.40581585 eV
  | Electrostatic energy          :      -14497.15202864 Ha     -394487.57800624 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00073439 Ha          -0.01998364 eV
  | Sum of eigenvalues per atom                           :      -59472.77801249 eV
  | Total energy (T->0) per atom                          :      -98782.35322562 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -98782.35379156 eV
  Evaluating new KS density using the density matrix
  Evaluating density matrix
  Time summed over all CPUs for getting density from density matrix: real work       22.044 s, elapsed       37.333 s
  Integration grid: deviation in total charge (<rho> - N_e) =   1.193712E-11

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.4782E-05
  | Change of unmixed KS density  :  0.1186E-05
  | Change of sum of eigenvalues  : -0.3089E-03 eV
  | Change of total energy        :  0.7365E-07 eV


------------------------------------------------------------
  End self-consistency iteration #    12       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.232 s           0.212 s
  | Charge density update                       :        0.083 s           0.083 s
  | Density mixing & preconditioning            :        0.028 s           0.007 s
  | Hartree multipole update                    :        0.001 s           0.002 s
  | Hartree multipole summation                 :        0.019 s           0.018 s
  | Integration                                 :        0.054 s           0.054 s
  | Solution of K.-S. eqns.                     :        0.044 s           0.044 s
  | Total energy evaluation                     :        0.002 s           0.002 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        5.095 MB (on task   0)
  |   Maximum:        5.172 MB (on task   1)
  |   Average:        5.096 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:       16.018 MB (on task 142 after allocating gradient_basis_wave)
  |   Maximum:       24.025 MB (on task  42 after allocating gradient_basis_wave)
  |   Average:       20.672 MB
  | Largest tracked array allocation so far:
  |   Minimum:        6.304 MB (hamiltonian_shell on task 142)
  |   Maximum:       12.441 MB (hamiltonian_shell on task  42)
  |   Average:        9.825 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #   13

  Date     :  20220728, Time     :  132806.954
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      80.0000000000
  | Integrated number of electrons on 3D grid     :      79.9999999971
  | Charge integration error                      :      -0.0000000029
  | Normalization factor for density and gradient :       1.0000000000

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =  -0.161264E-13
  | Sum of charges compensated after spline to logarithmic grids =  -0.136145E-06
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =  -0.000000E+00
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        4.892 s, elapsed        7.748 s
  | RMS charge density error from multipole expansion :   0.540308E-02
  | Average real-space part of the electrostatic potential :     -0.46120332 eV

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work       11.563 s, elapsed       20.823 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the (modified) LAPACK eigensolver.
  Starting LAPACK eigensolver
  Finished Cholesky decomposition
  | Time :     0.000 s
  Finished transformation to standard eigenproblem
  | Time :     0.001 s
  Finished solving standard eigenproblem
  | Time :     0.001 s
  Finished back-transformation of eigenvectors
  | Time :     0.001 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -7.53202853 eV
  What follows are estimated values for band gap, HOMO, LUMO, etc.
  | They are estimated on a discrete k-point grid and not necessarily exact.
  | For converged numbers, create a DOS and/or band structure plot on a denser k-grid.

  Highest occupied state (VBM) at     -7.53223676 eV (relative to internal zero)
  | Occupation number:      1.00469925
  | K-point:     428 at    0.187500    0.250000    0.583333 (in units of recip. lattice)

  Lowest unoccupied state (CBM) at    -7.53060634 eV (relative to internal zero)
  | Occupation number:      0.96791313
  | K-point:       6 at    0.000000    0.000000    0.500000 (in units of recip. lattice)

  ESTIMATED overall HOMO-LUMO gap:      0.00163043 eV between HOMO at k-point 428 and LUMO at k-point 6
  | This appears to be an indirect band gap.
  | Smallest direct gap :      0.09780224 eV for k_point 725 at    0.312500    0.312500    0.583333 (in units of recip. lattice)
  However, this system has fractional occupation numbers. Since we use a finite k-point grid,
  this material is metallic within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.

  Total energy components:
  | Sum of eigenvalues            :       -4371.16883804 Ha     -118945.55596645 eV
  | XC energy correction          :        -229.29862797 Ha       -6239.53313105 eV
  | XC potential correction       :         298.73340990 Ha        8128.94967980 eV
  | Free-atom electrostatic energy:       -2961.56366195 Ha      -80588.24752646 eV
  | Hartree energy correction     :           2.92824589 Ha          79.68162481 eV
  | Entropy correction            :          -0.00004160 Ha          -0.00113188 eV
  | ---------------------------
  | Total energy                  :       -7260.36947217 Ha     -197564.70531935 eV
  | Total energy, T -> 0          :       -7260.36951377 Ha     -197564.70645123 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :       -7260.36955536 Ha     -197564.70758312 eV

  Derived energy quantities:
  | Kinetic energy                :        7466.08118477 Ha      203162.40582700 eV
  | Electrostatic energy          :      -14497.15202897 Ha     -394487.57801530 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00073438 Ha          -0.01998361 eV
  | Sum of eigenvalues per atom                           :      -59472.77798323 eV
  | Total energy (T->0) per atom                          :      -98782.35322562 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -98782.35379156 eV
  Evaluating new KS density using the density matrix
  Evaluating density matrix
  Time summed over all CPUs for getting density from density matrix: real work       22.053 s, elapsed       37.553 s
  Integration grid: deviation in total charge (<rho> - N_e) =   1.212186E-11

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.7429E-06
  | Change of unmixed KS density  :  0.1083E-05
  | Change of sum of eigenvalues  :  0.5852E-04 eV
  | Change of total energy        :  0.4306E-08 eV


------------------------------------------------------------
  End self-consistency iteration #    13       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.235 s           0.215 s
  | Charge density update                       :        0.083 s           0.083 s
  | Density mixing & preconditioning            :        0.028 s           0.007 s
  | Hartree multipole update                    :        0.001 s           0.002 s
  | Hartree multipole summation                 :        0.019 s           0.018 s
  | Integration                                 :        0.054 s           0.054 s
  | Solution of K.-S. eqns.                     :        0.047 s           0.047 s
  | Total energy evaluation                     :        0.002 s           0.002 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        5.095 MB (on task   0)
  |   Maximum:        5.172 MB (on task   1)
  |   Average:        5.096 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:       16.018 MB (on task 142 after allocating gradient_basis_wave)
  |   Maximum:       24.025 MB (on task  42 after allocating gradient_basis_wave)
  |   Average:       20.672 MB
  | Largest tracked array allocation so far:
  |   Minimum:        6.304 MB (hamiltonian_shell on task 142)
  |   Maximum:       12.441 MB (hamiltonian_shell on task  42)
  |   Average:        9.825 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #   14

  Date     :  20220728, Time     :  132807.196
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      80.0000000000
  | Integrated number of electrons on 3D grid     :      80.0000000300
  | Charge integration error                      :       0.0000000300
  | Normalization factor for density and gradient :       0.9999999996

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =  -0.253463E-14
  | Sum of charges compensated after spline to logarithmic grids =  -0.136115E-06
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =  -0.000000E+00
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        4.890 s, elapsed        7.761 s
  | RMS charge density error from multipole expansion :   0.540302E-02
  | Average real-space part of the electrostatic potential :     -0.46120098 eV

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work       11.557 s, elapsed       20.806 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the (modified) LAPACK eigensolver.
  Starting LAPACK eigensolver
  Finished Cholesky decomposition
  | Time :     0.000 s
  Finished transformation to standard eigenproblem
  | Time :     0.001 s
  Finished solving standard eigenproblem
  | Time :     0.002 s
  Finished back-transformation of eigenvectors
  | Time :     0.000 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -7.53202856 eV
  What follows are estimated values for band gap, HOMO, LUMO, etc.
  | They are estimated on a discrete k-point grid and not necessarily exact.
  | For converged numbers, create a DOS and/or band structure plot on a denser k-grid.

  Highest occupied state (VBM) at     -7.53223644 eV (relative to internal zero)
  | Occupation number:      1.00469128
  | K-point:    1389 at    0.750000    0.812500    0.583333 (in units of recip. lattice)

  Lowest unoccupied state (CBM) at    -7.53060594 eV (relative to internal zero)
  | Occupation number:      0.96790345
  | K-point:       6 at    0.000000    0.000000    0.500000 (in units of recip. lattice)

  ESTIMATED overall HOMO-LUMO gap:      0.00163050 eV between HOMO at k-point 1389 and LUMO at k-point 6
  | This appears to be an indirect band gap.
  | Smallest direct gap :      0.09780231 eV for k_point 1335 at    0.687500    0.687500    0.583333 (in units of recip. lattice)
  However, this system has fractional occupation numbers. Since we use a finite k-point grid,
  this material is metallic within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.

  Total energy components:
  | Sum of eigenvalues            :       -4371.16884203 Ha     -118945.55607495 eV
  | XC energy correction          :        -229.29862799 Ha       -6239.53313148 eV
  | XC potential correction       :         298.73340976 Ha        8128.94967608 eV
  | Free-atom electrostatic energy:       -2961.56366195 Ha      -80588.24752646 eV
  | Hartree energy correction     :           2.92825003 Ha          79.68173745 eV
  | Entropy correction            :          -0.00004160 Ha          -0.00113188 eV
  | ---------------------------
  | Total energy                  :       -7260.36947217 Ha     -197564.70531936 eV
  | Total energy, T -> 0          :       -7260.36951377 Ha     -197564.70645124 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :       -7260.36955536 Ha     -197564.70758312 eV

  Derived energy quantities:
  | Kinetic energy                :        7466.08118996 Ha      203162.40596830 eV
  | Electrostatic energy          :      -14497.15203415 Ha     -394487.57815618 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00073437 Ha          -0.01998333 eV
  | Sum of eigenvalues per atom                           :      -59472.77803747 eV
  | Total energy (T->0) per atom                          :      -98782.35322562 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -98782.35379156 eV
  Evaluating new KS density using the density matrix
  Evaluating density matrix
  Time summed over all CPUs for getting density from density matrix: real work       22.061 s, elapsed       37.557 s
  Integration grid: deviation in total charge (<rho> - N_e) =   1.219291E-11

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.7056E-06
  | Change of unmixed KS density  :  0.2233E-07
  | Change of sum of eigenvalues  : -0.1085E-03 eV
  | Change of total energy        : -0.1242E-07 eV


------------------------------------------------------------
  End self-consistency iteration #    14       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.240 s           0.215 s
  | Charge density update                       :        0.083 s           0.083 s
  | Density mixing & preconditioning            :        0.032 s           0.007 s
  | Hartree multipole update                    :        0.001 s           0.002 s
  | Hartree multipole summation                 :        0.019 s           0.018 s
  | Integration                                 :        0.054 s           0.054 s
  | Solution of K.-S. eqns.                     :        0.047 s           0.047 s
  | Total energy evaluation                     :        0.002 s           0.002 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        5.095 MB (on task   0)
  |   Maximum:        5.172 MB (on task   1)
  |   Average:        5.096 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:       16.018 MB (on task 142 after allocating gradient_basis_wave)
  |   Maximum:       24.025 MB (on task  42 after allocating gradient_basis_wave)
  |   Average:       20.672 MB
  | Largest tracked array allocation so far:
  |   Minimum:        6.304 MB (hamiltonian_shell on task 142)
  |   Maximum:       12.441 MB (hamiltonian_shell on task  42)
  |   Average:        9.825 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #   15

  Date     :  20220728, Time     :  132807.430
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      80.0000000000
  | Integrated number of electrons on 3D grid     :      80.0000000007
  | Charge integration error                      :       0.0000000007
  | Normalization factor for density and gradient :       1.0000000000

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =  -0.140523E-13
  | Sum of charges compensated after spline to logarithmic grids =  -0.136115E-06
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =  -0.000000E+00
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        4.889 s, elapsed        7.764 s
  | RMS charge density error from multipole expansion :   0.540302E-02
  | Average real-space part of the electrostatic potential :     -0.46120099 eV

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work       11.570 s, elapsed       20.797 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the (modified) LAPACK eigensolver.
  Starting LAPACK eigensolver
  Finished Cholesky decomposition
  | Time :     0.000 s
  Finished transformation to standard eigenproblem
  | Time :     0.001 s
  Finished solving standard eigenproblem
  | Time :     0.001 s
  Finished back-transformation of eigenvectors
  | Time :     0.000 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -7.53202857 eV
  What follows are estimated values for band gap, HOMO, LUMO, etc.
  | They are estimated on a discrete k-point grid and not necessarily exact.
  | For converged numbers, create a DOS and/or band structure plot on a denser k-grid.

  Highest occupied state (VBM) at     -7.53223645 eV (relative to internal zero)
  | Occupation number:      1.00469127
  | K-point:     563 at    0.250000    0.187500    0.583333 (in units of recip. lattice)

  Lowest unoccupied state (CBM) at    -7.53060595 eV (relative to internal zero)
  | Occupation number:      0.96790343
  | K-point:       6 at    0.000000    0.000000    0.500000 (in units of recip. lattice)

  ESTIMATED overall HOMO-LUMO gap:      0.00163050 eV between HOMO at k-point 563 and LUMO at k-point 6
  | This appears to be an indirect band gap.
  | Smallest direct gap :      0.09780231 eV for k_point 1335 at    0.687500    0.687500    0.583333 (in units of recip. lattice)
  However, this system has fractional occupation numbers. Since we use a finite k-point grid,
  this material is metallic within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.

  Total energy components:
  | Sum of eigenvalues            :       -4371.16884223 Ha     -118945.55608024 eV
  | XC energy correction          :        -229.29862798 Ha       -6239.53313125 eV
  | XC potential correction       :         298.73340975 Ha        8128.94967574 eV
  | Free-atom electrostatic energy:       -2961.56366195 Ha      -80588.24752646 eV
  | Hartree energy correction     :           2.92825023 Ha          79.68174284 eV
  | Entropy correction            :          -0.00004160 Ha          -0.00113188 eV
  | ---------------------------
  | Total energy                  :       -7260.36947217 Ha     -197564.70531936 eV
  | Total energy, T -> 0          :       -7260.36951377 Ha     -197564.70645124 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :       -7260.36955536 Ha     -197564.70758312 eV

  Derived energy quantities:
  | Kinetic energy                :        7466.08118955 Ha      203162.40595699 eV
  | Electrostatic energy          :      -14497.15203374 Ha     -394487.57814511 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00073437 Ha          -0.01998333 eV
  | Sum of eigenvalues per atom                           :      -59472.77804012 eV
  | Total energy (T->0) per atom                          :      -98782.35322562 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -98782.35379156 eV
  Preliminary charge convergence reached. Turning off preconditioner.


  Self-consistency convergence accuracy:
  | Change of charge density      :  0.7108E-07
  | Change of unmixed KS density  :  0.1403E-06
  | Change of sum of eigenvalues  : -0.5290E-05 eV
  | Change of total energy        :  0.2747E-08 eV

  Writing Kohn-Sham eigenvalues.
  K-point:       1 at    0.000000    0.000000    0.000000 (in units of recip. lattice)

  State    Occupation    Eigenvalue [Ha]    Eigenvalue [eV]
      1       2.00000        -668.788631       -18198.66458
      2       2.00000        -668.788631       -18198.66458
      3       2.00000         -91.144254        -2480.16134
      4       2.00000         -91.144254        -2480.16134
      5       2.00000         -81.261892        -2211.24859
      6       2.00000         -81.261892        -2211.24859
      7       2.00000         -81.261468        -2211.23705
      8       2.00000         -81.261468        -2211.23705
      9       2.00000         -81.261468        -2211.23705
     10       2.00000         -81.261468        -2211.23705
     11       2.00000         -14.940291         -406.54601
     12       2.00000         -14.940291         -406.54601
     13       2.00000         -11.735589         -319.34163
     14       2.00000         -11.735589         -319.34163
     15       2.00000         -11.734413         -319.30962
     16       2.00000         -11.734413         -319.30962
     17       2.00000         -11.734413         -319.30962
     18       2.00000         -11.734413         -319.30962
     19       2.00000          -6.481701         -176.37605
     20       2.00000          -6.481701         -176.37604
     21       2.00000          -6.481700         -176.37604
     22       2.00000          -6.481700         -176.37604
     23       2.00000          -6.481652         -176.37471
     24       2.00000          -6.481652         -176.37471
     25       2.00000          -6.480715         -176.34922
     26       2.00000          -6.480715         -176.34922
     27       2.00000          -6.480715         -176.34922
     28       2.00000          -6.480715         -176.34922
     29       2.00000          -2.069327          -56.30924
     30       2.00000          -2.062902          -56.13441
     31       2.00000          -1.282307          -34.89335
     32       2.00000          -1.246445          -33.91750
     33       2.00000          -1.246445          -33.91750
     34       2.00000          -1.241385          -33.77980
     35       2.00000          -1.240877          -33.76597
     36       2.00000          -1.240877          -33.76597
     37       2.00000          -0.486483          -13.23787
     38       2.00000          -0.391952          -10.66557
     39       0.00000          -0.244629           -6.65670
     40       0.00000          -0.244628           -6.65667
     41       0.00000          -0.241814           -6.58008
     42       0.00000          -0.229849           -6.25452
     43       0.00000          -0.218572           -5.94766
     44       0.00000          -0.218572           -5.94765
     45       0.00000          -0.193904           -5.27639
     46       0.00000          -0.193899           -5.27625
     47       0.00000          -0.107126           -2.91505
     48       0.00000          -0.107119           -2.91486
     49       0.00000           0.075283            2.04857
     50       0.00000           0.173909            4.73231
     51       0.00000           0.227943            6.20263

  What follows are estimated values for band gap, HOMO, LUMO, etc.
  | They are estimated on a discrete k-point grid and not necessarily exact.
  | For converged numbers, create a DOS and/or band structure plot on a denser k-grid.

  Highest occupied state (VBM) at     -7.53223645 eV (relative to internal zero)
  | Occupation number:      1.00469127
  | K-point:     563 at    0.250000    0.187500    0.583333 (in units of recip. lattice)

  Lowest unoccupied state (CBM) at    -7.53060595 eV (relative to internal zero)
  | Occupation number:      0.96790343
  | K-point:       6 at    0.000000    0.000000    0.500000 (in units of recip. lattice)

  ESTIMATED overall HOMO-LUMO gap:      0.00163050 eV between HOMO at k-point 563 and LUMO at k-point 6
  | This appears to be an indirect band gap.
  | Smallest direct gap :      0.09780231 eV for k_point 1335 at    0.687500    0.687500    0.583333 (in units of recip. lattice)
  However, this system has fractional occupation numbers. Since we use a finite k-point grid,
  this material is metallic within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.

  | Chemical Potential                          :    -7.53202857 eV
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  Self-consistency cycle converged.


------------------------------------------------------------
  End self-consistency iteration #    15       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.152 s           0.135 s
  | Charge density update                       :        0.000 s           0.000 s
  | Density mixing                              :        0.027 s           0.010 s
  | Hartree multipole update                    :        0.001 s           0.001 s
  | Hartree multipole summation                 :        0.019 s           0.019 s
  | Integration                                 :        0.054 s           0.054 s
  | Solution of K.-S. eqns.                     :        0.047 s           0.048 s
  | Total energy evaluation                     :        0.002 s           0.002 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        5.095 MB (on task   0)
  |   Maximum:        5.172 MB (on task   1)
  |   Average:        5.096 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:       16.018 MB (on task 142 after allocating gradient_basis_wave)
  |   Maximum:       24.025 MB (on task  42 after allocating gradient_basis_wave)
  |   Average:       20.672 MB
  | Largest tracked array allocation so far:
  |   Minimum:        6.304 MB (hamiltonian_shell on task 142)
  |   Maximum:       12.441 MB (hamiltonian_shell on task  42)
  |   Average:        9.825 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

  Energy and forces in a compact form:
  | Total energy uncorrected      :         -0.197564705319359E+06 eV
  | Total energy corrected        :         -0.197564706451240E+06 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :         -0.197564707583121E+06 eV

  ------------------------------------ 
  Start decomposition of the XC Energy 
  ------------------------------------ 
  X and C from original XC functional choice 
  Hartree-Fock Energy :          0.000000000 Ha              0.000000000 eV
  X Energy            :       -225.194455004 Ha          -6127.852902376 eV
  C Energy            :         -4.104172975 Ha           -111.680228871 eV
  XC Energy w/o HF    :       -229.298627979 Ha          -6239.533131247 eV
  Total XC Energy     :       -229.298627979 Ha          -6239.533131247 eV
  ------------------------------------ 
  LDA X and C from self-consistent density 
  X Energy LDA        :       -213.986931487 Ha          -5822.880670681 eV
  C Energy LDA        :         -7.377231737 Ha           -200.744689352 eV
  ------------------------------------ 
  End decomposition of the XC Energy 
  ------------------------------------ 

------------------------------------------------------------

  ******************************************************************
  **          STARTING SECOND VARIATIONAL SOC CALCULATION         **
  ******************************************************************

  ******************************************************************
  **                     Stable functionality:                    **
  **                 Writes eigenvalues to stdout                 **
  **                    Recalculates band gaps                    **
  **                Regular and interpolated DOSs                 **
  **                       Band structures                        **
  **                      Mulliken analysis                       **
  **                         ELSI Support                         **
  ******************************************************************

  ******************************************************************
  **               New/Experimental functionality:                **
  **         use_local_index and load balancing support           **
  **         Dielectric constant/absorption coefficents           **
  **             Specifying restricted energy window              **
  **                         Cube files                           **
  ******************************************************************

  ******************************************************************
  **            Known buggy functionality (in SOC code):          **
  **   SOC-perturbed total energies are meaningless (DO NOT USE)  **
  ******************************************************************

  ******************************************************************
  **                             Note:                            **
  **             You may see oscillations or blips in             **
  **       high-lying conduction bands or slight sub-banding      **
  **            in calculations.  This is likely due to           **
  **        to not enough empty bands being mixed into the        **
  **             eigensolver, and you should increase             **
  **      the keyword 'empty_states' until the behavior goes      **
  **                        away to fix it.                       **
  **      If you are feeling particularly paranoid, consider      **
  **        setting the calculate_all_eigenstates flag in         **
  **      control.in to calculate all empty states possible.      **
  **                    This is rarely needed.                    **
  ******************************************************************

  ******************************************************************
  **                      Future Developments:                    **
  **                       Self-Consistency                       **
  ******************************************************************

  Number of core states to omit from SOC       :                 0
  Number of high-lying states to omit from SOC :                 0

  Index of first SOC-perturbed state to save   :                 1
  Index of last SOC-perturbed state to save    :               102

  Allocating memory for main spin-orbit coupling matrices...
  Allocating        0.159 MB for soc_ham
  Allocating        0.159 MB for eigenvec_soc_wf_basis
  Allocating        1.198 MB for KS_eigenvalue_soc_perturbed
  Allocating        1.198 MB for occ_numbers_soc
  Allocating        5.992 MB for spin_expectation
  Allocating        0.001 MB for KS_eigenvalue_soc_perturbed_temp
  Allocating        0.000 MB for sr_to_soc_idxmap
  Allocating        0.004 MB for spin_expectation_temp
  Allocating        0.000 MB for KS_eigenvector_soc_perturbed
  Allocating        5.835 MB for soc_matrix

  Integrating SOC matrix: batch-based integration p2 version.
  Allocating        0.107 MB for dist_tab
  Allocating        0.107 MB for dist_tab_sq
  Allocating        0.320 MB for dir_tab
  Allocating        0.021 MB for i_basis_fns
  Allocating        0.680 MB for i_basis_fns_inv
  Allocating        0.021 MB for i_atom_fns
  Allocating        2.983 MB for gradient_basis_wave
  Allocating        0.007 MB for ylm_tab
  Allocating        0.002 MB for radial_wave
  Allocating        0.002 MB for radial_wave_deriv
  Allocating        0.014 MB for i_basis
  Allocating       10.515 MB for soc_shell
  Allocating        0.020 MB for cartesians
  Allocating        0.020 MB for sum_gradient
  Allocating        0.040 MB for sum_hessian
  Allocating        0.001 MB for potential_shell

  Largest matrix element of SOC matrix is                      1.09334
  Sparsity of soc_matrix based on threshold of 0.10933E-14 is 0.33799

  Determining occupation numbers for Kohn-Sham eigenstates.
  | Chemical potential (Fermi level) in eV                 : -.75288757E+01
  | Error in electron count due to remaining E_F inaccuracy: -.28421709E-13
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.
  | Maximum occupation number of highest empty state:  0.00E+00

  Writing SOC-perturbed Kohn-Sham eigenvalues.
  K-point:       1 at    0.000000    0.000000    0.000000 (in units of recip. lattice)

  State    Occupation    Unperturbed Eigenvalue [eV]    Eigenvalue [eV]    Level Spacing [eV]
      1       1.00000                  -18198.664584      -18198.664584             0.000000
      2       1.00000                  -18198.664584      -18198.664584             0.000000
      3       1.00000                  -18198.664584      -18198.664584             0.000000
      4       1.00000                  -18198.664584      -18198.664584             0.000000
      5       1.00000                   -2480.161342       -2480.161342         15718.503241
      6       1.00000                   -2480.161342       -2480.161342             0.000000
      7       1.00000                   -2480.161342       -2480.161342             0.000000
      8       1.00000                   -2480.161342       -2480.161342             0.000000
      9       1.00000                   -2211.248587       -2271.046373           209.114969
     10       1.00000                   -2211.248587       -2271.046373             0.000000
     11       1.00000                   -2211.248587       -2271.044503             0.001870
     12       1.00000                   -2211.248587       -2271.044503             0.000000
     13       1.00000                   -2211.237052       -2181.572910            89.471593
     14       1.00000                   -2211.237052       -2181.572910             0.000000
     15       1.00000                   -2211.237052       -2181.571925             0.000985
     16       1.00000                   -2211.237052       -2181.571925             0.000000
     17       1.00000                   -2211.237051       -2181.564126             0.007799
     18       1.00000                   -2211.237051       -2181.564126             0.000000
     19       1.00000                   -2211.237051       -2181.564016             0.000110
     20       1.00000                   -2211.237051       -2181.564016             0.000000
     21       1.00000                    -406.546009        -406.546009          1775.018007
     22       1.00000                    -406.546009        -406.546009             0.000000
     23       1.00000                    -406.546009        -406.546009             0.000000
     24       1.00000                    -406.546009        -406.546009             0.000000
     25       1.00000                    -319.341630        -328.562011            77.983998
     26       1.00000                    -319.341630        -328.562011             0.000000
     27       1.00000                    -319.341630        -328.560051             0.001960
     28       1.00000                    -319.341630        -328.560051             0.000000
     29       1.00000                    -319.309618        -314.537154            14.022897
     30       1.00000                    -319.309618        -314.537154             0.000000
     31       1.00000                    -319.309618        -314.535917             0.001237
     32       1.00000                    -319.309618        -314.535917             0.000000
     33       1.00000                    -319.309618        -314.514508             0.021409
     34       1.00000                    -319.309618        -314.514508             0.000000
     35       1.00000                    -319.309618        -314.514389             0.000119
     36       1.00000                    -319.309618        -314.514389             0.000000
     37       1.00000                    -176.376045        -177.853881           136.660508
     38       1.00000                    -176.376045        -177.853881             0.000000
     39       1.00000                    -176.376045        -177.853767             0.000113
     40       1.00000                    -176.376045        -177.853767             0.000000
     41       1.00000                    -176.376043        -177.832879             0.020888
     42       1.00000                    -176.376043        -177.832879             0.000000
     43       1.00000                    -176.376042        -177.832852             0.000027
     44       1.00000                    -176.376042        -177.832852             0.000000
     45       1.00000                    -176.374713        -175.390565             2.442286
     46       1.00000                    -176.374713        -175.390565             0.000000
     47       1.00000                    -176.374712        -175.390519             0.000046
     48       1.00000                    -176.374712        -175.390519             0.000000
     49       1.00000                    -176.349218        -175.385963             0.004556
     50       1.00000                    -176.349218        -175.385963             0.000000
     51       1.00000                    -176.349218        -175.385923             0.000039
     52       1.00000                    -176.349218        -175.385923             0.000000
     53       1.00000                    -176.349218        -175.364454             0.021469
     54       1.00000                    -176.349218        -175.364454             0.000000
     55       1.00000                    -176.349217        -175.364429             0.000025
     56       1.00000                    -176.349217        -175.364429             0.000000
     57       1.00000                     -56.309239         -56.309239           119.055190
     58       1.00000                     -56.309239         -56.309239             0.000000
     59       1.00000                     -56.134411         -56.134411             0.174828
     60       1.00000                     -56.134411         -56.134411             0.000000
     61       1.00000                     -34.893353         -35.514338            20.620074
     62       1.00000                     -34.893353         -35.514338             0.000000
     63       1.00000                     -33.917505         -34.961524             0.552814
     64       1.00000                     -33.917505         -34.961524             0.000000
     65       1.00000                     -33.917504         -33.842167             1.119357
     66       1.00000                     -33.917504         -33.842167             0.000000
     67       1.00000                     -33.779805         -33.277687             0.564480
     68       1.00000                     -33.779805         -33.277687             0.000000
     69       1.00000                     -33.765973         -33.125770             0.151917
     70       1.00000                     -33.765973         -33.125770             0.000000
     71       1.00000                     -33.765971         -33.117634             0.008136
     72       1.00000                     -33.765971         -33.117634             0.000000
     73       1.00000                     -13.237865         -13.237865            19.879769
     74       1.00000                     -13.237865         -13.237865             0.000000
     75       1.00000                     -10.665567         -10.665683             2.572183
     76       1.00000                     -10.665567         -10.665683             0.000000
     77       0.00000                      -6.656699          -6.705075             3.960608
     78       0.00000                      -6.656699          -6.705075             0.000000
     79       0.00000                      -6.656675          -6.608181             0.096893
     80       0.00000                      -6.656675          -6.608181             0.000000
     81       0.00000                      -6.580084          -6.583258             0.024924
     82       0.00000                      -6.580084          -6.583258             0.000000
     83       0.00000                      -6.254515          -6.237823             0.345435
     84       0.00000                      -6.254515          -6.237823             0.000000
     85       0.00000                      -5.947656          -6.003969             0.233854
     86       0.00000                      -5.947656          -6.003969             0.000000
     87       0.00000                      -5.947651          -5.892298             0.111671
     88       0.00000                      -5.947651          -5.892298             0.000000
     89       0.00000                      -5.276386          -5.302029             0.590270
     90       0.00000                      -5.276386          -5.302029             0.000000
     91       0.00000                      -5.276249          -5.241784             0.060245
     92       0.00000                      -5.276249          -5.241784             0.000000
     93       0.00000                      -2.915047          -2.950907             2.290877
     94       0.00000                      -2.915047          -2.950907             0.000000
     95       0.00000                      -2.914864          -2.877550             0.073356
     96       0.00000                      -2.914864          -2.877550             0.000000
     97       0.00000                       2.048567           2.049804             4.927354
     98       0.00000                       2.048567           2.049804             0.000000
     99       0.00000                       4.732310           4.732362             2.682559
    100       0.00000                       4.732310           4.732362             0.000000
    101       0.00000                       6.202633           6.203052             1.470690
    102       0.00000                       6.202633           6.203052             0.000000

  What follows are estimated values for band gap, HOMO, LUMO, etc.
  | They are estimated on a discrete k-point grid and not necessarily exact.
  | For converged numbers, create a DOS and/or band structure plot on a denser k-grid.

  Highest occupied state (VBM) at     -7.53076987 eV (relative to internal zero)
  | Occupation number:      0.52136282
  | K-point:    1419 at    0.812500    0.437500    0.583333 (in units of recip. lattice)

  Lowest unoccupied state (CBM) at    -7.52868200 eV (relative to internal zero)
  | Occupation number:      0.49781395
  | K-point:       6 at    0.000000    0.000000    0.500000 (in units of recip. lattice)

  ESTIMATED overall HOMO-LUMO gap:      0.00208787 eV between HOMO at k-point 1419 and LUMO at k-point 6
  | This appears to be an indirect band gap.
  | Smallest direct gap :      0.02683459 eV for k_point 481 at    0.187500    0.625000    0.500000 (in units of recip. lattice)
  However, this system has fractional occupation numbers. Since we use a finite k-point grid,
  this material is metallic within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.

  Spin-orbit coupling                                     :  max(cpu_time)    wall_clock(cpu1)
  | Computing matrix elements for SOC operator            :          0.294               0.294
  | Constructing second-variational Hamiltonian           :          0.011               0.011
  | Diagonalizing second-variational Hamiltonian          :          0.015               0.015
  | Syncing data and calculating occupations              :          0.032               0.031
  | Writing out data, calculating band gaps, etc.         :          0.002               0.002
  | Total SOC time                                        :          0.356               0.357

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        7.492 MB (on task   0)
  |   Maximum:        7.568 MB (on task   1)
  |   Average:        7.493 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:       29.627 MB (on task 142 after allocating potential_shell)
  |   Maximum:       36.692 MB (on task  42 after allocating potential_shell)
  |   Average:       33.708 MB
  | Largest tracked array allocation so far:
  |   Minimum:        6.304 MB (hamiltonian_shell on task 142)
  |   Maximum:       12.441 MB (hamiltonian_shell on task  42)
  |   Average:        9.825 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
 ------------------------------------------------------------

  -------------------------------------------------------------------
  Writing the requested band structure output (LAPACK version):
  -------------------------------------------------------------------

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work       11.664 s, elapsed       20.991 s => Consider using load balancing!
  Integrating SOC matrix: batch-based integration p2 version.
  Allocating        0.107 MB for dist_tab
  Allocating        0.107 MB for dist_tab_sq
  Allocating        0.320 MB for dir_tab
  Allocating        0.021 MB for i_basis_fns
  Allocating        0.680 MB for i_basis_fns_inv
  Allocating        0.021 MB for i_atom_fns
  Allocating        2.983 MB for gradient_basis_wave
  Allocating        0.007 MB for ylm_tab
  Allocating        0.002 MB for radial_wave
  Allocating        0.002 MB for radial_wave_deriv
  Allocating        0.014 MB for i_basis
  Allocating       10.515 MB for soc_shell
  Allocating        0.020 MB for cartesians
  Allocating        0.020 MB for sum_gradient
  Allocating        0.040 MB for sum_hessian
  Allocating        0.001 MB for potential_shell

  Treating all   58 k-points in band plot segment #   1:


  Scalar-relativistic "band gap" along reciprocal space direction number:    1
  | Lowest unoccupied state:      -7.48015502 eV
  | Highest occupied state :      -7.54336435 eV
  | Energy difference      :       0.06320933 eV


Spin-orbit-coupled "band gap" along reciprocal space direction number:    1
  | Lowest unoccupied state:      -7.48179795 eV
  | Highest occupied state :      -7.54493967 eV
  | Energy difference      :       0.06314172 eV


  Treating all   34 k-points in band plot segment #   2:


  Scalar-relativistic "band gap" along reciprocal space direction number:    2
  | Lowest unoccupied state:      -7.35300555 eV
  | Highest occupied state :      -7.63720233 eV
  | Energy difference      :       0.28419678 eV


Spin-orbit-coupled "band gap" along reciprocal space direction number:    2
  | Lowest unoccupied state:      -7.35274642 eV
  | Highest occupied state :      -7.62395297 eV
  | Energy difference      :       0.27120655 eV


  Treating all   67 k-points in band plot segment #   3:


  Scalar-relativistic "band gap" along reciprocal space direction number:    3
  | Lowest unoccupied state:      -7.49143548 eV
  | Highest occupied state :      -7.54539063 eV
  | Energy difference      :       0.05395515 eV


Spin-orbit-coupled "band gap" along reciprocal space direction number:    3
  | Lowest unoccupied state:      -7.49299324 eV
  | Highest occupied state :      -7.53536420 eV
  | Energy difference      :       0.04237096 eV


  Treating all   31 k-points in band plot segment #   4:


  Scalar-relativistic "band gap" along reciprocal space direction number:    4
  | Lowest unoccupied state:      -7.53060595 eV
  | Highest occupied state :      -7.53906084 eV
  | Energy difference      :       0.00845490 eV


Spin-orbit-coupled "band gap" along reciprocal space direction number:    4
  | Lowest unoccupied state:      -7.52868200 eV
  | Highest occupied state :      -7.53460507 eV
  | Energy difference      :       0.00592307 eV


  Treating all   58 k-points in band plot segment #   5:


  Scalar-relativistic "band gap" along reciprocal space direction number:    5
  | Lowest unoccupied state:      -7.53060595 eV
  | Highest occupied state :      -7.53306130 eV
  | Energy difference      :       0.00245535 eV


Spin-orbit-coupled "band gap" along reciprocal space direction number:    5
  | Lowest unoccupied state:      -7.52868200 eV
  | Highest occupied state :      -7.53112666 eV
  | Energy difference      :       0.00244466 eV


  Treating all   34 k-points in band plot segment #   6:


  Scalar-relativistic "band gap" along reciprocal space direction number:    6
  | Lowest unoccupied state:      -7.53046040 eV
  | Highest occupied state :      -7.53289739 eV
  | Energy difference      :       0.00243698 eV


Spin-orbit-coupled "band gap" along reciprocal space direction number:    6
  | Lowest unoccupied state:      -7.52671848 eV
  | Highest occupied state :      -7.54134729 eV
  | Energy difference      :       0.01462882 eV


  Treating all   67 k-points in band plot segment #   7:


  Scalar-relativistic "band gap" along reciprocal space direction number:    7
  | Lowest unoccupied state:      -7.53060595 eV
  | Highest occupied state :      -7.53304774 eV
  | Energy difference      :       0.00244180 eV


Spin-orbit-coupled "band gap" along reciprocal space direction number:    7
  | Lowest unoccupied state:      -7.52868200 eV
  | Highest occupied state :      -7.53094134 eV
  | Energy difference      :       0.00225935 eV


  Treating all   31 k-points in band plot segment #   8:


  Scalar-relativistic "band gap" along reciprocal space direction number:    8
  | Lowest unoccupied state:      -6.96173283 eV
  | Highest occupied state :      -7.63720233 eV
  | Energy difference      :       0.67546950 eV


Spin-orbit-coupled "band gap" along reciprocal space direction number:    8
  | Lowest unoccupied state:      -6.96589386 eV
  | Highest occupied state :      -7.62395297 eV
  | Energy difference      :       0.65805912 eV


  Treating all   31 k-points in band plot segment #   9:


  Scalar-relativistic "band gap" along reciprocal space direction number:    9
  | Lowest unoccupied state:      -7.52949621 eV
  | Highest occupied state :      -8.64815220 eV
  | Energy difference      :       1.11865599 eV


Spin-orbit-coupled "band gap" along reciprocal space direction number:    9
  | Lowest unoccupied state:      -7.52625649 eV
  | Highest occupied state :      -7.53306587 eV
  | Energy difference      :       0.00680939 eV

  Scalar-relativistic "band gap" of total set of bands:
  | Lowest unoccupied state:      -7.53060595 eV
  | Highest occupied state :      -7.53289739 eV
  | Energy difference      :       0.00229144 eV

  Spin-orbit-coupled "band gap" of total set of bands:
  | Lowest unoccupied state:      -7.52868200 eV
  | Highest occupied state :      -7.53094134 eV
  | Energy difference      :       0.00225935 eV


  Band Structure                                          :  max(cpu_time) wall_clock(cpu1)
  | Total Time                                            :          0.486            0.505
------------------------------------------------------------

------------------------------------------------------------------------------
  Final output of selected total energy values:

  The following output summarizes some interesting total energy values
  at the end of a run (AFTER all relaxation, molecular dynamics, etc.).

  | Total energy of the DFT / Hartree-Fock s.c.f. calculation      :        -197564.705319359 eV
  | Final zero-broadening corrected energy (caution - metals only) :        -197564.706451240 eV
  | Total energy after non-SC SOC correction (DO NOT USE)          :        -197564.792619247 eV
  | For reference only, the value of 1 Hartree used in FHI-aims is :             27.211384500 eV
  | For reference only, the overall average (free atom contribution
  | + realspace contribution) of the electrostatic potential after
  | s.c.f. convergence is                                          :            -24.440460243 eV

  Before relying on these values, please be sure to understand exactly which
  total energy value is referred to by a given number. Different objects may
  all carry the same name 'total energy'. Definitions:

  Total energy of the DFT / Hartree-Fock s.c.f. calculation:
  | Note that this energy does not include ANY quantities calculated after the
  | s.c.f. cycle, in particular not ANY RPA, MP2, etc. many-body perturbation terms.

  Final zero-broadening corrected energy:
  | For metallic systems only, a broadening of the occupation numbers at the Fermi
  | level can be extrapolated back to zero broadening by an electron-gas inspired
  | formula. For all systems that are not real metals, this value can be
  | meaningless and should be avoided.

------------------------------------------------------------------------------
  Methods described in the following list of references were used in this FHI-aims run.
  If you publish the results, please make sure to cite these reference if they apply.
  FHI-aims is an academic code, and for our developers (often, Ph.D. students
  and postdocs), scientific credit in the community is essential.
  Thank you for helping us!

  For any use of FHI-aims, please cite:

    Volker Blum, Ralf Gehrke, Felix Hanke, Paula Havu, Ville Havu,
    Xinguo Ren, Karsten Reuter, and Matthias Scheffler
    'Ab initio molecular simulations with numeric atom-centered orbitals'
    Computer Physics Communications 180, 2175-2196 (2009)
    http://doi.org/10.1016/j.cpc.2009.06.022


  The provided symmetry information was generated with SPGlib:

    Atsushi Togo, Yusuke Seto, Dimitar Pashov
    SPGlib 1.7.3 obtained from http://spglib.sourceforge.net
    Copyright (C) 2008 Atsushi Togo


  For second-variational spin-orbit coupling used in your run, please cite:

    William P. Huhn and Volker Blum,
    'One-hundred-three compound band-structure benchmark of post-self-consistent'
    'spin-orbit coupling treatments in density functional theory'
    Phys. Rev. Materials 1, 033803 (2017).


  The ELSI infrastructure was used in your run to solve the Kohn-Sham electronic structure.
  Please check out http://elsi-interchange.org to learn more.
  If scalability is important for your project, please acknowledge ELSI by citing:

    V. W-z. Yu, F. Corsetti, A. Garcia, W. P. Huhn, M. Jacquelin, W. Jia,
    B. Lange, L. Lin, J. Lu, W. Mi, A. Seifitokaldani, A. Vazquez-Mayagoitia,
    C. Yang, H. Yang, and V. Blum
    'ELSI: A unified software interface for Kohn-Sham electronic structure solvers'
    Computer Physics Communications 222, 267-285 (2018).
    http://doi.org/10.1016/j.cpc.2017.09.007


  For the real-space grid partitioning and parallelization used in this calculation, please cite:

    Ville Havu, Volker Blum, Paula Havu, and Matthias Scheffler,
    'Efficient O(N) integration for all-electron electronic structure calculation'
    'using numerically tabulated basis functions'
    Journal of Computational Physics 228, 8367-8379 (2009).
    http://doi.org/10.1016/j.jcp.2009.08.008

  Of course, there are many other important community references, e.g., those cited in the
  above references. Our list is limited to references that describe implementations in the
  FHI-aims code. The reason is purely practical (length of this list) - please credit others as well.

------------------------------------------------------------
          Leaving FHI-aims.
          Date     :  20220728, Time     :  132808.464

          Computational steps:
          | Number of self-consistency cycles          :           15
          | Number of SCF (re)initializations          :            1

          Detailed time accounting                     :  max(cpu_time)    wall_clock(cpu1)
          | Total time                                  :        6.042 s           6.394 s
          | Preparation time                            :        0.640 s           0.703 s
          | Boundary condition initalization            :        0.119 s           0.120 s
          | Grid partitioning                           :        0.022 s           0.022 s
          | Preloading free-atom quantities on grid     :        0.017 s           0.017 s
          | Free-atom superposition energy              :        0.001 s           0.002 s
          | Total time for integrations                 :        0.990 s           0.992 s
          | Total time for solution of K.-S. equations  :        0.830 s           0.882 s
          | Total time for density update               :        1.249 s           1.246 s
          | Total time for mixing & preconditioning     :        0.401 s           0.113 s
          | Total time for Hartree multipole update     :        0.021 s           0.023 s
          | Total time for Hartree multipole sum        :        0.277 s           0.277 s
          | Total time for total energy evaluation      :        0.034 s           0.032 s
          | Total time for scaled ZORA corrections      :        0.000 s           0.000 s
          | Total time for perturbative SOC             :        0.356 s           0.357 s
          | Total time for band structures, DOS         :        0.500 s           0.505 s

          Partial memory accounting:
          | Residual value for overall tracked memory usage across tasks:     0.000000 MB (should be 0.000000 MB)
          | Peak values for overall tracked memory usage:
          |   Minimum:       29.627 MB (on task 142 after allocating potential_shell)
          |   Maximum:       36.692 MB (on task  42 after allocating potential_shell)
          |   Average:       33.708 MB
          | Largest tracked array allocation:
          |   Minimum:        6.304 MB (hamiltonian_shell on task 142)
          |   Maximum:       12.441 MB (hamiltonian_shell on task  42)
          |   Average:        9.825 MB
          Note:  These values currently only include a subset of arrays which are explicitly tracked.
          The "true" memory usage will be greater.

          Have a nice day.
------------------------------------------------------------
