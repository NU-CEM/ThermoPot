------------------------------------------------------------
          Invoking FHI-aims ...

          When using FHI-aims, please cite the following reference:

            Volker Blum, Ralf Gehrke, Felix Hanke, Paula Havu,
            Ville Havu, Xinguo Ren, Karsten Reuter, and Matthias Scheffler,
            'Ab Initio Molecular Simulations with Numeric Atom-Centered Orbitals',
            Computer Physics Communications 180, 2175-2196 (2009)

          In addition, many other developments in FHI-aims are likely important for
          your particular application. A partial list of references is given at the end of
          this file. Thank you for giving credit to the authors of these developments.

          For any questions about FHI-aims, please visit our slack channel at

            https://fhi-aims.slack.com

          and our main development and support site at

            https://aims-git.rz-berlin.mpg.de .

          The latter site, in particular, has a wiki to collect information, as well
          as an issue tracker to log discussions, suggest improvements, and report issues
          or bugs. https://aims-git.rz-berlin.mpg.de is also the main development site
          of the project and all new and updated code versions can be obtained there.
          Please send an email to aims-coordinators@fhi-berlin.mpg.de and we will add
          you to these sites. They are for you and everyone is welcome there.

------------------------------------------------------------



  Date     :  20220914, Time     :  152349.816
  Time zero on CPU 1             :   0.199256500000000E+01  s.
  Internal wall clock time zero  :           432401029.816  s.

  FHI-aims created a unique identifier for this run for later identification
  aims_uuid : 284DA920-4964-476A-ABF0-F8DB54096E5B

  Build configuration of the current instance of FHI-aims
  -------------------------------------------------------
  FHI-aims version      : 220609
  Commit number         : 932a0c519
  CMake host system     : Linux-4.12.14-197.78_9.1.64-cray_shasta_c
  CMake version         : 3.10.2
  Fortran compiler      : /opt/cray/pe/craype/2.7.6/bin/ftn (GNU) version 10.2.0
  Fortran compiler flags: -O2 -fallow-argument-mismatch -ffree-line-length-none
  C compiler            : /opt/cray/pe/craype/2.7.6/bin/cc (GNU) version 10.2.0
  C compiler flags      : -O2
  Using MPI
  Using ScaLAPACK
  Using LibXC
  Using i-PI
  Using RLSY
  Linking against:

  Using      512 parallel tasks.
  Task        0 on host nid001049 reporting.
  Task        1 on host nid001049 reporting.
  Task        2 on host nid001049 reporting.
  Task        3 on host nid001049 reporting.
  Task        4 on host nid001049 reporting.
  Task        5 on host nid001049 reporting.
  Task        6 on host nid001049 reporting.
  Task        7 on host nid001049 reporting.
  Task        8 on host nid001049 reporting.
  Task        9 on host nid001049 reporting.
  Task       10 on host nid001049 reporting.
  Task       11 on host nid001049 reporting.
  Task       12 on host nid001049 reporting.
  Task       13 on host nid001049 reporting.
  Task       14 on host nid001049 reporting.
  Task       15 on host nid001049 reporting.
  Task       16 on host nid001049 reporting.
  Task       17 on host nid001049 reporting.
  Task       18 on host nid001049 reporting.
  Task       19 on host nid001049 reporting.
  Task       20 on host nid001049 reporting.
  Task       21 on host nid001049 reporting.
  Task       22 on host nid001049 reporting.
  Task       23 on host nid001049 reporting.
  Task       24 on host nid001049 reporting.
  Task       25 on host nid001049 reporting.
  Task       26 on host nid001049 reporting.
  Task       27 on host nid001049 reporting.
  Task       28 on host nid001049 reporting.
  Task       29 on host nid001049 reporting.
  Task       30 on host nid001049 reporting.
  Task       31 on host nid001049 reporting.
  Task       32 on host nid001049 reporting.
  Task       33 on host nid001049 reporting.
  Task       34 on host nid001049 reporting.
  Task       35 on host nid001049 reporting.
  Task       36 on host nid001049 reporting.
  Task       37 on host nid001049 reporting.
  Task       38 on host nid001049 reporting.
  Task       39 on host nid001049 reporting.
  Task       40 on host nid001049 reporting.
  Task       41 on host nid001049 reporting.
  Task       42 on host nid001049 reporting.
  Task       43 on host nid001049 reporting.
  Task       44 on host nid001049 reporting.
  Task       45 on host nid001049 reporting.
  Task       46 on host nid001049 reporting.
  Task       47 on host nid001049 reporting.
  Task       48 on host nid001049 reporting.
  Task       49 on host nid001049 reporting.
  Task       50 on host nid001049 reporting.
  Task       51 on host nid001049 reporting.
  Task       52 on host nid001049 reporting.
  Task       53 on host nid001049 reporting.
  Task       54 on host nid001049 reporting.
  Task       55 on host nid001049 reporting.
  Task       56 on host nid001049 reporting.
  Task       57 on host nid001049 reporting.
  Task       58 on host nid001049 reporting.
  Task       59 on host nid001049 reporting.
  Task       60 on host nid001049 reporting.
  Task       61 on host nid001049 reporting.
  Task       62 on host nid001049 reporting.
  Task       63 on host nid001049 reporting.
  Task       64 on host nid001049 reporting.
  Task       65 on host nid001049 reporting.
  Task       66 on host nid001049 reporting.
  Task       67 on host nid001049 reporting.
  Task       68 on host nid001049 reporting.
  Task       69 on host nid001049 reporting.
  Task       70 on host nid001049 reporting.
  Task       71 on host nid001049 reporting.
  Task       72 on host nid001049 reporting.
  Task       73 on host nid001049 reporting.
  Task       74 on host nid001049 reporting.
  Task       75 on host nid001049 reporting.
  Task       76 on host nid001049 reporting.
  Task       77 on host nid001049 reporting.
  Task       78 on host nid001049 reporting.
  Task       79 on host nid001049 reporting.
  Task       80 on host nid001049 reporting.
  Task       81 on host nid001049 reporting.
  Task       82 on host nid001049 reporting.
  Task       83 on host nid001049 reporting.
  Task       84 on host nid001049 reporting.
  Task       85 on host nid001049 reporting.
  Task       86 on host nid001049 reporting.
  Task       87 on host nid001049 reporting.
  Task       88 on host nid001049 reporting.
  Task       89 on host nid001049 reporting.
  Task       90 on host nid001049 reporting.
  Task       91 on host nid001049 reporting.
  Task       92 on host nid001049 reporting.
  Task       93 on host nid001049 reporting.
  Task       94 on host nid001049 reporting.
  Task       95 on host nid001049 reporting.
  Task       96 on host nid001049 reporting.
  Task       97 on host nid001049 reporting.
  Task       98 on host nid001049 reporting.
  Task       99 on host nid001049 reporting.
  Task      100 on host nid001049 reporting.
  Task      101 on host nid001049 reporting.
  Task      102 on host nid001049 reporting.
  Task      103 on host nid001049 reporting.
  Task      104 on host nid001049 reporting.
  Task      105 on host nid001049 reporting.
  Task      106 on host nid001049 reporting.
  Task      107 on host nid001049 reporting.
  Task      108 on host nid001049 reporting.
  Task      109 on host nid001049 reporting.
  Task      110 on host nid001049 reporting.
  Task      111 on host nid001049 reporting.
  Task      112 on host nid001049 reporting.
  Task      113 on host nid001049 reporting.
  Task      114 on host nid001049 reporting.
  Task      115 on host nid001049 reporting.
  Task      116 on host nid001049 reporting.
  Task      117 on host nid001049 reporting.
  Task      118 on host nid001049 reporting.
  Task      119 on host nid001049 reporting.
  Task      120 on host nid001049 reporting.
  Task      121 on host nid001049 reporting.
  Task      122 on host nid001049 reporting.
  Task      123 on host nid001049 reporting.
  Task      124 on host nid001049 reporting.
  Task      125 on host nid001049 reporting.
  Task      126 on host nid001049 reporting.
  Task      127 on host nid001049 reporting.
  Task      128 on host nid001050 reporting.
  Task      129 on host nid001050 reporting.
  Task      130 on host nid001050 reporting.
  Task      131 on host nid001050 reporting.
  Task      132 on host nid001050 reporting.
  Task      133 on host nid001050 reporting.
  Task      134 on host nid001050 reporting.
  Task      135 on host nid001050 reporting.
  Task      136 on host nid001050 reporting.
  Task      137 on host nid001050 reporting.
  Task      138 on host nid001050 reporting.
  Task      139 on host nid001050 reporting.
  Task      140 on host nid001050 reporting.
  Task      141 on host nid001050 reporting.
  Task      142 on host nid001050 reporting.
  Task      143 on host nid001050 reporting.
  Task      144 on host nid001050 reporting.
  Task      145 on host nid001050 reporting.
  Task      146 on host nid001050 reporting.
  Task      147 on host nid001050 reporting.
  Task      148 on host nid001050 reporting.
  Task      149 on host nid001050 reporting.
  Task      150 on host nid001050 reporting.
  Task      151 on host nid001050 reporting.
  Task      152 on host nid001050 reporting.
  Task      153 on host nid001050 reporting.
  Task      154 on host nid001050 reporting.
  Task      155 on host nid001050 reporting.
  Task      156 on host nid001050 reporting.
  Task      157 on host nid001050 reporting.
  Task      158 on host nid001050 reporting.
  Task      159 on host nid001050 reporting.
  Task      160 on host nid001050 reporting.
  Task      161 on host nid001050 reporting.
  Task      162 on host nid001050 reporting.
  Task      163 on host nid001050 reporting.
  Task      164 on host nid001050 reporting.
  Task      165 on host nid001050 reporting.
  Task      166 on host nid001050 reporting.
  Task      167 on host nid001050 reporting.
  Task      168 on host nid001050 reporting.
  Task      169 on host nid001050 reporting.
  Task      170 on host nid001050 reporting.
  Task      171 on host nid001050 reporting.
  Task      172 on host nid001050 reporting.
  Task      173 on host nid001050 reporting.
  Task      174 on host nid001050 reporting.
  Task      175 on host nid001050 reporting.
  Task      176 on host nid001050 reporting.
  Task      177 on host nid001050 reporting.
  Task      178 on host nid001050 reporting.
  Task      179 on host nid001050 reporting.
  Task      180 on host nid001050 reporting.
  Task      181 on host nid001050 reporting.
  Task      182 on host nid001050 reporting.
  Task      183 on host nid001050 reporting.
  Task      184 on host nid001050 reporting.
  Task      185 on host nid001050 reporting.
  Task      186 on host nid001050 reporting.
  Task      187 on host nid001050 reporting.
  Task      188 on host nid001050 reporting.
  Task      189 on host nid001050 reporting.
  Task      190 on host nid001050 reporting.
  Task      191 on host nid001050 reporting.
  Task      192 on host nid001050 reporting.
  Task      193 on host nid001050 reporting.
  Task      194 on host nid001050 reporting.
  Task      195 on host nid001050 reporting.
  Task      196 on host nid001050 reporting.
  Task      197 on host nid001050 reporting.
  Task      198 on host nid001050 reporting.
  Task      199 on host nid001050 reporting.
  Task      200 on host nid001050 reporting.
  Task      201 on host nid001050 reporting.
  Task      202 on host nid001050 reporting.
  Task      203 on host nid001050 reporting.
  Task      204 on host nid001050 reporting.
  Task      205 on host nid001050 reporting.
  Task      206 on host nid001050 reporting.
  Task      207 on host nid001050 reporting.
  Task      208 on host nid001050 reporting.
  Task      209 on host nid001050 reporting.
  Task      210 on host nid001050 reporting.
  Task      211 on host nid001050 reporting.
  Task      212 on host nid001050 reporting.
  Task      213 on host nid001050 reporting.
  Task      214 on host nid001050 reporting.
  Task      215 on host nid001050 reporting.
  Task      216 on host nid001050 reporting.
  Task      217 on host nid001050 reporting.
  Task      218 on host nid001050 reporting.
  Task      219 on host nid001050 reporting.
  Task      220 on host nid001050 reporting.
  Task      221 on host nid001050 reporting.
  Task      222 on host nid001050 reporting.
  Task      223 on host nid001050 reporting.
  Task      224 on host nid001050 reporting.
  Task      225 on host nid001050 reporting.
  Task      226 on host nid001050 reporting.
  Task      227 on host nid001050 reporting.
  Task      228 on host nid001050 reporting.
  Task      229 on host nid001050 reporting.
  Task      230 on host nid001050 reporting.
  Task      231 on host nid001050 reporting.
  Task      232 on host nid001050 reporting.
  Task      233 on host nid001050 reporting.
  Task      234 on host nid001050 reporting.
  Task      235 on host nid001050 reporting.
  Task      236 on host nid001050 reporting.
  Task      237 on host nid001050 reporting.
  Task      238 on host nid001050 reporting.
  Task      239 on host nid001050 reporting.
  Task      240 on host nid001050 reporting.
  Task      241 on host nid001050 reporting.
  Task      242 on host nid001050 reporting.
  Task      243 on host nid001050 reporting.
  Task      244 on host nid001050 reporting.
  Task      245 on host nid001050 reporting.
  Task      246 on host nid001050 reporting.
  Task      247 on host nid001050 reporting.
  Task      248 on host nid001050 reporting.
  Task      249 on host nid001050 reporting.
  Task      250 on host nid001050 reporting.
  Task      251 on host nid001050 reporting.
  Task      252 on host nid001050 reporting.
  Task      253 on host nid001050 reporting.
  Task      254 on host nid001050 reporting.
  Task      255 on host nid001050 reporting.
  Task      256 on host nid001051 reporting.
  Task      257 on host nid001051 reporting.
  Task      258 on host nid001051 reporting.
  Task      259 on host nid001051 reporting.
  Task      260 on host nid001051 reporting.
  Task      261 on host nid001051 reporting.
  Task      262 on host nid001051 reporting.
  Task      263 on host nid001051 reporting.
  Task      264 on host nid001051 reporting.
  Task      265 on host nid001051 reporting.
  Task      266 on host nid001051 reporting.
  Task      267 on host nid001051 reporting.
  Task      268 on host nid001051 reporting.
  Task      269 on host nid001051 reporting.
  Task      270 on host nid001051 reporting.
  Task      271 on host nid001051 reporting.
  Task      272 on host nid001051 reporting.
  Task      273 on host nid001051 reporting.
  Task      274 on host nid001051 reporting.
  Task      275 on host nid001051 reporting.
  Task      276 on host nid001051 reporting.
  Task      277 on host nid001051 reporting.
  Task      278 on host nid001051 reporting.
  Task      279 on host nid001051 reporting.
  Task      280 on host nid001051 reporting.
  Task      281 on host nid001051 reporting.
  Task      282 on host nid001051 reporting.
  Task      283 on host nid001051 reporting.
  Task      284 on host nid001051 reporting.
  Task      285 on host nid001051 reporting.
  Task      286 on host nid001051 reporting.
  Task      287 on host nid001051 reporting.
  Task      288 on host nid001051 reporting.
  Task      289 on host nid001051 reporting.
  Task      290 on host nid001051 reporting.
  Task      291 on host nid001051 reporting.
  Task      292 on host nid001051 reporting.
  Task      293 on host nid001051 reporting.
  Task      294 on host nid001051 reporting.
  Task      295 on host nid001051 reporting.
  Task      296 on host nid001051 reporting.
  Task      297 on host nid001051 reporting.
  Task      298 on host nid001051 reporting.
  Task      299 on host nid001051 reporting.
  Task      300 on host nid001051 reporting.
  Task      301 on host nid001051 reporting.
  Task      302 on host nid001051 reporting.
  Task      303 on host nid001051 reporting.
  Task      304 on host nid001051 reporting.
  Task      305 on host nid001051 reporting.
  Task      306 on host nid001051 reporting.
  Task      307 on host nid001051 reporting.
  Task      308 on host nid001051 reporting.
  Task      309 on host nid001051 reporting.
  Task      310 on host nid001051 reporting.
  Task      311 on host nid001051 reporting.
  Task      312 on host nid001051 reporting.
  Task      313 on host nid001051 reporting.
  Task      314 on host nid001051 reporting.
  Task      315 on host nid001051 reporting.
  Task      316 on host nid001051 reporting.
  Task      317 on host nid001051 reporting.
  Task      318 on host nid001051 reporting.
  Task      319 on host nid001051 reporting.
  Task      320 on host nid001051 reporting.
  Task      321 on host nid001051 reporting.
  Task      322 on host nid001051 reporting.
  Task      323 on host nid001051 reporting.
  Task      324 on host nid001051 reporting.
  Task      325 on host nid001051 reporting.
  Task      326 on host nid001051 reporting.
  Task      327 on host nid001051 reporting.
  Task      328 on host nid001051 reporting.
  Task      329 on host nid001051 reporting.
  Task      330 on host nid001051 reporting.
  Task      331 on host nid001051 reporting.
  Task      332 on host nid001051 reporting.
  Task      333 on host nid001051 reporting.
  Task      334 on host nid001051 reporting.
  Task      335 on host nid001051 reporting.
  Task      336 on host nid001051 reporting.
  Task      337 on host nid001051 reporting.
  Task      338 on host nid001051 reporting.
  Task      339 on host nid001051 reporting.
  Task      340 on host nid001051 reporting.
  Task      341 on host nid001051 reporting.
  Task      342 on host nid001051 reporting.
  Task      343 on host nid001051 reporting.
  Task      344 on host nid001051 reporting.
  Task      345 on host nid001051 reporting.
  Task      346 on host nid001051 reporting.
  Task      347 on host nid001051 reporting.
  Task      348 on host nid001051 reporting.
  Task      349 on host nid001051 reporting.
  Task      350 on host nid001051 reporting.
  Task      351 on host nid001051 reporting.
  Task      352 on host nid001051 reporting.
  Task      353 on host nid001051 reporting.
  Task      354 on host nid001051 reporting.
  Task      355 on host nid001051 reporting.
  Task      356 on host nid001051 reporting.
  Task      357 on host nid001051 reporting.
  Task      358 on host nid001051 reporting.
  Task      359 on host nid001051 reporting.
  Task      360 on host nid001051 reporting.
  Task      361 on host nid001051 reporting.
  Task      362 on host nid001051 reporting.
  Task      363 on host nid001051 reporting.
  Task      364 on host nid001051 reporting.
  Task      365 on host nid001051 reporting.
  Task      366 on host nid001051 reporting.
  Task      367 on host nid001051 reporting.
  Task      368 on host nid001051 reporting.
  Task      369 on host nid001051 reporting.
  Task      370 on host nid001051 reporting.
  Task      371 on host nid001051 reporting.
  Task      372 on host nid001051 reporting.
  Task      373 on host nid001051 reporting.
  Task      374 on host nid001051 reporting.
  Task      375 on host nid001051 reporting.
  Task      376 on host nid001051 reporting.
  Task      377 on host nid001051 reporting.
  Task      378 on host nid001051 reporting.
  Task      379 on host nid001051 reporting.
  Task      380 on host nid001051 reporting.
  Task      381 on host nid001051 reporting.
  Task      382 on host nid001051 reporting.
  Task      383 on host nid001051 reporting.
  Task      384 on host nid001052 reporting.
  Task      385 on host nid001052 reporting.
  Task      386 on host nid001052 reporting.
  Task      387 on host nid001052 reporting.
  Task      388 on host nid001052 reporting.
  Task      389 on host nid001052 reporting.
  Task      390 on host nid001052 reporting.
  Task      391 on host nid001052 reporting.
  Task      392 on host nid001052 reporting.
  Task      393 on host nid001052 reporting.
  Task      394 on host nid001052 reporting.
  Task      395 on host nid001052 reporting.
  Task      396 on host nid001052 reporting.
  Task      397 on host nid001052 reporting.
  Task      398 on host nid001052 reporting.
  Task      399 on host nid001052 reporting.
  Task      400 on host nid001052 reporting.
  Task      401 on host nid001052 reporting.
  Task      402 on host nid001052 reporting.
  Task      403 on host nid001052 reporting.
  Task      404 on host nid001052 reporting.
  Task      405 on host nid001052 reporting.
  Task      406 on host nid001052 reporting.
  Task      407 on host nid001052 reporting.
  Task      408 on host nid001052 reporting.
  Task      409 on host nid001052 reporting.
  Task      410 on host nid001052 reporting.
  Task      411 on host nid001052 reporting.
  Task      412 on host nid001052 reporting.
  Task      413 on host nid001052 reporting.
  Task      414 on host nid001052 reporting.
  Task      415 on host nid001052 reporting.
  Task      416 on host nid001052 reporting.
  Task      417 on host nid001052 reporting.
  Task      418 on host nid001052 reporting.
  Task      419 on host nid001052 reporting.
  Task      420 on host nid001052 reporting.
  Task      421 on host nid001052 reporting.
  Task      422 on host nid001052 reporting.
  Task      423 on host nid001052 reporting.
  Task      424 on host nid001052 reporting.
  Task      425 on host nid001052 reporting.
  Task      426 on host nid001052 reporting.
  Task      427 on host nid001052 reporting.
  Task      428 on host nid001052 reporting.
  Task      429 on host nid001052 reporting.
  Task      430 on host nid001052 reporting.
  Task      431 on host nid001052 reporting.
  Task      432 on host nid001052 reporting.
  Task      433 on host nid001052 reporting.
  Task      434 on host nid001052 reporting.
  Task      435 on host nid001052 reporting.
  Task      436 on host nid001052 reporting.
  Task      437 on host nid001052 reporting.
  Task      438 on host nid001052 reporting.
  Task      439 on host nid001052 reporting.
  Task      440 on host nid001052 reporting.
  Task      441 on host nid001052 reporting.
  Task      442 on host nid001052 reporting.
  Task      443 on host nid001052 reporting.
  Task      444 on host nid001052 reporting.
  Task      445 on host nid001052 reporting.
  Task      446 on host nid001052 reporting.
  Task      447 on host nid001052 reporting.
  Task      448 on host nid001052 reporting.
  Task      449 on host nid001052 reporting.
  Task      450 on host nid001052 reporting.
  Task      451 on host nid001052 reporting.
  Task      452 on host nid001052 reporting.
  Task      453 on host nid001052 reporting.
  Task      454 on host nid001052 reporting.
  Task      455 on host nid001052 reporting.
  Task      456 on host nid001052 reporting.
  Task      457 on host nid001052 reporting.
  Task      458 on host nid001052 reporting.
  Task      459 on host nid001052 reporting.
  Task      460 on host nid001052 reporting.
  Task      461 on host nid001052 reporting.
  Task      462 on host nid001052 reporting.
  Task      463 on host nid001052 reporting.
  Task      464 on host nid001052 reporting.
  Task      465 on host nid001052 reporting.
  Task      466 on host nid001052 reporting.
  Task      467 on host nid001052 reporting.
  Task      468 on host nid001052 reporting.
  Task      469 on host nid001052 reporting.
  Task      470 on host nid001052 reporting.
  Task      471 on host nid001052 reporting.
  Task      472 on host nid001052 reporting.
  Task      473 on host nid001052 reporting.
  Task      474 on host nid001052 reporting.
  Task      475 on host nid001052 reporting.
  Task      476 on host nid001052 reporting.
  Task      477 on host nid001052 reporting.
  Task      478 on host nid001052 reporting.
  Task      479 on host nid001052 reporting.
  Task      480 on host nid001052 reporting.
  Task      481 on host nid001052 reporting.
  Task      482 on host nid001052 reporting.
  Task      483 on host nid001052 reporting.
  Task      484 on host nid001052 reporting.
  Task      485 on host nid001052 reporting.
  Task      486 on host nid001052 reporting.
  Task      487 on host nid001052 reporting.
  Task      488 on host nid001052 reporting.
  Task      489 on host nid001052 reporting.
  Task      490 on host nid001052 reporting.
  Task      491 on host nid001052 reporting.
  Task      492 on host nid001052 reporting.
  Task      493 on host nid001052 reporting.
  Task      494 on host nid001052 reporting.
  Task      495 on host nid001052 reporting.
  Task      496 on host nid001052 reporting.
  Task      497 on host nid001052 reporting.
  Task      498 on host nid001052 reporting.
  Task      499 on host nid001052 reporting.
  Task      500 on host nid001052 reporting.
  Task      501 on host nid001052 reporting.
  Task      502 on host nid001052 reporting.
  Task      503 on host nid001052 reporting.
  Task      504 on host nid001052 reporting.
  Task      505 on host nid001052 reporting.
  Task      506 on host nid001052 reporting.
  Task      507 on host nid001052 reporting.
  Task      508 on host nid001052 reporting.
  Task      509 on host nid001052 reporting.
  Task      510 on host nid001052 reporting.
  Task      511 on host nid001052 reporting.

  Performing system and environment tests:
  | Environment variable OMP_NUM_THREADS correctly set to 1.
  | Checking for ScaLAPACK...
  | Testing pdtran()...
  | All pdtran() tests passed.

  Obtaining array dimensions for all initial allocations:
  
  -----------------------------------------------------------------------
  Parsing control.in (first pass over file, find array dimensions only).
  The contents of control.in will be repeated verbatim below
  unless switched off by setting 'verbatim_writeout .false.' .
  in the first line of control.in .
  -----------------------------------------------------------------------
  
  xc               scan
  charge           0.
  spin             none
  relativistic atomic_zora scalar
  sc_accuracy_rho       1E-7
  ################################################################################
  #
  #  FHI-aims code project
  #  Volker Blum, Fritz Haber Institute Berlin, 2009
  #
  #  Suggested "tight" defaults for S atom (to be pasted into control.in file)
  #
  #  Revised Jan 04, 2011, following tests (SiC) done by Lydia Nemec:
  #     d and g functions of tier 2 now enabled by default.
  #
  ################################################################################
    species        S
  #     global species definitions
      nucleus             16
      mass                32.065
  #
      l_hartree           6
  #
      cut_pot             4.0          2.0  1.0
      basis_dep_cutoff    1e-4
  #
      radial_base         44 7.0
      radial_multiplier   2
      angular_grids       specified
        division   0.4665  110
        division   0.5810  194
        division   0.7139  302
        division   0.8274  434
  #      division   0.9105  590
  #      division   1.0975  770
  #      division   1.2028  974
  #      outer_grid  974
        outer_grid  434
  ################################################################################
  #
  #  Definition of "minimal" basis
  #
  ################################################################################
  #     valence basis states
      valence      3  s   2.
      valence      3  p   4.
  #     ion occupancy
      ion_occ      3  s   1.
      ion_occ      3  p   3.
  ################################################################################
  #
  #  Suggested additional basis functions. For production calculations,
  #  uncomment them one after another (the most important basis functions are
  #  listed first).
  #
  #  Constructed for dimers: 1.6 A, 1.9 A, 2.5 A, 3.25 A, 4.0 A
  #
  ################################################################################
  #  "First tier" - improvements: -652.81 meV to -45.53 meV
       ionic 3 d auto
       hydro 2 p 1.8
       hydro 4 f 7
       ionic 3 s auto
  #  "Second tier" - improvements: -30.20 meV to -1.74 meV
       hydro 4 d 6.2
       hydro 5 g 10.8
  #     hydro 4 p 4.9
  #     hydro 5 f 10
  #     hydro 1 s 0.8
  #  "Third tier" - improvements: -1.04 meV to -0.20 meV
  #     hydro 3 d 3.9
  #     hydro 3 d 2.7
  #     hydro 5 g 12
  #     hydro 4 p 10.4
  #     hydro 5 f 12.4
  #     hydro 2 s 1.9
  #  "Fourth tier" - improvements: -0.35 meV to -0.06 meV
  #     hydro 4 d 10.4
  #     hydro 4 p 7.2
  #     hydro 4 d 10
  #     hydro 5 g 19.2
  #     hydro 4 s 12
  
  ################################################################################
  #
  # For methods that use the localized form of the "resolution of identity" for
  # the two-electron Coulomb operator (RI_method LVL), particularly Hartree-Fock and
  # hybrid density functional calculations, the highest accuracy can be obtained by
  # uncommenting the line beginning with "for_aux"  below, thus adding an extra g radial
  # function to the construction of the product basis set for the expansion.
  # See Ref. New J. Phys. 17, 093020 (2015) for more information, particularly Figs. 1 and 6.
  #
  ################################################################################
  #
  # for_aux hydro 5 g 6.0
  
  -----------------------------------------------------------------------
  Completed first pass over input file control.in .
  -----------------------------------------------------------------------
  
  
  -----------------------------------------------------------------------
  Parsing geometry.in (first pass over file, find array dimensions only).
  The contents of geometry.in will be repeated verbatim below
  unless switched off by setting 'verbatim_writeout .false.' .
  in the first line of geometry.in .
  -----------------------------------------------------------------------
  
  #
  # This is the geometry file that corresponds to the current relaxation step.
  # If you do not want this file to be written, set the "write_restart_geometry" flag to .false.
  #  aims_uuid : B930DAE0-7C05-4CEB-AD1A-48E9DE4FAC6B
  #
  atom      -0.00000000     -0.00000000      0.95301535 S
  atom      -0.00000000      0.00000000     -0.95301535 S
  #
  # What follows is the current estimated Hessian matrix constructed by the BFGS algorithm.
  # This is NOT the true Hessian matrix of the system.
  # If you do not want this information here, switch it off using the "hessian_to_restart_geometry" keyword.
  #
  trust_radius             0.2000000030
  hessian_file
  
  -----------------------------------------------------------------------
  Completed first pass over input file geometry.in .
  -----------------------------------------------------------------------
  

  Basic array size parameters:
  | Number of species                 :        1
  | Number of atoms                   :        2
  | Max. basis fn. angular momentum   :        4
  | Max. atomic/ionic basis occupied n:        3
  | Max. number of basis fn. types    :        3
  | Max. radial fns per species/type  :        5
  | Max. logarithmic grid size        :     1357
  | Max. radial integration grid size :       89
  | Max. angular integration grid size:      434
  | Max. angular grid division number :        8
  | Radial grid for Hartree potential :     1357
  | Number of spin channels           :        1

------------------------------------------------------------
          Reading file control.in.
------------------------------------------------------------
  XC: Using the parameter-free meta-GGA functional SCAN.
  Charge =   0.000000E+00: Neutral system requested explicitly.
  Spin treatment: No spin polarisation.
  Scalar relativistic treatment of kinetic energy: on-site free-atom approximation to ZORA.
  Convergence accuracy of self-consistent charge density:  0.1000E-06

  Reading configuration options for species S                   .
  | Found nuclear charge :  16.0000
  | Found atomic mass :    32.064999999999998      amu
  | Found l_max for Hartree potential  :   6
  | Found cutoff potl. onset [A], width [A], scale factor :    4.00000    2.00000    1.00000
  | Threshold for basis-dependent cutoff potential is   0.100000E-03
  | Found data for basic radial integration grid :    44 points, outermost radius =    7.000 A
  | Found multiplier for basic radial grid :   2
  | Found angular grid specification: user-specified.
  | Specified grid contains     5 separate shells.
  | Check grid settings after all constraints further below.
  | Found free-atom valence shell :  3 s   2.000
  | Found free-atom valence shell :  3 p   4.000
  | Found free-ion valence shell :  3 s   1.000
  | Found free-ion valence shell :  3 p   3.000
  | Found ionic basis function :  3 d , default cutoff radius.
  | Found hydrogenic basis function :  2 p   1.800
  | Found hydrogenic basis function :  4 f   7.000
  | Found ionic basis function :  3 s , default cutoff radius.
  | Found hydrogenic basis function :  4 d   6.200
  | Found hydrogenic basis function :  5 g  10.800
  Species S                   : Missing cutoff potential type.
  Defaulting to exp(1/x)/(1-x)^2 type cutoff potential.
  Species S : No 'logarithmic' tag. Using default grid for free atom:
  | Default logarithmic grid data [bohr] : 0.1000E-03 0.1000E+03 0.1012E+01
  | Will include ionic basis functions of  2.0-fold positive S                    ion.
  Species S : On-site basis accuracy parameter (for Gram-Schmidt orthonormalisation) not specified.
  Using default value basis_acc =  0.1000000E-03.
  Species S                   : Using default innermost maximum threshold i_radial=  2 for radial functions.
  Species S                   : Default cutoff onset for free atom density etc. : 0.40000000E+01 AA.
  Species S                   : Basic radial grid will be enhanced according to radial_multiplier =   2, to contain    89 grid points.

  Finished reading input file 'control.in'.

------------------------------------------------------------


------------------------------------------------------------
          Reading geometry description geometry.in.
------------------------------------------------------------
 * Large trust radius value found - resetting to the current value of max_atomic_move,      0.20000000 A.
  Found keyword 'hessian_file', indicating that this is the continuation of a structure optimization.
  However, the control.in file does not request the geometry to be optimized.
  Ignoring the request for a file 'hessian.aims' to be present.
  | The smallest distance between any two atoms is         1.90603070 AA.
  | The first atom of this pair is atom number                      1 .
  | The second atom of this pair is atom number                     2 .
  Input structure read successfully.
  The structure contains        2 atoms,  and a total of         32.000 electrons.

  Input geometry:
  | No unit cell requested.
  | Atomic structure:
  |       Atom                x [A]            y [A]            z [A]
  |    1: Species S            -0.00000000       -0.00000000        0.95301535
  |    2: Species S            -0.00000000        0.00000000       -0.95301535


  Finished reading input file 'control.in'.


------------------------------------------------------------
          Reading geometry description geometry.in.
------------------------------------------------------------

  Consistency checks for stacksize environment parameter are next.

  | Maximum stacksize for task 0: unlimited
  | Maximum stacksize for task 1: unlimited
  | Maximum stacksize for task 2: unlimited
  | Maximum stacksize for task 3: unlimited
  | Maximum stacksize for task 4: unlimited
  | Maximum stacksize for task 5: unlimited
  | Maximum stacksize for task 6: unlimited
  | Maximum stacksize for task 7: unlimited
  | Maximum stacksize for task 8: unlimited
  | Maximum stacksize for task 9: unlimited
  | Maximum stacksize for task 10: unlimited
  | Maximum stacksize for task 11: unlimited
  | Maximum stacksize for task 12: unlimited
  | Maximum stacksize for task 13: unlimited
  | Maximum stacksize for task 14: unlimited
  | Maximum stacksize for task 15: unlimited
  | Maximum stacksize for task 16: unlimited
  | Maximum stacksize for task 17: unlimited
  | Maximum stacksize for task 18: unlimited
  | Maximum stacksize for task 19: unlimited
  | Maximum stacksize for task 20: unlimited
  | Maximum stacksize for task 21: unlimited
  | Maximum stacksize for task 22: unlimited
  | Maximum stacksize for task 23: unlimited
  | Maximum stacksize for task 24: unlimited
  | Maximum stacksize for task 25: unlimited
  | Maximum stacksize for task 26: unlimited
  | Maximum stacksize for task 27: unlimited
  | Maximum stacksize for task 28: unlimited
  | Maximum stacksize for task 29: unlimited
  | Maximum stacksize for task 30: unlimited
  | Maximum stacksize for task 31: unlimited
  | Maximum stacksize for task 32: unlimited
  | Maximum stacksize for task 33: unlimited
  | Maximum stacksize for task 34: unlimited
  | Maximum stacksize for task 35: unlimited
  | Maximum stacksize for task 36: unlimited
  | Maximum stacksize for task 37: unlimited
  | Maximum stacksize for task 38: unlimited
  | Maximum stacksize for task 39: unlimited
  | Maximum stacksize for task 40: unlimited
  | Maximum stacksize for task 41: unlimited
  | Maximum stacksize for task 42: unlimited
  | Maximum stacksize for task 43: unlimited
  | Maximum stacksize for task 44: unlimited
  | Maximum stacksize for task 45: unlimited
  | Maximum stacksize for task 46: unlimited
  | Maximum stacksize for task 47: unlimited
  | Maximum stacksize for task 48: unlimited
  | Maximum stacksize for task 49: unlimited
  | Maximum stacksize for task 50: unlimited
  | Maximum stacksize for task 51: unlimited
  | Maximum stacksize for task 52: unlimited
  | Maximum stacksize for task 53: unlimited
  | Maximum stacksize for task 54: unlimited
  | Maximum stacksize for task 55: unlimited
  | Maximum stacksize for task 56: unlimited
  | Maximum stacksize for task 57: unlimited
  | Maximum stacksize for task 58: unlimited
  | Maximum stacksize for task 59: unlimited
  | Maximum stacksize for task 60: unlimited
  | Maximum stacksize for task 61: unlimited
  | Maximum stacksize for task 62: unlimited
  | Maximum stacksize for task 63: unlimited
  | Maximum stacksize for task 64: unlimited
  | Maximum stacksize for task 65: unlimited
  | Maximum stacksize for task 66: unlimited
  | Maximum stacksize for task 67: unlimited
  | Maximum stacksize for task 68: unlimited
  | Maximum stacksize for task 69: unlimited
  | Maximum stacksize for task 70: unlimited
  | Maximum stacksize for task 71: unlimited
  | Maximum stacksize for task 72: unlimited
  | Maximum stacksize for task 73: unlimited
  | Maximum stacksize for task 74: unlimited
  | Maximum stacksize for task 75: unlimited
  | Maximum stacksize for task 76: unlimited
  | Maximum stacksize for task 77: unlimited
  | Maximum stacksize for task 78: unlimited
  | Maximum stacksize for task 79: unlimited
  | Maximum stacksize for task 80: unlimited
  | Maximum stacksize for task 81: unlimited
  | Maximum stacksize for task 82: unlimited
  | Maximum stacksize for task 83: unlimited
  | Maximum stacksize for task 84: unlimited
  | Maximum stacksize for task 85: unlimited
  | Maximum stacksize for task 86: unlimited
  | Maximum stacksize for task 87: unlimited
  | Maximum stacksize for task 88: unlimited
  | Maximum stacksize for task 89: unlimited
  | Maximum stacksize for task 90: unlimited
  | Maximum stacksize for task 91: unlimited
  | Maximum stacksize for task 92: unlimited
  | Maximum stacksize for task 93: unlimited
  | Maximum stacksize for task 94: unlimited
  | Maximum stacksize for task 95: unlimited
  | Maximum stacksize for task 96: unlimited
  | Maximum stacksize for task 97: unlimited
  | Maximum stacksize for task 98: unlimited
  | Maximum stacksize for task 99: unlimited
  | Maximum stacksize for task 100: unlimited
  | Maximum stacksize for task 101: unlimited
  | Maximum stacksize for task 102: unlimited
  | Maximum stacksize for task 103: unlimited
  | Maximum stacksize for task 104: unlimited
  | Maximum stacksize for task 105: unlimited
  | Maximum stacksize for task 106: unlimited
  | Maximum stacksize for task 107: unlimited
  | Maximum stacksize for task 108: unlimited
  | Maximum stacksize for task 109: unlimited
  | Maximum stacksize for task 110: unlimited
  | Maximum stacksize for task 111: unlimited
  | Maximum stacksize for task 112: unlimited
  | Maximum stacksize for task 113: unlimited
  | Maximum stacksize for task 114: unlimited
  | Maximum stacksize for task 115: unlimited
  | Maximum stacksize for task 116: unlimited
  | Maximum stacksize for task 117: unlimited
  | Maximum stacksize for task 118: unlimited
  | Maximum stacksize for task 119: unlimited
  | Maximum stacksize for task 120: unlimited
  | Maximum stacksize for task 121: unlimited
  | Maximum stacksize for task 122: unlimited
  | Maximum stacksize for task 123: unlimited
  | Maximum stacksize for task 124: unlimited
  | Maximum stacksize for task 125: unlimited
  | Maximum stacksize for task 126: unlimited
  | Maximum stacksize for task 127: unlimited
  | Maximum stacksize for task 128: unlimited
  | Maximum stacksize for task 129: unlimited
  | Maximum stacksize for task 130: unlimited
  | Maximum stacksize for task 131: unlimited
  | Maximum stacksize for task 132: unlimited
  | Maximum stacksize for task 133: unlimited
  | Maximum stacksize for task 134: unlimited
  | Maximum stacksize for task 135: unlimited
  | Maximum stacksize for task 136: unlimited
  | Maximum stacksize for task 137: unlimited
  | Maximum stacksize for task 138: unlimited
  | Maximum stacksize for task 139: unlimited
  | Maximum stacksize for task 140: unlimited
  | Maximum stacksize for task 141: unlimited
  | Maximum stacksize for task 142: unlimited
  | Maximum stacksize for task 143: unlimited
  | Maximum stacksize for task 144: unlimited
  | Maximum stacksize for task 145: unlimited
  | Maximum stacksize for task 146: unlimited
  | Maximum stacksize for task 147: unlimited
  | Maximum stacksize for task 148: unlimited
  | Maximum stacksize for task 149: unlimited
  | Maximum stacksize for task 150: unlimited
  | Maximum stacksize for task 151: unlimited
  | Maximum stacksize for task 152: unlimited
  | Maximum stacksize for task 153: unlimited
  | Maximum stacksize for task 154: unlimited
  | Maximum stacksize for task 155: unlimited
  | Maximum stacksize for task 156: unlimited
  | Maximum stacksize for task 157: unlimited
  | Maximum stacksize for task 158: unlimited
  | Maximum stacksize for task 159: unlimited
  | Maximum stacksize for task 160: unlimited
  | Maximum stacksize for task 161: unlimited
  | Maximum stacksize for task 162: unlimited
  | Maximum stacksize for task 163: unlimited
  | Maximum stacksize for task 164: unlimited
  | Maximum stacksize for task 165: unlimited
  | Maximum stacksize for task 166: unlimited
  | Maximum stacksize for task 167: unlimited
  | Maximum stacksize for task 168: unlimited
  | Maximum stacksize for task 169: unlimited
  | Maximum stacksize for task 170: unlimited
  | Maximum stacksize for task 171: unlimited
  | Maximum stacksize for task 172: unlimited
  | Maximum stacksize for task 173: unlimited
  | Maximum stacksize for task 174: unlimited
  | Maximum stacksize for task 175: unlimited
  | Maximum stacksize for task 176: unlimited
  | Maximum stacksize for task 177: unlimited
  | Maximum stacksize for task 178: unlimited
  | Maximum stacksize for task 179: unlimited
  | Maximum stacksize for task 180: unlimited
  | Maximum stacksize for task 181: unlimited
  | Maximum stacksize for task 182: unlimited
  | Maximum stacksize for task 183: unlimited
  | Maximum stacksize for task 184: unlimited
  | Maximum stacksize for task 185: unlimited
  | Maximum stacksize for task 186: unlimited
  | Maximum stacksize for task 187: unlimited
  | Maximum stacksize for task 188: unlimited
  | Maximum stacksize for task 189: unlimited
  | Maximum stacksize for task 190: unlimited
  | Maximum stacksize for task 191: unlimited
  | Maximum stacksize for task 192: unlimited
  | Maximum stacksize for task 193: unlimited
  | Maximum stacksize for task 194: unlimited
  | Maximum stacksize for task 195: unlimited
  | Maximum stacksize for task 196: unlimited
  | Maximum stacksize for task 197: unlimited
  | Maximum stacksize for task 198: unlimited
  | Maximum stacksize for task 199: unlimited
  | Maximum stacksize for task 200: unlimited
  | Maximum stacksize for task 201: unlimited
  | Maximum stacksize for task 202: unlimited
  | Maximum stacksize for task 203: unlimited
  | Maximum stacksize for task 204: unlimited
  | Maximum stacksize for task 205: unlimited
  | Maximum stacksize for task 206: unlimited
  | Maximum stacksize for task 207: unlimited
  | Maximum stacksize for task 208: unlimited
  | Maximum stacksize for task 209: unlimited
  | Maximum stacksize for task 210: unlimited
  | Maximum stacksize for task 211: unlimited
  | Maximum stacksize for task 212: unlimited
  | Maximum stacksize for task 213: unlimited
  | Maximum stacksize for task 214: unlimited
  | Maximum stacksize for task 215: unlimited
  | Maximum stacksize for task 216: unlimited
  | Maximum stacksize for task 217: unlimited
  | Maximum stacksize for task 218: unlimited
  | Maximum stacksize for task 219: unlimited
  | Maximum stacksize for task 220: unlimited
  | Maximum stacksize for task 221: unlimited
  | Maximum stacksize for task 222: unlimited
  | Maximum stacksize for task 223: unlimited
  | Maximum stacksize for task 224: unlimited
  | Maximum stacksize for task 225: unlimited
  | Maximum stacksize for task 226: unlimited
  | Maximum stacksize for task 227: unlimited
  | Maximum stacksize for task 228: unlimited
  | Maximum stacksize for task 229: unlimited
  | Maximum stacksize for task 230: unlimited
  | Maximum stacksize for task 231: unlimited
  | Maximum stacksize for task 232: unlimited
  | Maximum stacksize for task 233: unlimited
  | Maximum stacksize for task 234: unlimited
  | Maximum stacksize for task 235: unlimited
  | Maximum stacksize for task 236: unlimited
  | Maximum stacksize for task 237: unlimited
  | Maximum stacksize for task 238: unlimited
  | Maximum stacksize for task 239: unlimited
  | Maximum stacksize for task 240: unlimited
  | Maximum stacksize for task 241: unlimited
  | Maximum stacksize for task 242: unlimited
  | Maximum stacksize for task 243: unlimited
  | Maximum stacksize for task 244: unlimited
  | Maximum stacksize for task 245: unlimited
  | Maximum stacksize for task 246: unlimited
  | Maximum stacksize for task 247: unlimited
  | Maximum stacksize for task 248: unlimited
  | Maximum stacksize for task 249: unlimited
  | Maximum stacksize for task 250: unlimited
  | Maximum stacksize for task 251: unlimited
  | Maximum stacksize for task 252: unlimited
  | Maximum stacksize for task 253: unlimited
  | Maximum stacksize for task 254: unlimited
  | Maximum stacksize for task 255: unlimited
  | Maximum stacksize for task 256: unlimited
  | Maximum stacksize for task 257: unlimited
  | Maximum stacksize for task 258: unlimited
  | Maximum stacksize for task 259: unlimited
  | Maximum stacksize for task 260: unlimited
  | Maximum stacksize for task 261: unlimited
  | Maximum stacksize for task 262: unlimited
  | Maximum stacksize for task 263: unlimited
  | Maximum stacksize for task 264: unlimited
  | Maximum stacksize for task 265: unlimited
  | Maximum stacksize for task 266: unlimited
  | Maximum stacksize for task 267: unlimited
  | Maximum stacksize for task 268: unlimited
  | Maximum stacksize for task 269: unlimited
  | Maximum stacksize for task 270: unlimited
  | Maximum stacksize for task 271: unlimited
  | Maximum stacksize for task 272: unlimited
  | Maximum stacksize for task 273: unlimited
  | Maximum stacksize for task 274: unlimited
  | Maximum stacksize for task 275: unlimited
  | Maximum stacksize for task 276: unlimited
  | Maximum stacksize for task 277: unlimited
  | Maximum stacksize for task 278: unlimited
  | Maximum stacksize for task 279: unlimited
  | Maximum stacksize for task 280: unlimited
  | Maximum stacksize for task 281: unlimited
  | Maximum stacksize for task 282: unlimited
  | Maximum stacksize for task 283: unlimited
  | Maximum stacksize for task 284: unlimited
  | Maximum stacksize for task 285: unlimited
  | Maximum stacksize for task 286: unlimited
  | Maximum stacksize for task 287: unlimited
  | Maximum stacksize for task 288: unlimited
  | Maximum stacksize for task 289: unlimited
  | Maximum stacksize for task 290: unlimited
  | Maximum stacksize for task 291: unlimited
  | Maximum stacksize for task 292: unlimited
  | Maximum stacksize for task 293: unlimited
  | Maximum stacksize for task 294: unlimited
  | Maximum stacksize for task 295: unlimited
  | Maximum stacksize for task 296: unlimited
  | Maximum stacksize for task 297: unlimited
  | Maximum stacksize for task 298: unlimited
  | Maximum stacksize for task 299: unlimited
  | Maximum stacksize for task 300: unlimited
  | Maximum stacksize for task 301: unlimited
  | Maximum stacksize for task 302: unlimited
  | Maximum stacksize for task 303: unlimited
  | Maximum stacksize for task 304: unlimited
  | Maximum stacksize for task 305: unlimited
  | Maximum stacksize for task 306: unlimited
  | Maximum stacksize for task 307: unlimited
  | Maximum stacksize for task 308: unlimited
  | Maximum stacksize for task 309: unlimited
  | Maximum stacksize for task 310: unlimited
  | Maximum stacksize for task 311: unlimited
  | Maximum stacksize for task 312: unlimited
  | Maximum stacksize for task 313: unlimited
  | Maximum stacksize for task 314: unlimited
  | Maximum stacksize for task 315: unlimited
  | Maximum stacksize for task 316: unlimited
  | Maximum stacksize for task 317: unlimited
  | Maximum stacksize for task 318: unlimited
  | Maximum stacksize for task 319: unlimited
  | Maximum stacksize for task 320: unlimited
  | Maximum stacksize for task 321: unlimited
  | Maximum stacksize for task 322: unlimited
  | Maximum stacksize for task 323: unlimited
  | Maximum stacksize for task 324: unlimited
  | Maximum stacksize for task 325: unlimited
  | Maximum stacksize for task 326: unlimited
  | Maximum stacksize for task 327: unlimited
  | Maximum stacksize for task 328: unlimited
  | Maximum stacksize for task 329: unlimited
  | Maximum stacksize for task 330: unlimited
  | Maximum stacksize for task 331: unlimited
  | Maximum stacksize for task 332: unlimited
  | Maximum stacksize for task 333: unlimited
  | Maximum stacksize for task 334: unlimited
  | Maximum stacksize for task 335: unlimited
  | Maximum stacksize for task 336: unlimited
  | Maximum stacksize for task 337: unlimited
  | Maximum stacksize for task 338: unlimited
  | Maximum stacksize for task 339: unlimited
  | Maximum stacksize for task 340: unlimited
  | Maximum stacksize for task 341: unlimited
  | Maximum stacksize for task 342: unlimited
  | Maximum stacksize for task 343: unlimited
  | Maximum stacksize for task 344: unlimited
  | Maximum stacksize for task 345: unlimited
  | Maximum stacksize for task 346: unlimited
  | Maximum stacksize for task 347: unlimited
  | Maximum stacksize for task 348: unlimited
  | Maximum stacksize for task 349: unlimited
  | Maximum stacksize for task 350: unlimited
  | Maximum stacksize for task 351: unlimited
  | Maximum stacksize for task 352: unlimited
  | Maximum stacksize for task 353: unlimited
  | Maximum stacksize for task 354: unlimited
  | Maximum stacksize for task 355: unlimited
  | Maximum stacksize for task 356: unlimited
  | Maximum stacksize for task 357: unlimited
  | Maximum stacksize for task 358: unlimited
  | Maximum stacksize for task 359: unlimited
  | Maximum stacksize for task 360: unlimited
  | Maximum stacksize for task 361: unlimited
  | Maximum stacksize for task 362: unlimited
  | Maximum stacksize for task 363: unlimited
  | Maximum stacksize for task 364: unlimited
  | Maximum stacksize for task 365: unlimited
  | Maximum stacksize for task 366: unlimited
  | Maximum stacksize for task 367: unlimited
  | Maximum stacksize for task 368: unlimited
  | Maximum stacksize for task 369: unlimited
  | Maximum stacksize for task 370: unlimited
  | Maximum stacksize for task 371: unlimited
  | Maximum stacksize for task 372: unlimited
  | Maximum stacksize for task 373: unlimited
  | Maximum stacksize for task 374: unlimited
  | Maximum stacksize for task 375: unlimited
  | Maximum stacksize for task 376: unlimited
  | Maximum stacksize for task 377: unlimited
  | Maximum stacksize for task 378: unlimited
  | Maximum stacksize for task 379: unlimited
  | Maximum stacksize for task 380: unlimited
  | Maximum stacksize for task 381: unlimited
  | Maximum stacksize for task 382: unlimited
  | Maximum stacksize for task 383: unlimited
  | Maximum stacksize for task 384: unlimited
  | Maximum stacksize for task 385: unlimited
  | Maximum stacksize for task 386: unlimited
  | Maximum stacksize for task 387: unlimited
  | Maximum stacksize for task 388: unlimited
  | Maximum stacksize for task 389: unlimited
  | Maximum stacksize for task 390: unlimited
  | Maximum stacksize for task 391: unlimited
  | Maximum stacksize for task 392: unlimited
  | Maximum stacksize for task 393: unlimited
  | Maximum stacksize for task 394: unlimited
  | Maximum stacksize for task 395: unlimited
  | Maximum stacksize for task 396: unlimited
  | Maximum stacksize for task 397: unlimited
  | Maximum stacksize for task 398: unlimited
  | Maximum stacksize for task 399: unlimited
  | Maximum stacksize for task 400: unlimited
  | Maximum stacksize for task 401: unlimited
  | Maximum stacksize for task 402: unlimited
  | Maximum stacksize for task 403: unlimited
  | Maximum stacksize for task 404: unlimited
  | Maximum stacksize for task 405: unlimited
  | Maximum stacksize for task 406: unlimited
  | Maximum stacksize for task 407: unlimited
  | Maximum stacksize for task 408: unlimited
  | Maximum stacksize for task 409: unlimited
  | Maximum stacksize for task 410: unlimited
  | Maximum stacksize for task 411: unlimited
  | Maximum stacksize for task 412: unlimited
  | Maximum stacksize for task 413: unlimited
  | Maximum stacksize for task 414: unlimited
  | Maximum stacksize for task 415: unlimited
  | Maximum stacksize for task 416: unlimited
  | Maximum stacksize for task 417: unlimited
  | Maximum stacksize for task 418: unlimited
  | Maximum stacksize for task 419: unlimited
  | Maximum stacksize for task 420: unlimited
  | Maximum stacksize for task 421: unlimited
  | Maximum stacksize for task 422: unlimited
  | Maximum stacksize for task 423: unlimited
  | Maximum stacksize for task 424: unlimited
  | Maximum stacksize for task 425: unlimited
  | Maximum stacksize for task 426: unlimited
  | Maximum stacksize for task 427: unlimited
  | Maximum stacksize for task 428: unlimited
  | Maximum stacksize for task 429: unlimited
  | Maximum stacksize for task 430: unlimited
  | Maximum stacksize for task 431: unlimited
  | Maximum stacksize for task 432: unlimited
  | Maximum stacksize for task 433: unlimited
  | Maximum stacksize for task 434: unlimited
  | Maximum stacksize for task 435: unlimited
  | Maximum stacksize for task 436: unlimited
  | Maximum stacksize for task 437: unlimited
  | Maximum stacksize for task 438: unlimited
  | Maximum stacksize for task 439: unlimited
  | Maximum stacksize for task 440: unlimited
  | Maximum stacksize for task 441: unlimited
  | Maximum stacksize for task 442: unlimited
  | Maximum stacksize for task 443: unlimited
  | Maximum stacksize for task 444: unlimited
  | Maximum stacksize for task 445: unlimited
  | Maximum stacksize for task 446: unlimited
  | Maximum stacksize for task 447: unlimited
  | Maximum stacksize for task 448: unlimited
  | Maximum stacksize for task 449: unlimited
  | Maximum stacksize for task 450: unlimited
  | Maximum stacksize for task 451: unlimited
  | Maximum stacksize for task 452: unlimited
  | Maximum stacksize for task 453: unlimited
  | Maximum stacksize for task 454: unlimited
  | Maximum stacksize for task 455: unlimited
  | Maximum stacksize for task 456: unlimited
  | Maximum stacksize for task 457: unlimited
  | Maximum stacksize for task 458: unlimited
  | Maximum stacksize for task 459: unlimited
  | Maximum stacksize for task 460: unlimited
  | Maximum stacksize for task 461: unlimited
  | Maximum stacksize for task 462: unlimited
  | Maximum stacksize for task 463: unlimited
  | Maximum stacksize for task 464: unlimited
  | Maximum stacksize for task 465: unlimited
  | Maximum stacksize for task 466: unlimited
  | Maximum stacksize for task 467: unlimited
  | Maximum stacksize for task 468: unlimited
  | Maximum stacksize for task 469: unlimited
  | Maximum stacksize for task 470: unlimited
  | Maximum stacksize for task 471: unlimited
  | Maximum stacksize for task 472: unlimited
  | Maximum stacksize for task 473: unlimited
  | Maximum stacksize for task 474: unlimited
  | Maximum stacksize for task 475: unlimited
  | Maximum stacksize for task 476: unlimited
  | Maximum stacksize for task 477: unlimited
  | Maximum stacksize for task 478: unlimited
  | Maximum stacksize for task 479: unlimited
  | Maximum stacksize for task 480: unlimited
  | Maximum stacksize for task 481: unlimited
  | Maximum stacksize for task 482: unlimited
  | Maximum stacksize for task 483: unlimited
  | Maximum stacksize for task 484: unlimited
  | Maximum stacksize for task 485: unlimited
  | Maximum stacksize for task 486: unlimited
  | Maximum stacksize for task 487: unlimited
  | Maximum stacksize for task 488: unlimited
  | Maximum stacksize for task 489: unlimited
  | Maximum stacksize for task 490: unlimited
  | Maximum stacksize for task 491: unlimited
  | Maximum stacksize for task 492: unlimited
  | Maximum stacksize for task 493: unlimited
  | Maximum stacksize for task 494: unlimited
  | Maximum stacksize for task 495: unlimited
  | Maximum stacksize for task 496: unlimited
  | Maximum stacksize for task 497: unlimited
  | Maximum stacksize for task 498: unlimited
  | Maximum stacksize for task 499: unlimited
  | Maximum stacksize for task 500: unlimited
  | Maximum stacksize for task 501: unlimited
  | Maximum stacksize for task 502: unlimited
  | Maximum stacksize for task 503: unlimited
  | Maximum stacksize for task 504: unlimited
  | Maximum stacksize for task 505: unlimited
  | Maximum stacksize for task 506: unlimited
  | Maximum stacksize for task 507: unlimited
  | Maximum stacksize for task 508: unlimited
  | Maximum stacksize for task 509: unlimited
  | Maximum stacksize for task 510: unlimited
  | Maximum stacksize for task 511: unlimited
  | Current stacksize for task 0: unlimited
  | Current stacksize for task 1: unlimited
  | Current stacksize for task 2: unlimited
  | Current stacksize for task 3: unlimited
  | Current stacksize for task 4: unlimited
  | Current stacksize for task 5: unlimited
  | Current stacksize for task 6: unlimited
  | Current stacksize for task 7: unlimited
  | Current stacksize for task 8: unlimited
  | Current stacksize for task 9: unlimited
  | Current stacksize for task 10: unlimited
  | Current stacksize for task 11: unlimited
  | Current stacksize for task 12: unlimited
  | Current stacksize for task 13: unlimited
  | Current stacksize for task 14: unlimited
  | Current stacksize for task 15: unlimited
  | Current stacksize for task 16: unlimited
  | Current stacksize for task 17: unlimited
  | Current stacksize for task 18: unlimited
  | Current stacksize for task 19: unlimited
  | Current stacksize for task 20: unlimited
  | Current stacksize for task 21: unlimited
  | Current stacksize for task 22: unlimited
  | Current stacksize for task 23: unlimited
  | Current stacksize for task 24: unlimited
  | Current stacksize for task 25: unlimited
  | Current stacksize for task 26: unlimited
  | Current stacksize for task 27: unlimited
  | Current stacksize for task 28: unlimited
  | Current stacksize for task 29: unlimited
  | Current stacksize for task 30: unlimited
  | Current stacksize for task 31: unlimited
  | Current stacksize for task 32: unlimited
  | Current stacksize for task 33: unlimited
  | Current stacksize for task 34: unlimited
  | Current stacksize for task 35: unlimited
  | Current stacksize for task 36: unlimited
  | Current stacksize for task 37: unlimited
  | Current stacksize for task 38: unlimited
  | Current stacksize for task 39: unlimited
  | Current stacksize for task 40: unlimited
  | Current stacksize for task 41: unlimited
  | Current stacksize for task 42: unlimited
  | Current stacksize for task 43: unlimited
  | Current stacksize for task 44: unlimited
  | Current stacksize for task 45: unlimited
  | Current stacksize for task 46: unlimited
  | Current stacksize for task 47: unlimited
  | Current stacksize for task 48: unlimited
  | Current stacksize for task 49: unlimited
  | Current stacksize for task 50: unlimited
  | Current stacksize for task 51: unlimited
  | Current stacksize for task 52: unlimited
  | Current stacksize for task 53: unlimited
  | Current stacksize for task 54: unlimited
  | Current stacksize for task 55: unlimited
  | Current stacksize for task 56: unlimited
  | Current stacksize for task 57: unlimited
  | Current stacksize for task 58: unlimited
  | Current stacksize for task 59: unlimited
  | Current stacksize for task 60: unlimited
  | Current stacksize for task 61: unlimited
  | Current stacksize for task 62: unlimited
  | Current stacksize for task 63: unlimited
  | Current stacksize for task 64: unlimited
  | Current stacksize for task 65: unlimited
  | Current stacksize for task 66: unlimited
  | Current stacksize for task 67: unlimited
  | Current stacksize for task 68: unlimited
  | Current stacksize for task 69: unlimited
  | Current stacksize for task 70: unlimited
  | Current stacksize for task 71: unlimited
  | Current stacksize for task 72: unlimited
  | Current stacksize for task 73: unlimited
  | Current stacksize for task 74: unlimited
  | Current stacksize for task 75: unlimited
  | Current stacksize for task 76: unlimited
  | Current stacksize for task 77: unlimited
  | Current stacksize for task 78: unlimited
  | Current stacksize for task 79: unlimited
  | Current stacksize for task 80: unlimited
  | Current stacksize for task 81: unlimited
  | Current stacksize for task 82: unlimited
  | Current stacksize for task 83: unlimited
  | Current stacksize for task 84: unlimited
  | Current stacksize for task 85: unlimited
  | Current stacksize for task 86: unlimited
  | Current stacksize for task 87: unlimited
  | Current stacksize for task 88: unlimited
  | Current stacksize for task 89: unlimited
  | Current stacksize for task 90: unlimited
  | Current stacksize for task 91: unlimited
  | Current stacksize for task 92: unlimited
  | Current stacksize for task 93: unlimited
  | Current stacksize for task 94: unlimited
  | Current stacksize for task 95: unlimited
  | Current stacksize for task 96: unlimited
  | Current stacksize for task 97: unlimited
  | Current stacksize for task 98: unlimited
  | Current stacksize for task 99: unlimited
  | Current stacksize for task 100: unlimited
  | Current stacksize for task 101: unlimited
  | Current stacksize for task 102: unlimited
  | Current stacksize for task 103: unlimited
  | Current stacksize for task 104: unlimited
  | Current stacksize for task 105: unlimited
  | Current stacksize for task 106: unlimited
  | Current stacksize for task 107: unlimited
  | Current stacksize for task 108: unlimited
  | Current stacksize for task 109: unlimited
  | Current stacksize for task 110: unlimited
  | Current stacksize for task 111: unlimited
  | Current stacksize for task 112: unlimited
  | Current stacksize for task 113: unlimited
  | Current stacksize for task 114: unlimited
  | Current stacksize for task 115: unlimited
  | Current stacksize for task 116: unlimited
  | Current stacksize for task 117: unlimited
  | Current stacksize for task 118: unlimited
  | Current stacksize for task 119: unlimited
  | Current stacksize for task 120: unlimited
  | Current stacksize for task 121: unlimited
  | Current stacksize for task 122: unlimited
  | Current stacksize for task 123: unlimited
  | Current stacksize for task 124: unlimited
  | Current stacksize for task 125: unlimited
  | Current stacksize for task 126: unlimited
  | Current stacksize for task 127: unlimited
  | Current stacksize for task 128: unlimited
  | Current stacksize for task 129: unlimited
  | Current stacksize for task 130: unlimited
  | Current stacksize for task 131: unlimited
  | Current stacksize for task 132: unlimited
  | Current stacksize for task 133: unlimited
  | Current stacksize for task 134: unlimited
  | Current stacksize for task 135: unlimited
  | Current stacksize for task 136: unlimited
  | Current stacksize for task 137: unlimited
  | Current stacksize for task 138: unlimited
  | Current stacksize for task 139: unlimited
  | Current stacksize for task 140: unlimited
  | Current stacksize for task 141: unlimited
  | Current stacksize for task 142: unlimited
  | Current stacksize for task 143: unlimited
  | Current stacksize for task 144: unlimited
  | Current stacksize for task 145: unlimited
  | Current stacksize for task 146: unlimited
  | Current stacksize for task 147: unlimited
  | Current stacksize for task 148: unlimited
  | Current stacksize for task 149: unlimited
  | Current stacksize for task 150: unlimited
  | Current stacksize for task 151: unlimited
  | Current stacksize for task 152: unlimited
  | Current stacksize for task 153: unlimited
  | Current stacksize for task 154: unlimited
  | Current stacksize for task 155: unlimited
  | Current stacksize for task 156: unlimited
  | Current stacksize for task 157: unlimited
  | Current stacksize for task 158: unlimited
  | Current stacksize for task 159: unlimited
  | Current stacksize for task 160: unlimited
  | Current stacksize for task 161: unlimited
  | Current stacksize for task 162: unlimited
  | Current stacksize for task 163: unlimited
  | Current stacksize for task 164: unlimited
  | Current stacksize for task 165: unlimited
  | Current stacksize for task 166: unlimited
  | Current stacksize for task 167: unlimited
  | Current stacksize for task 168: unlimited
  | Current stacksize for task 169: unlimited
  | Current stacksize for task 170: unlimited
  | Current stacksize for task 171: unlimited
  | Current stacksize for task 172: unlimited
  | Current stacksize for task 173: unlimited
  | Current stacksize for task 174: unlimited
  | Current stacksize for task 175: unlimited
  | Current stacksize for task 176: unlimited
  | Current stacksize for task 177: unlimited
  | Current stacksize for task 178: unlimited
  | Current stacksize for task 179: unlimited
  | Current stacksize for task 180: unlimited
  | Current stacksize for task 181: unlimited
  | Current stacksize for task 182: unlimited
  | Current stacksize for task 183: unlimited
  | Current stacksize for task 184: unlimited
  | Current stacksize for task 185: unlimited
  | Current stacksize for task 186: unlimited
  | Current stacksize for task 187: unlimited
  | Current stacksize for task 188: unlimited
  | Current stacksize for task 189: unlimited
  | Current stacksize for task 190: unlimited
  | Current stacksize for task 191: unlimited
  | Current stacksize for task 192: unlimited
  | Current stacksize for task 193: unlimited
  | Current stacksize for task 194: unlimited
  | Current stacksize for task 195: unlimited
  | Current stacksize for task 196: unlimited
  | Current stacksize for task 197: unlimited
  | Current stacksize for task 198: unlimited
  | Current stacksize for task 199: unlimited
  | Current stacksize for task 200: unlimited
  | Current stacksize for task 201: unlimited
  | Current stacksize for task 202: unlimited
  | Current stacksize for task 203: unlimited
  | Current stacksize for task 204: unlimited
  | Current stacksize for task 205: unlimited
  | Current stacksize for task 206: unlimited
  | Current stacksize for task 207: unlimited
  | Current stacksize for task 208: unlimited
  | Current stacksize for task 209: unlimited
  | Current stacksize for task 210: unlimited
  | Current stacksize for task 211: unlimited
  | Current stacksize for task 212: unlimited
  | Current stacksize for task 213: unlimited
  | Current stacksize for task 214: unlimited
  | Current stacksize for task 215: unlimited
  | Current stacksize for task 216: unlimited
  | Current stacksize for task 217: unlimited
  | Current stacksize for task 218: unlimited
  | Current stacksize for task 219: unlimited
  | Current stacksize for task 220: unlimited
  | Current stacksize for task 221: unlimited
  | Current stacksize for task 222: unlimited
  | Current stacksize for task 223: unlimited
  | Current stacksize for task 224: unlimited
  | Current stacksize for task 225: unlimited
  | Current stacksize for task 226: unlimited
  | Current stacksize for task 227: unlimited
  | Current stacksize for task 228: unlimited
  | Current stacksize for task 229: unlimited
  | Current stacksize for task 230: unlimited
  | Current stacksize for task 231: unlimited
  | Current stacksize for task 232: unlimited
  | Current stacksize for task 233: unlimited
  | Current stacksize for task 234: unlimited
  | Current stacksize for task 235: unlimited
  | Current stacksize for task 236: unlimited
  | Current stacksize for task 237: unlimited
  | Current stacksize for task 238: unlimited
  | Current stacksize for task 239: unlimited
  | Current stacksize for task 240: unlimited
  | Current stacksize for task 241: unlimited
  | Current stacksize for task 242: unlimited
  | Current stacksize for task 243: unlimited
  | Current stacksize for task 244: unlimited
  | Current stacksize for task 245: unlimited
  | Current stacksize for task 246: unlimited
  | Current stacksize for task 247: unlimited
  | Current stacksize for task 248: unlimited
  | Current stacksize for task 249: unlimited
  | Current stacksize for task 250: unlimited
  | Current stacksize for task 251: unlimited
  | Current stacksize for task 252: unlimited
  | Current stacksize for task 253: unlimited
  | Current stacksize for task 254: unlimited
  | Current stacksize for task 255: unlimited
  | Current stacksize for task 256: unlimited
  | Current stacksize for task 257: unlimited
  | Current stacksize for task 258: unlimited
  | Current stacksize for task 259: unlimited
  | Current stacksize for task 260: unlimited
  | Current stacksize for task 261: unlimited
  | Current stacksize for task 262: unlimited
  | Current stacksize for task 263: unlimited
  | Current stacksize for task 264: unlimited
  | Current stacksize for task 265: unlimited
  | Current stacksize for task 266: unlimited
  | Current stacksize for task 267: unlimited
  | Current stacksize for task 268: unlimited
  | Current stacksize for task 269: unlimited
  | Current stacksize for task 270: unlimited
  | Current stacksize for task 271: unlimited
  | Current stacksize for task 272: unlimited
  | Current stacksize for task 273: unlimited
  | Current stacksize for task 274: unlimited
  | Current stacksize for task 275: unlimited
  | Current stacksize for task 276: unlimited
  | Current stacksize for task 277: unlimited
  | Current stacksize for task 278: unlimited
  | Current stacksize for task 279: unlimited
  | Current stacksize for task 280: unlimited
  | Current stacksize for task 281: unlimited
  | Current stacksize for task 282: unlimited
  | Current stacksize for task 283: unlimited
  | Current stacksize for task 284: unlimited
  | Current stacksize for task 285: unlimited
  | Current stacksize for task 286: unlimited
  | Current stacksize for task 287: unlimited
  | Current stacksize for task 288: unlimited
  | Current stacksize for task 289: unlimited
  | Current stacksize for task 290: unlimited
  | Current stacksize for task 291: unlimited
  | Current stacksize for task 292: unlimited
  | Current stacksize for task 293: unlimited
  | Current stacksize for task 294: unlimited
  | Current stacksize for task 295: unlimited
  | Current stacksize for task 296: unlimited
  | Current stacksize for task 297: unlimited
  | Current stacksize for task 298: unlimited
  | Current stacksize for task 299: unlimited
  | Current stacksize for task 300: unlimited
  | Current stacksize for task 301: unlimited
  | Current stacksize for task 302: unlimited
  | Current stacksize for task 303: unlimited
  | Current stacksize for task 304: unlimited
  | Current stacksize for task 305: unlimited
  | Current stacksize for task 306: unlimited
  | Current stacksize for task 307: unlimited
  | Current stacksize for task 308: unlimited
  | Current stacksize for task 309: unlimited
  | Current stacksize for task 310: unlimited
  | Current stacksize for task 311: unlimited
  | Current stacksize for task 312: unlimited
  | Current stacksize for task 313: unlimited
  | Current stacksize for task 314: unlimited
  | Current stacksize for task 315: unlimited
  | Current stacksize for task 316: unlimited
  | Current stacksize for task 317: unlimited
  | Current stacksize for task 318: unlimited
  | Current stacksize for task 319: unlimited
  | Current stacksize for task 320: unlimited
  | Current stacksize for task 321: unlimited
  | Current stacksize for task 322: unlimited
  | Current stacksize for task 323: unlimited
  | Current stacksize for task 324: unlimited
  | Current stacksize for task 325: unlimited
  | Current stacksize for task 326: unlimited
  | Current stacksize for task 327: unlimited
  | Current stacksize for task 328: unlimited
  | Current stacksize for task 329: unlimited
  | Current stacksize for task 330: unlimited
  | Current stacksize for task 331: unlimited
  | Current stacksize for task 332: unlimited
  | Current stacksize for task 333: unlimited
  | Current stacksize for task 334: unlimited
  | Current stacksize for task 335: unlimited
  | Current stacksize for task 336: unlimited
  | Current stacksize for task 337: unlimited
  | Current stacksize for task 338: unlimited
  | Current stacksize for task 339: unlimited
  | Current stacksize for task 340: unlimited
  | Current stacksize for task 341: unlimited
  | Current stacksize for task 342: unlimited
  | Current stacksize for task 343: unlimited
  | Current stacksize for task 344: unlimited
  | Current stacksize for task 345: unlimited
  | Current stacksize for task 346: unlimited
  | Current stacksize for task 347: unlimited
  | Current stacksize for task 348: unlimited
  | Current stacksize for task 349: unlimited
  | Current stacksize for task 350: unlimited
  | Current stacksize for task 351: unlimited
  | Current stacksize for task 352: unlimited
  | Current stacksize for task 353: unlimited
  | Current stacksize for task 354: unlimited
  | Current stacksize for task 355: unlimited
  | Current stacksize for task 356: unlimited
  | Current stacksize for task 357: unlimited
  | Current stacksize for task 358: unlimited
  | Current stacksize for task 359: unlimited
  | Current stacksize for task 360: unlimited
  | Current stacksize for task 361: unlimited
  | Current stacksize for task 362: unlimited
  | Current stacksize for task 363: unlimited
  | Current stacksize for task 364: unlimited
  | Current stacksize for task 365: unlimited
  | Current stacksize for task 366: unlimited
  | Current stacksize for task 367: unlimited
  | Current stacksize for task 368: unlimited
  | Current stacksize for task 369: unlimited
  | Current stacksize for task 370: unlimited
  | Current stacksize for task 371: unlimited
  | Current stacksize for task 372: unlimited
  | Current stacksize for task 373: unlimited
  | Current stacksize for task 374: unlimited
  | Current stacksize for task 375: unlimited
  | Current stacksize for task 376: unlimited
  | Current stacksize for task 377: unlimited
  | Current stacksize for task 378: unlimited
  | Current stacksize for task 379: unlimited
  | Current stacksize for task 380: unlimited
  | Current stacksize for task 381: unlimited
  | Current stacksize for task 382: unlimited
  | Current stacksize for task 383: unlimited
  | Current stacksize for task 384: unlimited
  | Current stacksize for task 385: unlimited
  | Current stacksize for task 386: unlimited
  | Current stacksize for task 387: unlimited
  | Current stacksize for task 388: unlimited
  | Current stacksize for task 389: unlimited
  | Current stacksize for task 390: unlimited
  | Current stacksize for task 391: unlimited
  | Current stacksize for task 392: unlimited
  | Current stacksize for task 393: unlimited
  | Current stacksize for task 394: unlimited
  | Current stacksize for task 395: unlimited
  | Current stacksize for task 396: unlimited
  | Current stacksize for task 397: unlimited
  | Current stacksize for task 398: unlimited
  | Current stacksize for task 399: unlimited
  | Current stacksize for task 400: unlimited
  | Current stacksize for task 401: unlimited
  | Current stacksize for task 402: unlimited
  | Current stacksize for task 403: unlimited
  | Current stacksize for task 404: unlimited
  | Current stacksize for task 405: unlimited
  | Current stacksize for task 406: unlimited
  | Current stacksize for task 407: unlimited
  | Current stacksize for task 408: unlimited
  | Current stacksize for task 409: unlimited
  | Current stacksize for task 410: unlimited
  | Current stacksize for task 411: unlimited
  | Current stacksize for task 412: unlimited
  | Current stacksize for task 413: unlimited
  | Current stacksize for task 414: unlimited
  | Current stacksize for task 415: unlimited
  | Current stacksize for task 416: unlimited
  | Current stacksize for task 417: unlimited
  | Current stacksize for task 418: unlimited
  | Current stacksize for task 419: unlimited
  | Current stacksize for task 420: unlimited
  | Current stacksize for task 421: unlimited
  | Current stacksize for task 422: unlimited
  | Current stacksize for task 423: unlimited
  | Current stacksize for task 424: unlimited
  | Current stacksize for task 425: unlimited
  | Current stacksize for task 426: unlimited
  | Current stacksize for task 427: unlimited
  | Current stacksize for task 428: unlimited
  | Current stacksize for task 429: unlimited
  | Current stacksize for task 430: unlimited
  | Current stacksize for task 431: unlimited
  | Current stacksize for task 432: unlimited
  | Current stacksize for task 433: unlimited
  | Current stacksize for task 434: unlimited
  | Current stacksize for task 435: unlimited
  | Current stacksize for task 436: unlimited
  | Current stacksize for task 437: unlimited
  | Current stacksize for task 438: unlimited
  | Current stacksize for task 439: unlimited
  | Current stacksize for task 440: unlimited
  | Current stacksize for task 441: unlimited
  | Current stacksize for task 442: unlimited
  | Current stacksize for task 443: unlimited
  | Current stacksize for task 444: unlimited
  | Current stacksize for task 445: unlimited
  | Current stacksize for task 446: unlimited
  | Current stacksize for task 447: unlimited
  | Current stacksize for task 448: unlimited
  | Current stacksize for task 449: unlimited
  | Current stacksize for task 450: unlimited
  | Current stacksize for task 451: unlimited
  | Current stacksize for task 452: unlimited
  | Current stacksize for task 453: unlimited
  | Current stacksize for task 454: unlimited
  | Current stacksize for task 455: unlimited
  | Current stacksize for task 456: unlimited
  | Current stacksize for task 457: unlimited
  | Current stacksize for task 458: unlimited
  | Current stacksize for task 459: unlimited
  | Current stacksize for task 460: unlimited
  | Current stacksize for task 461: unlimited
  | Current stacksize for task 462: unlimited
  | Current stacksize for task 463: unlimited
  | Current stacksize for task 464: unlimited
  | Current stacksize for task 465: unlimited
  | Current stacksize for task 466: unlimited
  | Current stacksize for task 467: unlimited
  | Current stacksize for task 468: unlimited
  | Current stacksize for task 469: unlimited
  | Current stacksize for task 470: unlimited
  | Current stacksize for task 471: unlimited
  | Current stacksize for task 472: unlimited
  | Current stacksize for task 473: unlimited
  | Current stacksize for task 474: unlimited
  | Current stacksize for task 475: unlimited
  | Current stacksize for task 476: unlimited
  | Current stacksize for task 477: unlimited
  | Current stacksize for task 478: unlimited
  | Current stacksize for task 479: unlimited
  | Current stacksize for task 480: unlimited
  | Current stacksize for task 481: unlimited
  | Current stacksize for task 482: unlimited
  | Current stacksize for task 483: unlimited
  | Current stacksize for task 484: unlimited
  | Current stacksize for task 485: unlimited
  | Current stacksize for task 486: unlimited
  | Current stacksize for task 487: unlimited
  | Current stacksize for task 488: unlimited
  | Current stacksize for task 489: unlimited
  | Current stacksize for task 490: unlimited
  | Current stacksize for task 491: unlimited
  | Current stacksize for task 492: unlimited
  | Current stacksize for task 493: unlimited
  | Current stacksize for task 494: unlimited
  | Current stacksize for task 495: unlimited
  | Current stacksize for task 496: unlimited
  | Current stacksize for task 497: unlimited
  | Current stacksize for task 498: unlimited
  | Current stacksize for task 499: unlimited
  | Current stacksize for task 500: unlimited
  | Current stacksize for task 501: unlimited
  | Current stacksize for task 502: unlimited
  | Current stacksize for task 503: unlimited
  | Current stacksize for task 504: unlimited
  | Current stacksize for task 505: unlimited
  | Current stacksize for task 506: unlimited
  | Current stacksize for task 507: unlimited
  | Current stacksize for task 508: unlimited
  | Current stacksize for task 509: unlimited
  | Current stacksize for task 510: unlimited
  | Current stacksize for task 511: unlimited

  Consistency checks for the contents of control.in are next.

  MPI_IN_PLACE appears to work with this MPI implementation.
  | Keeping use_mpi_in_place .true. (see manual).
  Target number of points in a grid batch is not set. Defaulting to  100
  Method for grid partitioning is not set. Defaulting to parallel hash+maxmin partitioning.
  Batch size limit is not set. Defaulting to    200
  By default, will store active basis functions for each batch.
  If in need of memory, prune_basis_once .false. can be used to disable this option.
  communication_type for Hartree potential was not specified.
  Defaulting to calc_hartree .
  Defaulting to Pulay charge density mixer.
  Pulay mixer: Number of relevant iterations not set.
  Defaulting to    8 iterations.
  Pulay mixer: Number of initial linear mixing iterations not set.
  Defaulting to    0 iterations.
  Work space size for distributed Hartree potential not set.
  Defaulting to   0.200000E+03 MB.
  Mixing parameter for charge density mixing has not been set.
  Using default: charge_mix_param =     0.0500.
  The mixing parameter will be adjusted in iteration number     2 of the first full s.c.f. cycle only.
  Algorithm-dependent basis array size parameters:
  | n_max_pulay                         :        8
  Maximum number of self-consistency iterations not provided.
  Presetting  1000 iterations.
  Presetting      1001 iterations before the initial mixing cycle
  is restarted anyway using the sc_init_iter criterion / keyword.
  Presetting a factor      1.000 between actual scf density residual
  and density convergence criterion sc_accuracy_rho below which sc_init_iter
  takes no effect.
  Calculation of forces was not defined in control.in. No forces will be calculated.
  Geometry relaxation not requested: no relaxation will be performed.
  No accuracy limit for integral partition fn. given. Defaulting to  0.1000E-14.
  No threshold value for u(r) in integrations given. Defaulting to  0.1000E-05.
  No occupation type (smearing scheme) given. Defaulting to Gaussian broadening, width =  0.1000E-01 eV.
  The width will be adjusted in iteration number     2 of the first full s.c.f. cycle only.
  S.C.F. convergence parameters will be adjusted in iteration number     2 of the first full s.c.f. cycle only.
  No accuracy for occupation numbers given. Defaulting to  0.1000E-12.
  No threshold value for occupation numbers given. Defaulting to  0.0000E+00.
  No accuracy for fermi level given. Defaulting to  0.1000E-19.
  Maximum # of iterations to find E_F not set. Defaulting to  200.
  Preferred method for the eigenvalue solver ('KS_method') not specified in 'control.in'.
  Calling BLACS routine to test compilation state
  Since ScaLAPACK support is enabled, defaulting to ELPA (via ELSI).
  Will not use alltoall communication since running on < 1024 CPUs.
  Threshold for basis singularities not set.
  Default threshold for basis singularities:  0.1000E-04
  partition_type (choice of integration weights) for integrals was not specified.
  | Using a version of the partition function of Stratmann and coworkers ('stratmann_sparse').
  | At each grid point, the set of atoms used to build the partition table is smoothly restricted to
  | only those atoms whose free-atom density would be non-zero at that grid point.
  Partitioning for Hartree potential was not defined. Using partition_type for integrals.
  | Adjusted default value of keyword multip_moments_threshold to:       0.10000000E-11
  | This value may affect high angular momentum components of the Hartree potential in periodic systems.
  No q(lm)/r^(l+1) cutoff set for long-range Hartree potential.
  | Using default value of  0.100000E-09 .
  | Verify using the multipole_threshold keyword.
  Defaulting to new monopole extrapolation.
  Density update method: automatic selection selected.
  Charge integration errors on the 3D integration grid will be compensated
  by explicit normalization and distribution of residual charges.
  Use the "compensate_multipole_errors" flag to change this behaviour.
  Set 'collect_eigenvectors' to be '.true.' for use_density_matrix .false.

  Consistency checks for the contents of geometry.in are next.

  Number of empty states per atom not set in control.in - providing a guess from actual geometry.
  | Total number of empty states used during s.c.f. cycle:        6
  If you use a very high smearing, use empty_states (per atom!) in control.in to increase this value.

  Structure-dependent array size parameters: 
  | Maximum number of distinct radial functions  :       11
  | Maximum number of basis functions            :       78
  | Number of Kohn-Sham states (occupied + empty):       22
------------------------------------------------------------

------------------------------------------------------------
          Preparing all fixed parts of the calculation.
------------------------------------------------------------
  Determining machine precision:
     2.2250738585072014E-308
  Setting up grids for atomic and cluster calculations.

  Creating wave function, potential, and density for free atoms.
  Runtime choices for atomic solver:
  | atomic solver xc        : PW-LDA
  | compute density gradient: 1
  | compute kinetic density : T

  Species: S

  List of occupied orbitals and eigenvalues:
    n    l              occ      energy [Ha]    energy [eV]
    1    0           2.0000       -88.357216     -2404.3222
    2    0           2.0000        -7.747963      -210.8328
    3    0           2.0000        -0.634591       -17.2681
    2    1           6.0000        -5.752228      -156.5261
    3    1           4.0000        -0.260726        -7.0947


  Adding cutoff potential to free-atom effective potential.
  Creating fixed part of basis set: Ionic, confined, hydrogenic.

  S                    ion:

  List of free ionic orbitals and eigenvalues:
    n    l      energy [Ha]    energy [eV]
    1    0       -89.377212     -2432.0777
    2    0        -8.738531      -237.7875
    3    0        -1.470337       -40.0099
    2    1        -6.744772      -183.5346
    3    1        -1.051741       -28.6193


  List of ionic basis orbitals and eigenvalues:
    n    l      energy [Ha]    energy [eV]    outer radius [A]
    3    2        -0.499358       -13.5882       5.386362
    3    0        -1.470331       -40.0097       3.967934


  S                    hydrogenic:

  List of hydrogenic basis orbitals: 
    n    l      effective z      eigenvalue [eV]  inner max. [A]     outer max. [A]     outer radius [A]   
    2    1         1.800000       -11.0118           1.168531           1.168531           5.452614
    4    3         7.000000       -41.6672           1.212182           1.212182           5.066981
    4    2         6.200000       -32.6848           0.582121           1.814567           5.386362
    5    4        10.800000       -63.4785           1.227092           1.227092           4.766538

  Creating atomic-like basis functions for current effective potential.

  Species S                   :

  List of atomic basis orbitals and eigenvalues:
    n    l      energy [Ha]    energy [eV]    outer radius [A]
    1    0       -88.357216     -2404.3222       0.682391
    2    0        -7.747963      -210.8328       2.317169
    3    0        -0.634591       -17.2681       5.256262
    2    1        -5.752228      -156.5261       2.586670
    3    1        -0.260726        -7.0947       5.386362

  Assembling full basis from fixed parts.
  | Species S :   atomic orbital   1 s accepted.
  | Species S :   atomic orbital   2 s accepted.
  | Species S :    ionic orbital   3 s accepted.
  | Species S :   atomic orbital   3 s accepted.
  | Species S :   atomic orbital   2 p accepted.
  | Species S :   atomic orbital   3 p accepted.
  | Species S :    hydro orbital   2 p accepted.
  | Species S :    ionic orbital   3 d accepted.
  | Species S :    hydro orbital   4 d accepted.
  | Species S :    hydro orbital   4 f accepted.
  | Species S :    hydro orbital   5 g accepted.

  Basis size parameters after reduction:
  | Total number of radial functions:       11
  | Total number of basis functions :       78

  Per-task memory consumption for arrays in subroutine allocate_ext:
  |           3.823628MB.
  Testing on-site integration grid accuracy.
  |  Species  Function  <phi|h_atom|phi> (log., in eV)  <phi|h_atom|phi> (rad., in eV)
           1        1              -2404.3221819234              -2404.3221352217
           1        2               -210.8328114131               -210.8328107803
           1        3                -17.0012896299                -17.0012895367
           1        4                  6.9304307370                  6.9304415534
           1        5               -156.5260975773               -156.5260974422
           1        6                 -7.0949934902                 -7.0949953075
           1        7                  6.7845586895                  6.7844657527
           1        8                  5.9580367750                  5.9580341070
           1        9                 19.1237500368                 19.1237524193
           1       10                 24.5944131756                 24.5944131573
           1       11                 47.4299823117                 47.4299831527

  Preparing densities etc. for the partition functions (integrals / Hartree potential).

  Preparations completed.
  max(cpu_time)          :      0.211 s.
  Wall clock time (cpu1) :      0.461 s.
------------------------------------------------------------

  Initializing index lists of integration centers etc. from given atomic structure:
  | Number of centers in hartree potential         :         2
  | Number of centers in hartree multipole         :         2
  | Number of centers in electron density summation:         2
  | Number of centers in basis integrals           :         2
  | Number of centers in integrals                 :         2
  | Number of centers in hamiltonian               :         2

------------------------------------------------------------
          Begin self-consistency loop: Initialization.

          Date     :  20220914, Time     :  152351.030
------------------------------------------------------------
  * Using 512 tasks for Scalapack Eigenvalue solver.
  Detailed listing of tasks and assigned k-points:
  (for non-periodic systems, the "k-point" denotes an internal label only)
   Task     0 k-point     1 on nid001049
   Task     1 k-point     1 on nid001049
   Task     2 k-point     1 on nid001049
   Task     3 k-point     1 on nid001049
   Task     4 k-point     1 on nid001049
   Task     5 k-point     1 on nid001049
   Task     6 k-point     1 on nid001049
   Task     7 k-point     1 on nid001049
   Task     8 k-point     1 on nid001049
   Task     9 k-point     1 on nid001049
   Task    10 k-point     1 on nid001049
   Task    11 k-point     1 on nid001049
   Task    12 k-point     1 on nid001049
   Task    13 k-point     1 on nid001049
   Task    14 k-point     1 on nid001049
   Task    15 k-point     1 on nid001049
   Task    16 k-point     1 on nid001049
   Task    17 k-point     1 on nid001049
   Task    18 k-point     1 on nid001049
   Task    19 k-point     1 on nid001049
   Task    20 k-point     1 on nid001049
   Task    21 k-point     1 on nid001049
   Task    22 k-point     1 on nid001049
   Task    23 k-point     1 on nid001049
   Task    24 k-point     1 on nid001049
   Task    25 k-point     1 on nid001049
   Task    26 k-point     1 on nid001049
   Task    27 k-point     1 on nid001049
   Task    28 k-point     1 on nid001049
   Task    29 k-point     1 on nid001049
   Task    30 k-point     1 on nid001049
   Task    31 k-point     1 on nid001049
   Task    32 k-point     1 on nid001049
   Task    33 k-point     1 on nid001049
   Task    34 k-point     1 on nid001049
   Task    35 k-point     1 on nid001049
   Task    36 k-point     1 on nid001049
   Task    37 k-point     1 on nid001049
   Task    38 k-point     1 on nid001049
   Task    39 k-point     1 on nid001049
   Task    40 k-point     1 on nid001049
   Task    41 k-point     1 on nid001049
   Task    42 k-point     1 on nid001049
   Task    43 k-point     1 on nid001049
   Task    44 k-point     1 on nid001049
   Task    45 k-point     1 on nid001049
   Task    46 k-point     1 on nid001049
   Task    47 k-point     1 on nid001049
   Task    48 k-point     1 on nid001049
   Task    49 k-point     1 on nid001049
   Task    50 k-point     1 on nid001049
   Task    51 k-point     1 on nid001049
   Task    52 k-point     1 on nid001049
   Task    53 k-point     1 on nid001049
   Task    54 k-point     1 on nid001049
   Task    55 k-point     1 on nid001049
   Task    56 k-point     1 on nid001049
   Task    57 k-point     1 on nid001049
   Task    58 k-point     1 on nid001049
   Task    59 k-point     1 on nid001049
   Task    60 k-point     1 on nid001049
   Task    61 k-point     1 on nid001049
   Task    62 k-point     1 on nid001049
   Task    63 k-point     1 on nid001049
   Task    64 k-point     1 on nid001049
   Task    65 k-point     1 on nid001049
   Task    66 k-point     1 on nid001049
   Task    67 k-point     1 on nid001049
   Task    68 k-point     1 on nid001049
   Task    69 k-point     1 on nid001049
   Task    70 k-point     1 on nid001049
   Task    71 k-point     1 on nid001049
   Task    72 k-point     1 on nid001049
   Task    73 k-point     1 on nid001049
   Task    74 k-point     1 on nid001049
   Task    75 k-point     1 on nid001049
   Task    76 k-point     1 on nid001049
   Task    77 k-point     1 on nid001049
   Task    78 k-point     1 on nid001049
   Task    79 k-point     1 on nid001049
   Task    80 k-point     1 on nid001049
   Task    81 k-point     1 on nid001049
   Task    82 k-point     1 on nid001049
   Task    83 k-point     1 on nid001049
   Task    84 k-point     1 on nid001049
   Task    85 k-point     1 on nid001049
   Task    86 k-point     1 on nid001049
   Task    87 k-point     1 on nid001049
   Task    88 k-point     1 on nid001049
   Task    89 k-point     1 on nid001049
   Task    90 k-point     1 on nid001049
   Task    91 k-point     1 on nid001049
   Task    92 k-point     1 on nid001049
   Task    93 k-point     1 on nid001049
   Task    94 k-point     1 on nid001049
   Task    95 k-point     1 on nid001049
   Task    96 k-point     1 on nid001049
   Task    97 k-point     1 on nid001049
   Task    98 k-point     1 on nid001049
   Task    99 k-point     1 on nid001049
   Task   100 k-point     1 on nid001049
   Task   101 k-point     1 on nid001049
   Task   102 k-point     1 on nid001049
   Task   103 k-point     1 on nid001049
   Task   104 k-point     1 on nid001049
   Task   105 k-point     1 on nid001049
   Task   106 k-point     1 on nid001049
   Task   107 k-point     1 on nid001049
   Task   108 k-point     1 on nid001049
   Task   109 k-point     1 on nid001049
   Task   110 k-point     1 on nid001049
   Task   111 k-point     1 on nid001049
   Task   112 k-point     1 on nid001049
   Task   113 k-point     1 on nid001049
   Task   114 k-point     1 on nid001049
   Task   115 k-point     1 on nid001049
   Task   116 k-point     1 on nid001049
   Task   117 k-point     1 on nid001049
   Task   118 k-point     1 on nid001049
   Task   119 k-point     1 on nid001049
   Task   120 k-point     1 on nid001049
   Task   121 k-point     1 on nid001049
   Task   122 k-point     1 on nid001049
   Task   123 k-point     1 on nid001049
   Task   124 k-point     1 on nid001049
   Task   125 k-point     1 on nid001049
   Task   126 k-point     1 on nid001049
   Task   127 k-point     1 on nid001049
   Task   128 k-point     1 on nid001050
   Task   129 k-point     1 on nid001050
   Task   130 k-point     1 on nid001050
   Task   131 k-point     1 on nid001050
   Task   132 k-point     1 on nid001050
   Task   133 k-point     1 on nid001050
   Task   134 k-point     1 on nid001050
   Task   135 k-point     1 on nid001050
   Task   136 k-point     1 on nid001050
   Task   137 k-point     1 on nid001050
   Task   138 k-point     1 on nid001050
   Task   139 k-point     1 on nid001050
   Task   140 k-point     1 on nid001050
   Task   141 k-point     1 on nid001050
   Task   142 k-point     1 on nid001050
   Task   143 k-point     1 on nid001050
   Task   144 k-point     1 on nid001050
   Task   145 k-point     1 on nid001050
   Task   146 k-point     1 on nid001050
   Task   147 k-point     1 on nid001050
   Task   148 k-point     1 on nid001050
   Task   149 k-point     1 on nid001050
   Task   150 k-point     1 on nid001050
   Task   151 k-point     1 on nid001050
   Task   152 k-point     1 on nid001050
   Task   153 k-point     1 on nid001050
   Task   154 k-point     1 on nid001050
   Task   155 k-point     1 on nid001050
   Task   156 k-point     1 on nid001050
   Task   157 k-point     1 on nid001050
   Task   158 k-point     1 on nid001050
   Task   159 k-point     1 on nid001050
   Task   160 k-point     1 on nid001050
   Task   161 k-point     1 on nid001050
   Task   162 k-point     1 on nid001050
   Task   163 k-point     1 on nid001050
   Task   164 k-point     1 on nid001050
   Task   165 k-point     1 on nid001050
   Task   166 k-point     1 on nid001050
   Task   167 k-point     1 on nid001050
   Task   168 k-point     1 on nid001050
   Task   169 k-point     1 on nid001050
   Task   170 k-point     1 on nid001050
   Task   171 k-point     1 on nid001050
   Task   172 k-point     1 on nid001050
   Task   173 k-point     1 on nid001050
   Task   174 k-point     1 on nid001050
   Task   175 k-point     1 on nid001050
   Task   176 k-point     1 on nid001050
   Task   177 k-point     1 on nid001050
   Task   178 k-point     1 on nid001050
   Task   179 k-point     1 on nid001050
   Task   180 k-point     1 on nid001050
   Task   181 k-point     1 on nid001050
   Task   182 k-point     1 on nid001050
   Task   183 k-point     1 on nid001050
   Task   184 k-point     1 on nid001050
   Task   185 k-point     1 on nid001050
   Task   186 k-point     1 on nid001050
   Task   187 k-point     1 on nid001050
   Task   188 k-point     1 on nid001050
   Task   189 k-point     1 on nid001050
   Task   190 k-point     1 on nid001050
   Task   191 k-point     1 on nid001050
   Task   192 k-point     1 on nid001050
   Task   193 k-point     1 on nid001050
   Task   194 k-point     1 on nid001050
   Task   195 k-point     1 on nid001050
   Task   196 k-point     1 on nid001050
   Task   197 k-point     1 on nid001050
   Task   198 k-point     1 on nid001050
   Task   199 k-point     1 on nid001050
   Task   200 k-point     1 on nid001050
   Task   201 k-point     1 on nid001050
   Task   202 k-point     1 on nid001050
   Task   203 k-point     1 on nid001050
   Task   204 k-point     1 on nid001050
   Task   205 k-point     1 on nid001050
   Task   206 k-point     1 on nid001050
   Task   207 k-point     1 on nid001050
   Task   208 k-point     1 on nid001050
   Task   209 k-point     1 on nid001050
   Task   210 k-point     1 on nid001050
   Task   211 k-point     1 on nid001050
   Task   212 k-point     1 on nid001050
   Task   213 k-point     1 on nid001050
   Task   214 k-point     1 on nid001050
   Task   215 k-point     1 on nid001050
   Task   216 k-point     1 on nid001050
   Task   217 k-point     1 on nid001050
   Task   218 k-point     1 on nid001050
   Task   219 k-point     1 on nid001050
   Task   220 k-point     1 on nid001050
   Task   221 k-point     1 on nid001050
   Task   222 k-point     1 on nid001050
   Task   223 k-point     1 on nid001050
   Task   224 k-point     1 on nid001050
   Task   225 k-point     1 on nid001050
   Task   226 k-point     1 on nid001050
   Task   227 k-point     1 on nid001050
   Task   228 k-point     1 on nid001050
   Task   229 k-point     1 on nid001050
   Task   230 k-point     1 on nid001050
   Task   231 k-point     1 on nid001050
   Task   232 k-point     1 on nid001050
   Task   233 k-point     1 on nid001050
   Task   234 k-point     1 on nid001050
   Task   235 k-point     1 on nid001050
   Task   236 k-point     1 on nid001050
   Task   237 k-point     1 on nid001050
   Task   238 k-point     1 on nid001050
   Task   239 k-point     1 on nid001050
   Task   240 k-point     1 on nid001050
   Task   241 k-point     1 on nid001050
   Task   242 k-point     1 on nid001050
   Task   243 k-point     1 on nid001050
   Task   244 k-point     1 on nid001050
   Task   245 k-point     1 on nid001050
   Task   246 k-point     1 on nid001050
   Task   247 k-point     1 on nid001050
   Task   248 k-point     1 on nid001050
   Task   249 k-point     1 on nid001050
   Task   250 k-point     1 on nid001050
   Task   251 k-point     1 on nid001050
   Task   252 k-point     1 on nid001050
   Task   253 k-point     1 on nid001050
   Task   254 k-point     1 on nid001050
   Task   255 k-point     1 on nid001050
   Task   256 k-point     1 on nid001051
   Task   257 k-point     1 on nid001051
   Task   258 k-point     1 on nid001051
   Task   259 k-point     1 on nid001051
   Task   260 k-point     1 on nid001051
   Task   261 k-point     1 on nid001051
   Task   262 k-point     1 on nid001051
   Task   263 k-point     1 on nid001051
   Task   264 k-point     1 on nid001051
   Task   265 k-point     1 on nid001051
   Task   266 k-point     1 on nid001051
   Task   267 k-point     1 on nid001051
   Task   268 k-point     1 on nid001051
   Task   269 k-point     1 on nid001051
   Task   270 k-point     1 on nid001051
   Task   271 k-point     1 on nid001051
   Task   272 k-point     1 on nid001051
   Task   273 k-point     1 on nid001051
   Task   274 k-point     1 on nid001051
   Task   275 k-point     1 on nid001051
   Task   276 k-point     1 on nid001051
   Task   277 k-point     1 on nid001051
   Task   278 k-point     1 on nid001051
   Task   279 k-point     1 on nid001051
   Task   280 k-point     1 on nid001051
   Task   281 k-point     1 on nid001051
   Task   282 k-point     1 on nid001051
   Task   283 k-point     1 on nid001051
   Task   284 k-point     1 on nid001051
   Task   285 k-point     1 on nid001051
   Task   286 k-point     1 on nid001051
   Task   287 k-point     1 on nid001051
   Task   288 k-point     1 on nid001051
   Task   289 k-point     1 on nid001051
   Task   290 k-point     1 on nid001051
   Task   291 k-point     1 on nid001051
   Task   292 k-point     1 on nid001051
   Task   293 k-point     1 on nid001051
   Task   294 k-point     1 on nid001051
   Task   295 k-point     1 on nid001051
   Task   296 k-point     1 on nid001051
   Task   297 k-point     1 on nid001051
   Task   298 k-point     1 on nid001051
   Task   299 k-point     1 on nid001051
   Task   300 k-point     1 on nid001051
   Task   301 k-point     1 on nid001051
   Task   302 k-point     1 on nid001051
   Task   303 k-point     1 on nid001051
   Task   304 k-point     1 on nid001051
   Task   305 k-point     1 on nid001051
   Task   306 k-point     1 on nid001051
   Task   307 k-point     1 on nid001051
   Task   308 k-point     1 on nid001051
   Task   309 k-point     1 on nid001051
   Task   310 k-point     1 on nid001051
   Task   311 k-point     1 on nid001051
   Task   312 k-point     1 on nid001051
   Task   313 k-point     1 on nid001051
   Task   314 k-point     1 on nid001051
   Task   315 k-point     1 on nid001051
   Task   316 k-point     1 on nid001051
   Task   317 k-point     1 on nid001051
   Task   318 k-point     1 on nid001051
   Task   319 k-point     1 on nid001051
   Task   320 k-point     1 on nid001051
   Task   321 k-point     1 on nid001051
   Task   322 k-point     1 on nid001051
   Task   323 k-point     1 on nid001051
   Task   324 k-point     1 on nid001051
   Task   325 k-point     1 on nid001051
   Task   326 k-point     1 on nid001051
   Task   327 k-point     1 on nid001051
   Task   328 k-point     1 on nid001051
   Task   329 k-point     1 on nid001051
   Task   330 k-point     1 on nid001051
   Task   331 k-point     1 on nid001051
   Task   332 k-point     1 on nid001051
   Task   333 k-point     1 on nid001051
   Task   334 k-point     1 on nid001051
   Task   335 k-point     1 on nid001051
   Task   336 k-point     1 on nid001051
   Task   337 k-point     1 on nid001051
   Task   338 k-point     1 on nid001051
   Task   339 k-point     1 on nid001051
   Task   340 k-point     1 on nid001051
   Task   341 k-point     1 on nid001051
   Task   342 k-point     1 on nid001051
   Task   343 k-point     1 on nid001051
   Task   344 k-point     1 on nid001051
   Task   345 k-point     1 on nid001051
   Task   346 k-point     1 on nid001051
   Task   347 k-point     1 on nid001051
   Task   348 k-point     1 on nid001051
   Task   349 k-point     1 on nid001051
   Task   350 k-point     1 on nid001051
   Task   351 k-point     1 on nid001051
   Task   352 k-point     1 on nid001051
   Task   353 k-point     1 on nid001051
   Task   354 k-point     1 on nid001051
   Task   355 k-point     1 on nid001051
   Task   356 k-point     1 on nid001051
   Task   357 k-point     1 on nid001051
   Task   358 k-point     1 on nid001051
   Task   359 k-point     1 on nid001051
   Task   360 k-point     1 on nid001051
   Task   361 k-point     1 on nid001051
   Task   362 k-point     1 on nid001051
   Task   363 k-point     1 on nid001051
   Task   364 k-point     1 on nid001051
   Task   365 k-point     1 on nid001051
   Task   366 k-point     1 on nid001051
   Task   367 k-point     1 on nid001051
   Task   368 k-point     1 on nid001051
   Task   369 k-point     1 on nid001051
   Task   370 k-point     1 on nid001051
   Task   371 k-point     1 on nid001051
   Task   372 k-point     1 on nid001051
   Task   373 k-point     1 on nid001051
   Task   374 k-point     1 on nid001051
   Task   375 k-point     1 on nid001051
   Task   376 k-point     1 on nid001051
   Task   377 k-point     1 on nid001051
   Task   378 k-point     1 on nid001051
   Task   379 k-point     1 on nid001051
   Task   380 k-point     1 on nid001051
   Task   381 k-point     1 on nid001051
   Task   382 k-point     1 on nid001051
   Task   383 k-point     1 on nid001051
   Task   384 k-point     1 on nid001052
   Task   385 k-point     1 on nid001052
   Task   386 k-point     1 on nid001052
   Task   387 k-point     1 on nid001052
   Task   388 k-point     1 on nid001052
   Task   389 k-point     1 on nid001052
   Task   390 k-point     1 on nid001052
   Task   391 k-point     1 on nid001052
   Task   392 k-point     1 on nid001052
   Task   393 k-point     1 on nid001052
   Task   394 k-point     1 on nid001052
   Task   395 k-point     1 on nid001052
   Task   396 k-point     1 on nid001052
   Task   397 k-point     1 on nid001052
   Task   398 k-point     1 on nid001052
   Task   399 k-point     1 on nid001052
   Task   400 k-point     1 on nid001052
   Task   401 k-point     1 on nid001052
   Task   402 k-point     1 on nid001052
   Task   403 k-point     1 on nid001052
   Task   404 k-point     1 on nid001052
   Task   405 k-point     1 on nid001052
   Task   406 k-point     1 on nid001052
   Task   407 k-point     1 on nid001052
   Task   408 k-point     1 on nid001052
   Task   409 k-point     1 on nid001052
   Task   410 k-point     1 on nid001052
   Task   411 k-point     1 on nid001052
   Task   412 k-point     1 on nid001052
   Task   413 k-point     1 on nid001052
   Task   414 k-point     1 on nid001052
   Task   415 k-point     1 on nid001052
   Task   416 k-point     1 on nid001052
   Task   417 k-point     1 on nid001052
   Task   418 k-point     1 on nid001052
   Task   419 k-point     1 on nid001052
   Task   420 k-point     1 on nid001052
   Task   421 k-point     1 on nid001052
   Task   422 k-point     1 on nid001052
   Task   423 k-point     1 on nid001052
   Task   424 k-point     1 on nid001052
   Task   425 k-point     1 on nid001052
   Task   426 k-point     1 on nid001052
   Task   427 k-point     1 on nid001052
   Task   428 k-point     1 on nid001052
   Task   429 k-point     1 on nid001052
   Task   430 k-point     1 on nid001052
   Task   431 k-point     1 on nid001052
   Task   432 k-point     1 on nid001052
   Task   433 k-point     1 on nid001052
   Task   434 k-point     1 on nid001052
   Task   435 k-point     1 on nid001052
   Task   436 k-point     1 on nid001052
   Task   437 k-point     1 on nid001052
   Task   438 k-point     1 on nid001052
   Task   439 k-point     1 on nid001052
   Task   440 k-point     1 on nid001052
   Task   441 k-point     1 on nid001052
   Task   442 k-point     1 on nid001052
   Task   443 k-point     1 on nid001052
   Task   444 k-point     1 on nid001052
   Task   445 k-point     1 on nid001052
   Task   446 k-point     1 on nid001052
   Task   447 k-point     1 on nid001052
   Task   448 k-point     1 on nid001052
   Task   449 k-point     1 on nid001052
   Task   450 k-point     1 on nid001052
   Task   451 k-point     1 on nid001052
   Task   452 k-point     1 on nid001052
   Task   453 k-point     1 on nid001052
   Task   454 k-point     1 on nid001052
   Task   455 k-point     1 on nid001052
   Task   456 k-point     1 on nid001052
   Task   457 k-point     1 on nid001052
   Task   458 k-point     1 on nid001052
   Task   459 k-point     1 on nid001052
   Task   460 k-point     1 on nid001052
   Task   461 k-point     1 on nid001052
   Task   462 k-point     1 on nid001052
   Task   463 k-point     1 on nid001052
   Task   464 k-point     1 on nid001052
   Task   465 k-point     1 on nid001052
   Task   466 k-point     1 on nid001052
   Task   467 k-point     1 on nid001052
   Task   468 k-point     1 on nid001052
   Task   469 k-point     1 on nid001052
   Task   470 k-point     1 on nid001052
   Task   471 k-point     1 on nid001052
   Task   472 k-point     1 on nid001052
   Task   473 k-point     1 on nid001052
   Task   474 k-point     1 on nid001052
   Task   475 k-point     1 on nid001052
   Task   476 k-point     1 on nid001052
   Task   477 k-point     1 on nid001052
   Task   478 k-point     1 on nid001052
   Task   479 k-point     1 on nid001052
   Task   480 k-point     1 on nid001052
   Task   481 k-point     1 on nid001052
   Task   482 k-point     1 on nid001052
   Task   483 k-point     1 on nid001052
   Task   484 k-point     1 on nid001052
   Task   485 k-point     1 on nid001052
   Task   486 k-point     1 on nid001052
   Task   487 k-point     1 on nid001052
   Task   488 k-point     1 on nid001052
   Task   489 k-point     1 on nid001052
   Task   490 k-point     1 on nid001052
   Task   491 k-point     1 on nid001052
   Task   492 k-point     1 on nid001052
   Task   493 k-point     1 on nid001052
   Task   494 k-point     1 on nid001052
   Task   495 k-point     1 on nid001052
   Task   496 k-point     1 on nid001052
   Task   497 k-point     1 on nid001052
   Task   498 k-point     1 on nid001052
   Task   499 k-point     1 on nid001052
   Task   500 k-point     1 on nid001052
   Task   501 k-point     1 on nid001052
   Task   502 k-point     1 on nid001052
   Task   503 k-point     1 on nid001052
   Task   504 k-point     1 on nid001052
   Task   505 k-point     1 on nid001052
   Task   506 k-point     1 on nid001052
   Task   507 k-point     1 on nid001052
   Task   508 k-point     1 on nid001052
   Task   509 k-point     1 on nid001052
   Task   510 k-point     1 on nid001052
   Task   511 k-point     1 on nid001052
  Tasks:   512 split into     32 X     16 BLACS grid
  Calculating block size based on n_basis =           78  max_nprow =           32  max_npcol =           16
  ScaLAPACK block size set to:            2
  Allocating        0.000 MB for ovlp
  Allocating        0.000 MB for ham
  Allocating        0.000 MB for eigenvec
  Required Scalapack workspace - INTEGER:            1  REAL:             1
  Partitioning the integration grid into batches with parallel hashing+maxmin method.
  | Number of batches:      992
  | Maximal batch size:      98
  | Minimal batch size:       1
  | Average batch size:      49.399
  | Standard deviation of batch sizes:      30.140

  Integration load balanced across   512 MPI tasks.
  Work distribution over tasks is as follows:
  Task     0 has         87 integration points.
  Task     1 has         80 integration points.
  Task     2 has         82 integration points.
  Task     3 has         81 integration points.
  Task     4 has         84 integration points.
  Task     5 has         80 integration points.
  Task     6 has         84 integration points.
  Task     7 has         81 integration points.
  Task     8 has         82 integration points.
  Task     9 has        126 integration points.
  Task    10 has         81 integration points.
  Task    11 has         86 integration points.
  Task    12 has         85 integration points.
  Task    13 has         79 integration points.
  Task    14 has         82 integration points.
  Task    15 has        125 integration points.
  Task    16 has        159 integration points.
  Task    17 has         83 integration points.
  Task    18 has         77 integration points.
  Task    19 has         77 integration points.
  Task    20 has         80 integration points.
  Task    21 has         87 integration points.
  Task    22 has         92 integration points.
  Task    23 has         79 integration points.
  Task    24 has         84 integration points.
  Task    25 has         83 integration points.
  Task    26 has         82 integration points.
  Task    27 has         76 integration points.
  Task    28 has         84 integration points.
  Task    29 has        127 integration points.
  Task    30 has         80 integration points.
  Task    31 has         82 integration points.
  Task    32 has         81 integration points.
  Task    33 has         82 integration points.
  Task    34 has         80 integration points.
  Task    35 has         84 integration points.
  Task    36 has         77 integration points.
  Task    37 has         83 integration points.
  Task    38 has         78 integration points.
  Task    39 has         85 integration points.
  Task    40 has         82 integration points.
  Task    41 has         80 integration points.
  Task    42 has         79 integration points.
  Task    43 has         85 integration points.
  Task    44 has         87 integration points.
  Task    45 has         91 integration points.
  Task    46 has         95 integration points.
  Task    47 has         97 integration points.
  Task    48 has         83 integration points.
  Task    49 has         81 integration points.
  Task    50 has         84 integration points.
  Task    51 has         77 integration points.
  Task    52 has         89 integration points.
  Task    53 has        120 integration points.
  Task    54 has        117 integration points.
  Task    55 has         91 integration points.
  Task    56 has         79 integration points.
  Task    57 has         79 integration points.
  Task    58 has         83 integration points.
  Task    59 has         86 integration points.
  Task    60 has         96 integration points.
  Task    61 has        112 integration points.
  Task    62 has        107 integration points.
  Task    63 has         99 integration points.
  Task    64 has         82 integration points.
  Task    65 has         79 integration points.
  Task    66 has         78 integration points.
  Task    67 has         84 integration points.
  Task    68 has         75 integration points.
  Task    69 has         90 integration points.
  Task    70 has         98 integration points.
  Task    71 has         97 integration points.
  Task    72 has         83 integration points.
  Task    73 has         80 integration points.
  Task    74 has         79 integration points.
  Task    75 has         86 integration points.
  Task    76 has         75 integration points.
  Task    77 has         82 integration points.
  Task    78 has         85 integration points.
  Task    79 has         82 integration points.
  Task    80 has         78 integration points.
  Task    81 has         82 integration points.
  Task    82 has         81 integration points.
  Task    83 has         80 integration points.
  Task    84 has         79 integration points.
  Task    85 has         84 integration points.
  Task    86 has         76 integration points.
  Task    87 has         86 integration points.
  Task    88 has         87 integration points.
  Task    89 has         81 integration points.
  Task    90 has         78 integration points.
  Task    91 has         75 integration points.
  Task    92 has         79 integration points.
  Task    93 has         95 integration points.
  Task    94 has        119 integration points.
  Task    95 has         82 integration points.
  Task    96 has         76 integration points.
  Task    97 has         81 integration points.
  Task    98 has         75 integration points.
  Task    99 has         80 integration points.
  Task   100 has        115 integration points.
  Task   101 has         98 integration points.
  Task   102 has         77 integration points.
  Task   103 has        112 integration points.
  Task   104 has         83 integration points.
  Task   105 has         81 integration points.
  Task   106 has         75 integration points.
  Task   107 has         91 integration points.
  Task   108 has         98 integration points.
  Task   109 has        122 integration points.
  Task   110 has        122 integration points.
  Task   111 has        122 integration points.
  Task   112 has        126 integration points.
  Task   113 has        125 integration points.
  Task   114 has        125 integration points.
  Task   115 has        125 integration points.
  Task   116 has        129 integration points.
  Task   117 has         90 integration points.
  Task   118 has         92 integration points.
  Task   119 has         91 integration points.
  Task   120 has         94 integration points.
  Task   121 has         98 integration points.
  Task   122 has         93 integration points.
  Task   123 has         78 integration points.
  Task   124 has         75 integration points.
  Task   125 has         83 integration points.
  Task   126 has         77 integration points.
  Task   127 has         90 integration points.
  Task   128 has         92 integration points.
  Task   129 has         91 integration points.
  Task   130 has         94 integration points.
  Task   131 has         76 integration points.
  Task   132 has         79 integration points.
  Task   133 has         77 integration points.
  Task   134 has         80 integration points.
  Task   135 has         77 integration points.
  Task   136 has         86 integration points.
  Task   137 has        117 integration points.
  Task   138 has         75 integration points.
  Task   139 has         80 integration points.
  Task   140 has        114 integration points.
  Task   141 has         98 integration points.
  Task   142 has         77 integration points.
  Task   143 has        113 integration points.
  Task   144 has         82 integration points.
  Task   145 has         75 integration points.
  Task   146 has         79 integration points.
  Task   147 has         78 integration points.
  Task   148 has         81 integration points.
  Task   149 has         92 integration points.
  Task   150 has         84 integration points.
  Task   151 has         83 integration points.
  Task   152 has         75 integration points.
  Task   153 has         82 integration points.
  Task   154 has         77 integration points.
  Task   155 has         75 integration points.
  Task   156 has         75 integration points.
  Task   157 has        109 integration points.
  Task   158 has         74 integration points.
  Task   159 has         80 integration points.
  Task   160 has         81 integration points.
  Task   161 has         76 integration points.
  Task   162 has         81 integration points.
  Task   163 has         81 integration points.
  Task   164 has         75 integration points.
  Task   165 has         83 integration points.
  Task   166 has         80 integration points.
  Task   167 has         74 integration points.
  Task   168 has         93 integration points.
  Task   169 has        127 integration points.
  Task   170 has        109 integration points.
  Task   171 has         89 integration points.
  Task   172 has         76 integration points.
  Task   173 has         82 integration points.
  Task   174 has         77 integration points.
  Task   175 has         92 integration points.
  Task   176 has         86 integration points.
  Task   177 has         79 integration points.
  Task   178 has         81 integration points.
  Task   179 has         80 integration points.
  Task   180 has         83 integration points.
  Task   181 has        124 integration points.
  Task   182 has        132 integration points.
  Task   183 has        125 integration points.
  Task   184 has         74 integration points.
  Task   185 has         86 integration points.
  Task   186 has         91 integration points.
  Task   187 has         76 integration points.
  Task   188 has         84 integration points.
  Task   189 has        123 integration points.
  Task   190 has         79 integration points.
  Task   191 has         81 integration points.
  Task   192 has         80 integration points.
  Task   193 has         83 integration points.
  Task   194 has         76 integration points.
  Task   195 has         79 integration points.
  Task   196 has         78 integration points.
  Task   197 has         80 integration points.
  Task   198 has         77 integration points.
  Task   199 has         79 integration points.
  Task   200 has         78 integration points.
  Task   201 has         81 integration points.
  Task   202 has         77 integration points.
  Task   203 has         79 integration points.
  Task   204 has         78 integration points.
  Task   205 has         80 integration points.
  Task   206 has         77 integration points.
  Task   207 has         80 integration points.
  Task   208 has         78 integration points.
  Task   209 has         81 integration points.
  Task   210 has         76 integration points.
  Task   211 has         79 integration points.
  Task   212 has         78 integration points.
  Task   213 has         80 integration points.
  Task   214 has         77 integration points.
  Task   215 has         80 integration points.
  Task   216 has         78 integration points.
  Task   217 has         81 integration points.
  Task   218 has         77 integration points.
  Task   219 has         79 integration points.
  Task   220 has         78 integration points.
  Task   221 has         80 integration points.
  Task   222 has         77 integration points.
  Task   223 has         80 integration points.
  Task   224 has         79 integration points.
  Task   225 has         81 integration points.
  Task   226 has         76 integration points.
  Task   227 has         79 integration points.
  Task   228 has         78 integration points.
  Task   229 has         80 integration points.
  Task   230 has         75 integration points.
  Task   231 has         78 integration points.
  Task   232 has         80 integration points.
  Task   233 has         82 integration points.
  Task   234 has         77 integration points.
  Task   235 has         79 integration points.
  Task   236 has         78 integration points.
  Task   237 has         80 integration points.
  Task   238 has         77 integration points.
  Task   239 has         80 integration points.
  Task   240 has         79 integration points.
  Task   241 has         81 integration points.
  Task   242 has         76 integration points.
  Task   243 has         78 integration points.
  Task   244 has         77 integration points.
  Task   245 has         79 integration points.
  Task   246 has         78 integration points.
  Task   247 has         81 integration points.
  Task   248 has         79 integration points.
  Task   249 has         82 integration points.
  Task   250 has         75 integration points.
  Task   251 has         78 integration points.
  Task   252 has         77 integration points.
  Task   253 has         79 integration points.
  Task   254 has         79 integration points.
  Task   255 has         81 integration points.
  Task   256 has         80 integration points.
  Task   257 has         83 integration points.
  Task   258 has        128 integration points.
  Task   259 has        161 integration points.
  Task   260 has        135 integration points.
  Task   261 has         75 integration points.
  Task   262 has        125 integration points.
  Task   263 has        160 integration points.
  Task   264 has         75 integration points.
  Task   265 has         78 integration points.
  Task   266 has        127 integration points.
  Task   267 has        163 integration points.
  Task   268 has        153 integration points.
  Task   269 has         75 integration points.
  Task   270 has         90 integration points.
  Task   271 has        145 integration points.
  Task   272 has         81 integration points.
  Task   273 has         75 integration points.
  Task   274 has        126 integration points.
  Task   275 has        113 integration points.
  Task   276 has         74 integration points.
  Task   277 has         87 integration points.
  Task   278 has         76 integration points.
  Task   279 has        147 integration points.
  Task   280 has        166 integration points.
  Task   281 has         74 integration points.
  Task   282 has        128 integration points.
  Task   283 has        146 integration points.
  Task   284 has         74 integration points.
  Task   285 has         77 integration points.
  Task   286 has         90 integration points.
  Task   287 has        150 integration points.
  Task   288 has        145 integration points.
  Task   289 has         78 integration points.
  Task   290 has        130 integration points.
  Task   291 has        113 integration points.
  Task   292 has        124 integration points.
  Task   293 has         77 integration points.
  Task   294 has        133 integration points.
  Task   295 has        146 integration points.
  Task   296 has         81 integration points.
  Task   297 has         76 integration points.
  Task   298 has        131 integration points.
  Task   299 has         88 integration points.
  Task   300 has        108 integration points.
  Task   301 has         75 integration points.
  Task   302 has         90 integration points.
  Task   303 has         74 integration points.
  Task   304 has         89 integration points.
  Task   305 has         87 integration points.
  Task   306 has        134 integration points.
  Task   307 has         74 integration points.
  Task   308 has         83 integration points.
  Task   309 has         79 integration points.
  Task   310 has         75 integration points.
  Task   311 has         82 integration points.
  Task   312 has         76 integration points.
  Task   313 has         75 integration points.
  Task   314 has        107 integration points.
  Task   315 has        114 integration points.
  Task   316 has         93 integration points.
  Task   317 has         94 integration points.
  Task   318 has         87 integration points.
  Task   319 has        167 integration points.
  Task   320 has        166 integration points.
  Task   321 has         87 integration points.
  Task   322 has         79 integration points.
  Task   323 has         81 integration points.
  Task   324 has         80 integration points.
  Task   325 has         83 integration points.
  Task   326 has        126 integration points.
  Task   327 has         83 integration points.
  Task   328 has         78 integration points.
  Task   329 has        111 integration points.
  Task   330 has        123 integration points.
  Task   331 has         74 integration points.
  Task   332 has        127 integration points.
  Task   333 has        122 integration points.
  Task   334 has         77 integration points.
  Task   335 has        124 integration points.
  Task   336 has         82 integration points.
  Task   337 has         75 integration points.
  Task   338 has         78 integration points.
  Task   339 has        146 integration points.
  Task   340 has        123 integration points.
  Task   341 has         86 integration points.
  Task   342 has         89 integration points.
  Task   343 has        114 integration points.
  Task   344 has         78 integration points.
  Task   345 has         93 integration points.
  Task   346 has         74 integration points.
  Task   347 has         82 integration points.
  Task   348 has        126 integration points.
  Task   349 has         86 integration points.
  Task   350 has        152 integration points.
  Task   351 has        123 integration points.
  Task   352 has         86 integration points.
  Task   353 has         75 integration points.
  Task   354 has        125 integration points.
  Task   355 has         74 integration points.
  Task   356 has        124 integration points.
  Task   357 has         76 integration points.
  Task   358 has        145 integration points.
  Task   359 has         74 integration points.
  Task   360 has         74 integration points.
  Task   361 has         79 integration points.
  Task   362 has         75 integration points.
  Task   363 has         75 integration points.
  Task   364 has        126 integration points.
  Task   365 has         76 integration points.
  Task   366 has        147 integration points.
  Task   367 has        158 integration points.
  Task   368 has         75 integration points.
  Task   369 has         93 integration points.
  Task   370 has        146 integration points.
  Task   371 has         82 integration points.
  Task   372 has        160 integration points.
  Task   373 has        132 integration points.
  Task   374 has        149 integration points.
  Task   375 has         94 integration points.
  Task   376 has         74 integration points.
  Task   377 has        116 integration points.
  Task   378 has        159 integration points.
  Task   379 has         88 integration points.
  Task   380 has        162 integration points.
  Task   381 has         83 integration points.
  Task   382 has        130 integration points.
  Task   383 has         82 integration points.
  Task   384 has        166 integration points.
  Task   385 has         93 integration points.
  Task   386 has         80 integration points.
  Task   387 has         75 integration points.
  Task   388 has         93 integration points.
  Task   389 has         79 integration points.
  Task   390 has        133 integration points.
  Task   391 has         76 integration points.
  Task   392 has         76 integration points.
  Task   393 has         74 integration points.
  Task   394 has         80 integration points.
  Task   395 has         75 integration points.
  Task   396 has         74 integration points.
  Task   397 has         76 integration points.
  Task   398 has        124 integration points.
  Task   399 has        122 integration points.
  Task   400 has        127 integration points.
  Task   401 has        124 integration points.
  Task   402 has        124 integration points.
  Task   403 has        119 integration points.
  Task   404 has        130 integration points.
  Task   405 has        123 integration points.
  Task   406 has        127 integration points.
  Task   407 has        118 integration points.
  Task   408 has        125 integration points.
  Task   409 has        121 integration points.
  Task   410 has        128 integration points.
  Task   411 has        121 integration points.
  Task   412 has        121 integration points.
  Task   413 has        121 integration points.
  Task   414 has        125 integration points.
  Task   415 has        120 integration points.
  Task   416 has        116 integration points.
  Task   417 has        120 integration points.
  Task   418 has        127 integration points.
  Task   419 has        123 integration points.
  Task   420 has        119 integration points.
  Task   421 has        124 integration points.
  Task   422 has        126 integration points.
  Task   423 has        122 integration points.
  Task   424 has        118 integration points.
  Task   425 has        120 integration points.
  Task   426 has        120 integration points.
  Task   427 has        116 integration points.
  Task   428 has        118 integration points.
  Task   429 has        122 integration points.
  Task   430 has        128 integration points.
  Task   431 has        120 integration points.
  Task   432 has        117 integration points.
  Task   433 has        125 integration points.
  Task   434 has        124 integration points.
  Task   435 has        120 integration points.
  Task   436 has        120 integration points.
  Task   437 has        121 integration points.
  Task   438 has        127 integration points.
  Task   439 has        119 integration points.
  Task   440 has        118 integration points.
  Task   441 has        124 integration points.
  Task   442 has        126 integration points.
  Task   443 has        125 integration points.
  Task   444 has        121 integration points.
  Task   445 has        120 integration points.
  Task   446 has        128 integration points.
  Task   447 has        118 integration points.
  Task   448 has        121 integration points.
  Task   449 has        119 integration points.
  Task   450 has        125 integration points.
  Task   451 has        121 integration points.
  Task   452 has        121 integration points.
  Task   453 has        123 integration points.
  Task   454 has        127 integration points.
  Task   455 has        120 integration points.
  Task   456 has        117 integration points.
  Task   457 has        122 integration points.
  Task   458 has        119 integration points.
  Task   459 has        122 integration points.
  Task   460 has        118 integration points.
  Task   461 has        124 integration points.
  Task   462 has        125 integration points.
  Task   463 has         92 integration points.
  Task   464 has        123 integration points.
  Task   465 has         87 integration points.
  Task   466 has        107 integration points.
  Task   467 has         80 integration points.
  Task   468 has         76 integration points.
  Task   469 has         93 integration points.
  Task   470 has         86 integration points.
  Task   471 has         79 integration points.
  Task   472 has         81 integration points.
  Task   473 has         80 integration points.
  Task   474 has         83 integration points.
  Task   475 has        122 integration points.
  Task   476 has         86 integration points.
  Task   477 has        126 integration points.
  Task   478 has        145 integration points.
  Task   479 has         86 integration points.
  Task   480 has         89 integration points.
  Task   481 has         74 integration points.
  Task   482 has         81 integration points.
  Task   483 has         75 integration points.
  Task   484 has         92 integration points.
  Task   485 has        127 integration points.
  Task   486 has        110 integration points.
  Task   487 has         90 integration points.
  Task   488 has         74 integration points.
  Task   489 has         84 integration points.
  Task   490 has         80 integration points.
  Task   491 has         77 integration points.
  Task   492 has         85 integration points.
  Task   493 has         79 integration points.
  Task   494 has         74 integration points.
  Task   495 has         82 integration points.
  Task   496 has         81 integration points.
  Task   497 has         76 integration points.
  Task   498 has         82 integration points.
  Task   499 has         82 integration points.
  Task   500 has         75 integration points.
  Task   501 has         83 integration points.
  Task   502 has         80 integration points.
  Task   503 has         78 integration points.
  Task   504 has         93 integration points.
  Task   505 has        124 integration points.
  Task   506 has        108 integration points.
  Task   507 has         90 integration points.
  Task   508 has         76 integration points.
  Task   509 has         83 integration points.
  Task   510 has         78 integration points.
  Task   511 has         92 integration points.
  Initializing partition tables, free-atom densities, potentials, etc. across the integration grid (initialize_grid_storage).
  | initialize_grid_storage: Actual outermost partition radius vs. multipole_radius_free
  | (-- VB: in principle, multipole_radius_free should be larger, hence this output)
  | Species        1: Confinement radius =              6.000000000000000 AA, multipole_radius_free =              6.012827091137924 AA.
  | Species        1: outer_partition_radius set to              6.012827091137924 AA .
  | The sparse table of interatomic distances needs          0.04 kbyte instead of         0.03 kbyte of memory.
  | Using the partition_type stratmann_smoother will reduce your memory usage.
  | Net number of integration points:    49004
  | of which are non-zero points    :    47348
  Renormalizing the initial density to the exact electron count on the 3D integration grid.
  | Initial density: Formal number of electrons (from input files) :      32.0000000000
  | Integrated number of electrons on 3D grid     :      32.0000000419
  | Charge integration error                      :       0.0000000419
  | Normalization factor for density and gradient :       0.9999999987
  Renormalizing the free-atom superposition density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      32.0000000000
  | Integrated number of electrons on 3D grid     :      32.0000000419
  | Charge integration error                      :       0.0000000419
  | Normalization factor for density and gradient :       0.9999999987
  Obtaining max. number of non-zero basis functions in each batch (get_n_compute_maxes).
  | Maximal number of non-zero basis functions:       68 in task     0
  | Maximal number of non-zero basis functions:       76 in task     1
  | Maximal number of non-zero basis functions:       76 in task     2
  | Maximal number of non-zero basis functions:       72 in task     3
  | Maximal number of non-zero basis functions:       72 in task     4
  | Maximal number of non-zero basis functions:       77 in task     5
  | Maximal number of non-zero basis functions:       77 in task     6
  | Maximal number of non-zero basis functions:       77 in task     7
  | Maximal number of non-zero basis functions:       77 in task     8
  | Maximal number of non-zero basis functions:       76 in task     9
  | Maximal number of non-zero basis functions:       71 in task    10
  | Maximal number of non-zero basis functions:       77 in task    11
  | Maximal number of non-zero basis functions:       77 in task    12
  | Maximal number of non-zero basis functions:       77 in task    13
  | Maximal number of non-zero basis functions:       77 in task    14
  | Maximal number of non-zero basis functions:       77 in task    15
  | Maximal number of non-zero basis functions:       72 in task    16
  | Maximal number of non-zero basis functions:       75 in task    17
  | Maximal number of non-zero basis functions:       77 in task    18
  | Maximal number of non-zero basis functions:       76 in task    19
  | Maximal number of non-zero basis functions:       76 in task    20
  | Maximal number of non-zero basis functions:       68 in task    21
  | Maximal number of non-zero basis functions:       77 in task    22
  | Maximal number of non-zero basis functions:       76 in task    23
  | Maximal number of non-zero basis functions:       77 in task    24
  | Maximal number of non-zero basis functions:       76 in task    25
  | Maximal number of non-zero basis functions:       76 in task    26
  | Maximal number of non-zero basis functions:       77 in task    27
  | Maximal number of non-zero basis functions:       77 in task    28
  | Maximal number of non-zero basis functions:       76 in task    29
  | Maximal number of non-zero basis functions:       76 in task    30
  | Maximal number of non-zero basis functions:       76 in task    31
  | Maximal number of non-zero basis functions:       72 in task    32
  | Maximal number of non-zero basis functions:       76 in task    33
  | Maximal number of non-zero basis functions:       76 in task    34
  | Maximal number of non-zero basis functions:       72 in task    35
  | Maximal number of non-zero basis functions:       76 in task    36
  | Maximal number of non-zero basis functions:       77 in task    37
  | Maximal number of non-zero basis functions:       77 in task    38
  | Maximal number of non-zero basis functions:       77 in task    39
  | Maximal number of non-zero basis functions:       77 in task    40
  | Maximal number of non-zero basis functions:       76 in task    41
  | Maximal number of non-zero basis functions:       77 in task    42
  | Maximal number of non-zero basis functions:       77 in task    43
  | Maximal number of non-zero basis functions:       75 in task    44
  | Maximal number of non-zero basis functions:       72 in task    45
  | Maximal number of non-zero basis functions:       76 in task    46
  | Maximal number of non-zero basis functions:       76 in task    47
  | Maximal number of non-zero basis functions:       77 in task    48
  | Maximal number of non-zero basis functions:       77 in task    49
  | Maximal number of non-zero basis functions:       75 in task    50
  | Maximal number of non-zero basis functions:       77 in task    51
  | Maximal number of non-zero basis functions:       77 in task    52
  | Maximal number of non-zero basis functions:       76 in task    53
  | Maximal number of non-zero basis functions:       75 in task    54
  | Maximal number of non-zero basis functions:       77 in task    55
  | Maximal number of non-zero basis functions:       77 in task    56
  | Maximal number of non-zero basis functions:       77 in task    57
  | Maximal number of non-zero basis functions:       75 in task    58
  | Maximal number of non-zero basis functions:       77 in task    59
  | Maximal number of non-zero basis functions:       72 in task    60
  | Maximal number of non-zero basis functions:       77 in task    61
  | Maximal number of non-zero basis functions:       77 in task    62
  | Maximal number of non-zero basis functions:       72 in task    63
  | Maximal number of non-zero basis functions:       77 in task    64
  | Maximal number of non-zero basis functions:       77 in task    65
  | Maximal number of non-zero basis functions:       76 in task    66
  | Maximal number of non-zero basis functions:       77 in task    67
  | Maximal number of non-zero basis functions:       66 in task    68
  | Maximal number of non-zero basis functions:       77 in task    69
  | Maximal number of non-zero basis functions:       77 in task    70
  | Maximal number of non-zero basis functions:       77 in task    71
  | Maximal number of non-zero basis functions:       77 in task    72
  | Maximal number of non-zero basis functions:       76 in task    73
  | Maximal number of non-zero basis functions:       76 in task    74
  | Maximal number of non-zero basis functions:       77 in task    75
  | Maximal number of non-zero basis functions:       77 in task    76
  | Maximal number of non-zero basis functions:       77 in task    77
  | Maximal number of non-zero basis functions:       77 in task    78
  | Maximal number of non-zero basis functions:       76 in task    79
  | Maximal number of non-zero basis functions:       76 in task    80
  | Maximal number of non-zero basis functions:       77 in task    81
  | Maximal number of non-zero basis functions:       77 in task    82
  | Maximal number of non-zero basis functions:       77 in task    83
  | Maximal number of non-zero basis functions:       76 in task    84
  | Maximal number of non-zero basis functions:       77 in task    85
  | Maximal number of non-zero basis functions:       77 in task    86
  | Maximal number of non-zero basis functions:       75 in task    87
  | Maximal number of non-zero basis functions:       76 in task    88
  | Maximal number of non-zero basis functions:       77 in task    89
  | Maximal number of non-zero basis functions:       76 in task    90
  | Maximal number of non-zero basis functions:       76 in task    91
  | Maximal number of non-zero basis functions:       77 in task    92
  | Maximal number of non-zero basis functions:       77 in task    93
  | Maximal number of non-zero basis functions:       77 in task    94
  | Maximal number of non-zero basis functions:       77 in task    95
  | Maximal number of non-zero basis functions:       76 in task    96
  | Maximal number of non-zero basis functions:       76 in task    97
  | Maximal number of non-zero basis functions:       76 in task    98
  | Maximal number of non-zero basis functions:       77 in task    99
  | Maximal number of non-zero basis functions:       77 in task   100
  | Maximal number of non-zero basis functions:       70 in task   101
  | Maximal number of non-zero basis functions:       70 in task   102
  | Maximal number of non-zero basis functions:       77 in task   103
  | Maximal number of non-zero basis functions:       77 in task   104
  | Maximal number of non-zero basis functions:       76 in task   105
  | Maximal number of non-zero basis functions:       77 in task   106
  | Maximal number of non-zero basis functions:       77 in task   107
  | Maximal number of non-zero basis functions:       70 in task   108
  | Maximal number of non-zero basis functions:       77 in task   109
  | Maximal number of non-zero basis functions:       76 in task   110
  | Maximal number of non-zero basis functions:       77 in task   111
  | Maximal number of non-zero basis functions:       76 in task   112
  | Maximal number of non-zero basis functions:       76 in task   113
  | Maximal number of non-zero basis functions:       75 in task   114
  | Maximal number of non-zero basis functions:       76 in task   115
  | Maximal number of non-zero basis functions:       72 in task   116
  | Maximal number of non-zero basis functions:       70 in task   117
  | Maximal number of non-zero basis functions:       72 in task   118
  | Maximal number of non-zero basis functions:       72 in task   119
  | Maximal number of non-zero basis functions:       72 in task   120
  | Maximal number of non-zero basis functions:       70 in task   121
  | Maximal number of non-zero basis functions:       77 in task   122
  | Maximal number of non-zero basis functions:       77 in task   123
  | Maximal number of non-zero basis functions:       76 in task   124
  | Maximal number of non-zero basis functions:       71 in task   125
  | Maximal number of non-zero basis functions:       70 in task   126
  | Maximal number of non-zero basis functions:       70 in task   127
  | Maximal number of non-zero basis functions:       72 in task   128
  | Maximal number of non-zero basis functions:       72 in task   129
  | Maximal number of non-zero basis functions:       72 in task   130
  | Maximal number of non-zero basis functions:       72 in task   131
  | Maximal number of non-zero basis functions:       72 in task   132
  | Maximal number of non-zero basis functions:       70 in task   133
  | Maximal number of non-zero basis functions:       72 in task   134
  | Maximal number of non-zero basis functions:       70 in task   135
  | Maximal number of non-zero basis functions:       76 in task   136
  | Maximal number of non-zero basis functions:       76 in task   137
  | Maximal number of non-zero basis functions:       77 in task   138
  | Maximal number of non-zero basis functions:       77 in task   139
  | Maximal number of non-zero basis functions:       77 in task   140
  | Maximal number of non-zero basis functions:       70 in task   141
  | Maximal number of non-zero basis functions:       70 in task   142
  | Maximal number of non-zero basis functions:       77 in task   143
  | Maximal number of non-zero basis functions:       77 in task   144
  | Maximal number of non-zero basis functions:       76 in task   145
  | Maximal number of non-zero basis functions:       76 in task   146
  | Maximal number of non-zero basis functions:       76 in task   147
  | Maximal number of non-zero basis functions:       77 in task   148
  | Maximal number of non-zero basis functions:       77 in task   149
  | Maximal number of non-zero basis functions:       68 in task   150
  | Maximal number of non-zero basis functions:       77 in task   151
  | Maximal number of non-zero basis functions:       76 in task   152
  | Maximal number of non-zero basis functions:       76 in task   153
  | Maximal number of non-zero basis functions:       77 in task   154
  | Maximal number of non-zero basis functions:       77 in task   155
  | Maximal number of non-zero basis functions:       77 in task   156
  | Maximal number of non-zero basis functions:       76 in task   157
  | Maximal number of non-zero basis functions:       76 in task   158
  | Maximal number of non-zero basis functions:       77 in task   159
  | Maximal number of non-zero basis functions:       77 in task   160
  | Maximal number of non-zero basis functions:       76 in task   161
  | Maximal number of non-zero basis functions:       77 in task   162
  | Maximal number of non-zero basis functions:       77 in task   163
  | Maximal number of non-zero basis functions:       75 in task   164
  | Maximal number of non-zero basis functions:       77 in task   165
  | Maximal number of non-zero basis functions:       77 in task   166
  | Maximal number of non-zero basis functions:       77 in task   167
  | Maximal number of non-zero basis functions:       77 in task   168
  | Maximal number of non-zero basis functions:       75 in task   169
  | Maximal number of non-zero basis functions:       77 in task   170
  | Maximal number of non-zero basis functions:       77 in task   171
  | Maximal number of non-zero basis functions:       76 in task   172
  | Maximal number of non-zero basis functions:       77 in task   173
  | Maximal number of non-zero basis functions:       75 in task   174
  | Maximal number of non-zero basis functions:       77 in task   175
  | Maximal number of non-zero basis functions:       68 in task   176
  | Maximal number of non-zero basis functions:       72 in task   177
  | Maximal number of non-zero basis functions:       72 in task   178
  | Maximal number of non-zero basis functions:       76 in task   179
  | Maximal number of non-zero basis functions:       76 in task   180
  | Maximal number of non-zero basis functions:       77 in task   181
  | Maximal number of non-zero basis functions:       68 in task   182
  | Maximal number of non-zero basis functions:       76 in task   183
  | Maximal number of non-zero basis functions:       71 in task   184
  | Maximal number of non-zero basis functions:       68 in task   185
  | Maximal number of non-zero basis functions:       77 in task   186
  | Maximal number of non-zero basis functions:       77 in task   187
  | Maximal number of non-zero basis functions:       77 in task   188
  | Maximal number of non-zero basis functions:       77 in task   189
  | Maximal number of non-zero basis functions:       72 in task   190
  | Maximal number of non-zero basis functions:       72 in task   191
  | Maximal number of non-zero basis functions:       76 in task   192
  | Maximal number of non-zero basis functions:       76 in task   193
  | Maximal number of non-zero basis functions:       76 in task   194
  | Maximal number of non-zero basis functions:       72 in task   195
  | Maximal number of non-zero basis functions:       76 in task   196
  | Maximal number of non-zero basis functions:       76 in task   197
  | Maximal number of non-zero basis functions:       77 in task   198
  | Maximal number of non-zero basis functions:       77 in task   199
  | Maximal number of non-zero basis functions:       77 in task   200
  | Maximal number of non-zero basis functions:       77 in task   201
  | Maximal number of non-zero basis functions:       76 in task   202
  | Maximal number of non-zero basis functions:       76 in task   203
  | Maximal number of non-zero basis functions:       76 in task   204
  | Maximal number of non-zero basis functions:       72 in task   205
  | Maximal number of non-zero basis functions:       75 in task   206
  | Maximal number of non-zero basis functions:       77 in task   207
  | Maximal number of non-zero basis functions:       77 in task   208
  | Maximal number of non-zero basis functions:       77 in task   209
  | Maximal number of non-zero basis functions:       77 in task   210
  | Maximal number of non-zero basis functions:       77 in task   211
  | Maximal number of non-zero basis functions:       76 in task   212
  | Maximal number of non-zero basis functions:       76 in task   213
  | Maximal number of non-zero basis functions:       76 in task   214
  | Maximal number of non-zero basis functions:       76 in task   215
  | Maximal number of non-zero basis functions:       76 in task   216
  | Maximal number of non-zero basis functions:       76 in task   217
  | Maximal number of non-zero basis functions:       77 in task   218
  | Maximal number of non-zero basis functions:       76 in task   219
  | Maximal number of non-zero basis functions:       77 in task   220
  | Maximal number of non-zero basis functions:       76 in task   221
  | Maximal number of non-zero basis functions:       76 in task   222
  | Maximal number of non-zero basis functions:       76 in task   223
  | Maximal number of non-zero basis functions:       76 in task   224
  | Maximal number of non-zero basis functions:       76 in task   225
  | Maximal number of non-zero basis functions:       75 in task   226
  | Maximal number of non-zero basis functions:       77 in task   227
  | Maximal number of non-zero basis functions:       77 in task   228
  | Maximal number of non-zero basis functions:       77 in task   229
  | Maximal number of non-zero basis functions:       77 in task   230
  | Maximal number of non-zero basis functions:       77 in task   231
  | Maximal number of non-zero basis functions:       77 in task   232
  | Maximal number of non-zero basis functions:       77 in task   233
  | Maximal number of non-zero basis functions:       77 in task   234
  | Maximal number of non-zero basis functions:       77 in task   235
  | Maximal number of non-zero basis functions:       77 in task   236
  | Maximal number of non-zero basis functions:       77 in task   237
  | Maximal number of non-zero basis functions:       77 in task   238
  | Maximal number of non-zero basis functions:       77 in task   239
  | Maximal number of non-zero basis functions:       77 in task   240
  | Maximal number of non-zero basis functions:       77 in task   241
  | Maximal number of non-zero basis functions:       77 in task   242
  | Maximal number of non-zero basis functions:       77 in task   243
  | Maximal number of non-zero basis functions:       77 in task   244
  | Maximal number of non-zero basis functions:       77 in task   245
  | Maximal number of non-zero basis functions:       77 in task   246
  | Maximal number of non-zero basis functions:       77 in task   247
  | Maximal number of non-zero basis functions:       77 in task   248
  | Maximal number of non-zero basis functions:       77 in task   249
  | Maximal number of non-zero basis functions:       77 in task   250
  | Maximal number of non-zero basis functions:       77 in task   251
  | Maximal number of non-zero basis functions:       77 in task   252
  | Maximal number of non-zero basis functions:       77 in task   253
  | Maximal number of non-zero basis functions:       77 in task   254
  | Maximal number of non-zero basis functions:       77 in task   255
  | Maximal number of non-zero basis functions:       77 in task   256
  | Maximal number of non-zero basis functions:       77 in task   257
  | Maximal number of non-zero basis functions:       76 in task   258
  | Maximal number of non-zero basis functions:       76 in task   259
  | Maximal number of non-zero basis functions:       76 in task   260
  | Maximal number of non-zero basis functions:       76 in task   261
  | Maximal number of non-zero basis functions:       77 in task   262
  | Maximal number of non-zero basis functions:       76 in task   263
  | Maximal number of non-zero basis functions:       77 in task   264
  | Maximal number of non-zero basis functions:       76 in task   265
  | Maximal number of non-zero basis functions:       76 in task   266
  | Maximal number of non-zero basis functions:       76 in task   267
  | Maximal number of non-zero basis functions:       76 in task   268
  | Maximal number of non-zero basis functions:       76 in task   269
  | Maximal number of non-zero basis functions:       77 in task   270
  | Maximal number of non-zero basis functions:       76 in task   271
  | Maximal number of non-zero basis functions:       76 in task   272
  | Maximal number of non-zero basis functions:       76 in task   273
  | Maximal number of non-zero basis functions:       76 in task   274
  | Maximal number of non-zero basis functions:       75 in task   275
  | Maximal number of non-zero basis functions:       76 in task   276
  | Maximal number of non-zero basis functions:       76 in task   277
  | Maximal number of non-zero basis functions:       76 in task   278
  | Maximal number of non-zero basis functions:       77 in task   279
  | Maximal number of non-zero basis functions:       77 in task   280
  | Maximal number of non-zero basis functions:       77 in task   281
  | Maximal number of non-zero basis functions:       75 in task   282
  | Maximal number of non-zero basis functions:       76 in task   283
  | Maximal number of non-zero basis functions:       76 in task   284
  | Maximal number of non-zero basis functions:       76 in task   285
  | Maximal number of non-zero basis functions:       75 in task   286
  | Maximal number of non-zero basis functions:       77 in task   287
  | Maximal number of non-zero basis functions:       77 in task   288
  | Maximal number of non-zero basis functions:       77 in task   289
  | Maximal number of non-zero basis functions:       75 in task   290
  | Maximal number of non-zero basis functions:       77 in task   291
  | Maximal number of non-zero basis functions:       77 in task   292
  | Maximal number of non-zero basis functions:       77 in task   293
  | Maximal number of non-zero basis functions:       77 in task   294
  | Maximal number of non-zero basis functions:       77 in task   295
  | Maximal number of non-zero basis functions:       77 in task   296
  | Maximal number of non-zero basis functions:       77 in task   297
  | Maximal number of non-zero basis functions:       77 in task   298
  | Maximal number of non-zero basis functions:       77 in task   299
  | Maximal number of non-zero basis functions:       77 in task   300
  | Maximal number of non-zero basis functions:       77 in task   301
  | Maximal number of non-zero basis functions:       77 in task   302
  | Maximal number of non-zero basis functions:       77 in task   303
  | Maximal number of non-zero basis functions:       77 in task   304
  | Maximal number of non-zero basis functions:       77 in task   305
  | Maximal number of non-zero basis functions:       77 in task   306
  | Maximal number of non-zero basis functions:       77 in task   307
  | Maximal number of non-zero basis functions:       77 in task   308
  | Maximal number of non-zero basis functions:       77 in task   309
  | Maximal number of non-zero basis functions:       77 in task   310
  | Maximal number of non-zero basis functions:       77 in task   311
  | Maximal number of non-zero basis functions:       77 in task   312
  | Maximal number of non-zero basis functions:       77 in task   313
  | Maximal number of non-zero basis functions:       77 in task   314
  | Maximal number of non-zero basis functions:       77 in task   315
  | Maximal number of non-zero basis functions:       77 in task   316
  | Maximal number of non-zero basis functions:       77 in task   317
  | Maximal number of non-zero basis functions:       77 in task   318
  | Maximal number of non-zero basis functions:       77 in task   319
  | Maximal number of non-zero basis functions:       77 in task   320
  | Maximal number of non-zero basis functions:       77 in task   321
  | Maximal number of non-zero basis functions:       72 in task   322
  | Maximal number of non-zero basis functions:       72 in task   323
  | Maximal number of non-zero basis functions:       76 in task   324
  | Maximal number of non-zero basis functions:       76 in task   325
  | Maximal number of non-zero basis functions:       77 in task   326
  | Maximal number of non-zero basis functions:       77 in task   327
  | Maximal number of non-zero basis functions:       77 in task   328
  | Maximal number of non-zero basis functions:       77 in task   329
  | Maximal number of non-zero basis functions:       77 in task   330
  | Maximal number of non-zero basis functions:       72 in task   331
  | Maximal number of non-zero basis functions:       76 in task   332
  | Maximal number of non-zero basis functions:       76 in task   333
  | Maximal number of non-zero basis functions:       75 in task   334
  | Maximal number of non-zero basis functions:       77 in task   335
  | Maximal number of non-zero basis functions:       77 in task   336
  | Maximal number of non-zero basis functions:       77 in task   337
  | Maximal number of non-zero basis functions:       77 in task   338
  | Maximal number of non-zero basis functions:       77 in task   339
  | Maximal number of non-zero basis functions:       77 in task   340
  | Maximal number of non-zero basis functions:       77 in task   341
  | Maximal number of non-zero basis functions:       77 in task   342
  | Maximal number of non-zero basis functions:       77 in task   343
  | Maximal number of non-zero basis functions:       77 in task   344
  | Maximal number of non-zero basis functions:       77 in task   345
  | Maximal number of non-zero basis functions:       77 in task   346
  | Maximal number of non-zero basis functions:       77 in task   347
  | Maximal number of non-zero basis functions:       77 in task   348
  | Maximal number of non-zero basis functions:       77 in task   349
  | Maximal number of non-zero basis functions:       77 in task   350
  | Maximal number of non-zero basis functions:       77 in task   351
  | Maximal number of non-zero basis functions:       77 in task   352
  | Maximal number of non-zero basis functions:       77 in task   353
  | Maximal number of non-zero basis functions:       77 in task   354
  | Maximal number of non-zero basis functions:       77 in task   355
  | Maximal number of non-zero basis functions:       77 in task   356
  | Maximal number of non-zero basis functions:       77 in task   357
  | Maximal number of non-zero basis functions:       77 in task   358
  | Maximal number of non-zero basis functions:       77 in task   359
  | Maximal number of non-zero basis functions:       77 in task   360
  | Maximal number of non-zero basis functions:       77 in task   361
  | Maximal number of non-zero basis functions:       77 in task   362
  | Maximal number of non-zero basis functions:       77 in task   363
  | Maximal number of non-zero basis functions:       77 in task   364
  | Maximal number of non-zero basis functions:       77 in task   365
  | Maximal number of non-zero basis functions:       76 in task   366
  | Maximal number of non-zero basis functions:       75 in task   367
  | Maximal number of non-zero basis functions:       76 in task   368
  | Maximal number of non-zero basis functions:       76 in task   369
  | Maximal number of non-zero basis functions:       76 in task   370
  | Maximal number of non-zero basis functions:       77 in task   371
  | Maximal number of non-zero basis functions:       77 in task   372
  | Maximal number of non-zero basis functions:       77 in task   373
  | Maximal number of non-zero basis functions:       76 in task   374
  | Maximal number of non-zero basis functions:       76 in task   375
  | Maximal number of non-zero basis functions:       76 in task   376
  | Maximal number of non-zero basis functions:       72 in task   377
  | Maximal number of non-zero basis functions:       75 in task   378
  | Maximal number of non-zero basis functions:       77 in task   379
  | Maximal number of non-zero basis functions:       77 in task   380
  | Maximal number of non-zero basis functions:       77 in task   381
  | Maximal number of non-zero basis functions:       77 in task   382
  | Maximal number of non-zero basis functions:       76 in task   383
  | Maximal number of non-zero basis functions:       77 in task   384
  | Maximal number of non-zero basis functions:       76 in task   385
  | Maximal number of non-zero basis functions:       76 in task   386
  | Maximal number of non-zero basis functions:       76 in task   387
  | Maximal number of non-zero basis functions:       76 in task   388
  | Maximal number of non-zero basis functions:       76 in task   389
  | Maximal number of non-zero basis functions:       76 in task   390
  | Maximal number of non-zero basis functions:       77 in task   391
  | Maximal number of non-zero basis functions:       76 in task   392
  | Maximal number of non-zero basis functions:       76 in task   393
  | Maximal number of non-zero basis functions:       76 in task   394
  | Maximal number of non-zero basis functions:       76 in task   395
  | Maximal number of non-zero basis functions:       76 in task   396
  | Maximal number of non-zero basis functions:       76 in task   397
  | Maximal number of non-zero basis functions:       77 in task   398
  | Maximal number of non-zero basis functions:       77 in task   399
  | Maximal number of non-zero basis functions:       77 in task   400
  | Maximal number of non-zero basis functions:       77 in task   401
  | Maximal number of non-zero basis functions:       77 in task   402
  | Maximal number of non-zero basis functions:       77 in task   403
  | Maximal number of non-zero basis functions:       77 in task   404
  | Maximal number of non-zero basis functions:       77 in task   405
  | Maximal number of non-zero basis functions:       77 in task   406
  | Maximal number of non-zero basis functions:       77 in task   407
  | Maximal number of non-zero basis functions:       77 in task   408
  | Maximal number of non-zero basis functions:       77 in task   409
  | Maximal number of non-zero basis functions:       77 in task   410
  | Maximal number of non-zero basis functions:       77 in task   411
  | Maximal number of non-zero basis functions:       77 in task   412
  | Maximal number of non-zero basis functions:       77 in task   413
  | Maximal number of non-zero basis functions:       77 in task   414
  | Maximal number of non-zero basis functions:       77 in task   415
  | Maximal number of non-zero basis functions:       77 in task   416
  | Maximal number of non-zero basis functions:       77 in task   417
  | Maximal number of non-zero basis functions:       77 in task   418
  | Maximal number of non-zero basis functions:       77 in task   419
  | Maximal number of non-zero basis functions:       77 in task   420
  | Maximal number of non-zero basis functions:       77 in task   421
  | Maximal number of non-zero basis functions:       77 in task   422
  | Maximal number of non-zero basis functions:       77 in task   423
  | Maximal number of non-zero basis functions:       77 in task   424
  | Maximal number of non-zero basis functions:       77 in task   425
  | Maximal number of non-zero basis functions:       77 in task   426
  | Maximal number of non-zero basis functions:       77 in task   427
  | Maximal number of non-zero basis functions:       77 in task   428
  | Maximal number of non-zero basis functions:       77 in task   429
  | Maximal number of non-zero basis functions:       76 in task   430
  | Maximal number of non-zero basis functions:       77 in task   431
  | Maximal number of non-zero basis functions:       77 in task   432
  | Maximal number of non-zero basis functions:       77 in task   433
  | Maximal number of non-zero basis functions:       76 in task   434
  | Maximal number of non-zero basis functions:       77 in task   435
  | Maximal number of non-zero basis functions:       77 in task   436
  | Maximal number of non-zero basis functions:       77 in task   437
  | Maximal number of non-zero basis functions:       76 in task   438
  | Maximal number of non-zero basis functions:       77 in task   439
  | Maximal number of non-zero basis functions:       77 in task   440
  | Maximal number of non-zero basis functions:       76 in task   441
  | Maximal number of non-zero basis functions:       76 in task   442
  | Maximal number of non-zero basis functions:       77 in task   443
  | Maximal number of non-zero basis functions:       77 in task   444
  | Maximal number of non-zero basis functions:       76 in task   445
  | Maximal number of non-zero basis functions:       77 in task   446
  | Maximal number of non-zero basis functions:       77 in task   447
  | Maximal number of non-zero basis functions:       77 in task   448
  | Maximal number of non-zero basis functions:       76 in task   449
  | Maximal number of non-zero basis functions:       77 in task   450
  | Maximal number of non-zero basis functions:       77 in task   451
  | Maximal number of non-zero basis functions:       77 in task   452
  | Maximal number of non-zero basis functions:       76 in task   453
  | Maximal number of non-zero basis functions:       76 in task   454
  | Maximal number of non-zero basis functions:       76 in task   455
  | Maximal number of non-zero basis functions:       77 in task   456
  | Maximal number of non-zero basis functions:       77 in task   457
  | Maximal number of non-zero basis functions:       77 in task   458
  | Maximal number of non-zero basis functions:       76 in task   459
  | Maximal number of non-zero basis functions:       77 in task   460
  | Maximal number of non-zero basis functions:       77 in task   461
  | Maximal number of non-zero basis functions:       75 in task   462
  | Maximal number of non-zero basis functions:       72 in task   463
  | Maximal number of non-zero basis functions:       77 in task   464
  | Maximal number of non-zero basis functions:       76 in task   465
  | Maximal number of non-zero basis functions:       77 in task   466
  | Maximal number of non-zero basis functions:       77 in task   467
  | Maximal number of non-zero basis functions:       77 in task   468
  | Maximal number of non-zero basis functions:       77 in task   469
  | Maximal number of non-zero basis functions:       68 in task   470
  | Maximal number of non-zero basis functions:       71 in task   471
  | Maximal number of non-zero basis functions:       72 in task   472
  | Maximal number of non-zero basis functions:       76 in task   473
  | Maximal number of non-zero basis functions:       76 in task   474
  | Maximal number of non-zero basis functions:       72 in task   475
  | Maximal number of non-zero basis functions:       72 in task   476
  | Maximal number of non-zero basis functions:       76 in task   477
  | Maximal number of non-zero basis functions:       76 in task   478
  | Maximal number of non-zero basis functions:       68 in task   479
  | Maximal number of non-zero basis functions:       77 in task   480
  | Maximal number of non-zero basis functions:       77 in task   481
  | Maximal number of non-zero basis functions:       77 in task   482
  | Maximal number of non-zero basis functions:       77 in task   483
  | Maximal number of non-zero basis functions:       77 in task   484
  | Maximal number of non-zero basis functions:       75 in task   485
  | Maximal number of non-zero basis functions:       77 in task   486
  | Maximal number of non-zero basis functions:       77 in task   487
  | Maximal number of non-zero basis functions:       77 in task   488
  | Maximal number of non-zero basis functions:       77 in task   489
  | Maximal number of non-zero basis functions:       77 in task   490
  | Maximal number of non-zero basis functions:       75 in task   491
  | Maximal number of non-zero basis functions:       77 in task   492
  | Maximal number of non-zero basis functions:       77 in task   493
  | Maximal number of non-zero basis functions:       72 in task   494
  | Maximal number of non-zero basis functions:       77 in task   495
  | Maximal number of non-zero basis functions:       77 in task   496
  | Maximal number of non-zero basis functions:       76 in task   497
  | Maximal number of non-zero basis functions:       77 in task   498
  | Maximal number of non-zero basis functions:       77 in task   499
  | Maximal number of non-zero basis functions:       76 in task   500
  | Maximal number of non-zero basis functions:       77 in task   501
  | Maximal number of non-zero basis functions:       77 in task   502
  | Maximal number of non-zero basis functions:       77 in task   503
  | Maximal number of non-zero basis functions:       77 in task   504
  | Maximal number of non-zero basis functions:       76 in task   505
  | Maximal number of non-zero basis functions:       77 in task   506
  | Maximal number of non-zero basis functions:       77 in task   507
  | Maximal number of non-zero basis functions:       76 in task   508
  | Maximal number of non-zero basis functions:       77 in task   509
  | Maximal number of non-zero basis functions:       76 in task   510
  | Maximal number of non-zero basis functions:       77 in task   511
  Selecting the method for density update.
  Loop over occupied states selected for charge density update.
  Allocating        0.013 MB for KS_eigenvector
  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work        0.290 s, elapsed        0.586 s => Consider using load balancing!
  Integrating overlap matrix.
  Time summed over all CPUs for integration: real work        0.278 s, elapsed        0.438 s
  Deallocating overlap matrix.

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the ELPA eigensolver.
  Overlap matrix is not singular
  | Lowest and highest eigenvalues :  0.7754E-02,  0.1992E+01
  Finished singularity check of overlap matrix
  | Time :     0.547 s
  Starting ELPA eigensolver
  Finished Cholesky decomposition
  | Time :     0.007 s
  Finished transformation to standard eigenproblem
  | Time :     0.002 s
  Finished solving standard eigenproblem
  | Time :     0.213 s
  Finished back-transformation of eigenvectors
  | Time :     0.001 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -5.82995719 eV
  Writing Kohn-Sham eigenvalues.

  State    Occupation    Eigenvalue [Ha]    Eigenvalue [eV]
      1       2.00000         -88.369248        -2404.64958
      2       2.00000         -88.369248        -2404.64958
      3       2.00000          -7.762136         -211.21847
      4       2.00000          -7.761993         -211.21457
      5       2.00000          -5.768458         -156.96774
      6       2.00000          -5.767710         -156.94738
      7       2.00000          -5.765123         -156.87699
      8       2.00000          -5.765123         -156.87699
      9       2.00000          -5.765066         -156.87542
     10       2.00000          -5.765066         -156.87542
     11       2.00000          -0.794961          -21.63200
     12       2.00000          -0.579439          -15.76734
     13       2.00000          -0.380089          -10.34275
     14       2.00000          -0.348563           -9.48490
     15       2.00000          -0.348563           -9.48490
     16       1.00000          -0.214247           -5.82996
     17       1.00000          -0.214247           -5.82996
     18       0.00000          -0.060579           -1.64844
     19       0.00000           0.062753            1.70758
     20       0.00000           0.097850            2.66265
     21       0.00000           0.097850            2.66265
     22       0.00000           0.108185            2.94386

  Highest occupied state (VBM) at     -5.82995719 eV
  | Occupation number:      1.00000000

  Lowest unoccupied state (CBM) at    -5.82995719 eV
  | Occupation number:      1.00000000

  Overall HOMO-LUMO gap:      0.00000000 eV.
  This system has fractional occupation numbers. Thus, it is a degenerate system
  within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.
  This may not be harmful. However, for some systems (free atoms), a different, non-degenerate
  ground state might exist by using a smaller broadening (see keyword occupation_type).
  Calculating total energy contributions from superposition of free atom densities.

  Total energy components:
  | Sum of eigenvalues            :        -459.05006889 Ha      -12491.38792928 eV
  | XC energy correction          :         -48.64841186 Ha       -1323.79064044 eV
  | XC potential correction       :          64.30383757 Ha        1749.79644900 eV
  | Free-atom electrostatic energy:        -353.71021703 Ha       -9624.94471728 eV
  | Hartree energy correction     :          -0.00000000 Ha          -0.00000000 eV
  | Entropy correction            :          -0.00020734 Ha          -0.00564190 eV
  | ---------------------------
  | Total energy                  :        -797.10486021 Ha      -21690.32683799 eV
  | Total energy, T -> 0          :        -797.10506755 Ha      -21690.33247989 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :        -797.10527488 Ha      -21690.33812179 eV

  Derived energy quantities:
  | Kinetic energy                :         799.43177790 Ha       21753.64549002 eV
  | Electrostatic energy          :       -1547.88822625 Ha      -42120.18168757 eV
  | Energy correction for multipole
  | error in Hartree potential    :           0.00000000 Ha           0.00000000 eV
  | Sum of eigenvalues per atom                           :       -6245.69396464 eV
  | Total energy (T->0) per atom                          :      -10845.16623995 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -10845.16906089 eV
  Initialize hartree_potential_storage
  Max. number of atoms included in rho_multipole:            2

  End scf initialization - timings             :  max(cpu_time)    wall_clock(cpu1)
  | Time for scf. initialization                :        1.041 s           1.069 s
  | Boundary condition initialization           :        0.000 s           0.001 s
  | Integration                                 :        0.005 s           0.005 s
  | Solution of K.-S. eqns.                     :        0.962 s           0.986 s
  | Grid partitioning                           :        0.016 s           0.017 s
  | Preloading free-atom quantities on grid     :        0.006 s           0.005 s
  | Free-atom superposition energy              :        0.001 s           0.000 s
  | Total energy evaluation                     :        0.000 s           0.001 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        0.037 MB (on task 119)
  |   Maximum:        0.037 MB (on task   0)
  |   Average:        0.037 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:        0.540 MB (on task  68 after allocating wave)
  |   Maximum:        0.626 MB (on task   5 after allocating wave)
  |   Average:        0.618 MB
  | Largest tracked array allocation so far:
  |   Minimum:        0.148 MB (gradient_basis_wave_store on task  68)
  |   Maximum:        0.173 MB (gradient_basis_wave_store on task   5)
  |   Average:        0.170 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------
  Evaluating new KS density.
  Integration grid: deviation in total charge (<rho> - N_e) =   7.105427E-15

  Time for density update prior                :  max(cpu_time)    wall_clock(cpu1)
  | self-consistency iterative process          :        0.003 s           0.002 s

------------------------------------------------------------
          Begin self-consistency iteration #    1

  Date     :  20220914, Time     :  152352.104
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      32.0000000000
  | Integrated number of electrons on 3D grid     :      32.0000000000
  | Charge integration error                      :      -0.0000000000
  | Normalization factor for density and gradient :       1.0000000000

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =  -0.706272E-14
  | Sum of charges compensated after spline to logarithmic grids =   0.570646E-07
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =  -0.706575E-14
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        1.387 s, elapsed        1.615 s
  | RMS charge density error from multipole expansion :   0.810458E-04

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work        0.683 s, elapsed        1.150 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the ELPA eigensolver.
  Starting ELPA eigensolver
  Finished transformation to standard eigenproblem
  | Time :     0.001 s
  Finished solving standard eigenproblem
  | Time :     0.005 s
  Finished back-transformation of eigenvectors
  | Time :     0.001 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -5.86435654 eV
  Writing Kohn-Sham eigenvalues.

  State    Occupation    Eigenvalue [Ha]    Eigenvalue [eV]
      1       2.00000         -89.233238        -2428.15994
      2       2.00000         -89.233236        -2428.15991
      3       2.00000          -7.990164         -217.42342
      4       2.00000          -7.990098         -217.42164
      5       2.00000          -5.888996         -160.24774
      6       2.00000          -5.888204         -160.22617
      7       2.00000          -5.885659         -160.15694
      8       2.00000          -5.885659         -160.15694
      9       2.00000          -5.885608         -160.15554
     10       2.00000          -5.885608         -160.15554
     11       2.00000          -0.824639          -22.43956
     12       2.00000          -0.602389          -16.39184
     13       2.00000          -0.389807          -10.60719
     14       2.00000          -0.355220           -9.66602
     15       2.00000          -0.355220           -9.66602
     16       1.00000          -0.215511           -5.86436
     17       1.00000          -0.215511           -5.86436
     18       0.00000          -0.047215           -1.28477
     19       0.00000           0.088851            2.41777
     20       0.00000           0.123843            3.36993
     21       0.00000           0.123982            3.37371
     22       0.00000           0.136470            3.71354

  Highest occupied state (VBM) at     -5.86435654 eV
  | Occupation number:      1.00000000

  Lowest unoccupied state (CBM) at    -5.86435654 eV
  | Occupation number:      1.00000000

  Overall HOMO-LUMO gap:      0.00000000 eV.
  This system has fractional occupation numbers. Thus, it is a degenerate system
  within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.
  This may not be harmful. However, for some systems (free atoms), a different, non-degenerate
  ground state might exist by using a smaller broadening (see keyword occupation_type).

  Total energy components:
  | Sum of eigenvalues            :        -465.01851276 Ha      -12653.79755037 eV
  | XC energy correction          :         -51.43860475 Ha       -1399.71565197 eV
  | XC potential correction       :          70.35721136 Ha        1914.51713060 eV
  | Free-atom electrostatic energy:        -353.71021703 Ha       -9624.94471728 eV
  | Hartree energy correction     :          -0.08311082 Ha          -2.26156039 eV
  | Entropy correction            :          -0.00020734 Ha          -0.00564190 eV
  | ---------------------------
  | Total energy                  :        -799.89323400 Ha      -21766.20234941 eV
  | Total energy, T -> 0          :        -799.89344134 Ha      -21766.20799131 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :        -799.89364868 Ha      -21766.21363320 eV

  Derived energy quantities:
  | Kinetic energy                :         799.44705797 Ha       21754.06128185 eV
  | Electrostatic energy          :       -1547.90168723 Ha      -42120.54797929 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00004781 Ha          -0.00130111 eV
  | Sum of eigenvalues per atom                           :       -6326.89877519 eV
  | Total energy (T->0) per atom                          :      -10883.10399565 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -10883.10681660 eV
  Evaluating new KS density.
  Integration grid: deviation in total charge (<rho> - N_e) =  -7.105427E-14

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.8298E-01
  | Change of unmixed KS density  :  0.4070E+02
  | Change of sum of eigenvalues  : -0.1624E+03 eV
  | Change of total energy        : -0.7588E+02 eV


------------------------------------------------------------
  End self-consistency iteration #     1       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.021 s           0.021 s
  | Charge density update                       :        0.001 s           0.000 s
  | Density mixing                              :        0.001 s           0.000 s
  | Hartree multipole update                    :        0.003 s           0.003 s
  | Hartree multipole summation                 :        0.004 s           0.005 s
  | Integration                                 :        0.003 s           0.002 s
  | Solution of K.-S. eqns.                     :        0.008 s           0.007 s
  | Total energy evaluation                     :        0.000 s           0.000 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        0.037 MB (on task 119)
  |   Maximum:        0.037 MB (on task   0)
  |   Average:        0.037 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:        0.540 MB (on task  68 after allocating wave)
  |   Maximum:        0.626 MB (on task   5 after allocating wave)
  |   Average:        0.618 MB
  | Largest tracked array allocation so far:
  |   Minimum:        0.148 MB (gradient_basis_wave_store on task  68)
  |   Maximum:        0.173 MB (gradient_basis_wave_store on task   5)
  |   Average:        0.170 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #    2

  Date     :  20220914, Time     :  152352.166
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      32.0000000000
  | Integrated number of electrons on 3D grid     :      32.0000000000
  | Charge integration error                      :       0.0000000000
  | Normalization factor for density and gradient :       1.0000000000

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =  -0.506301E-14
  | Sum of charges compensated after spline to logarithmic grids =   0.293972E-07
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =  -0.506446E-14
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        1.026 s, elapsed        1.126 s
  | RMS charge density error from multipole expansion :   0.124605E-03

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work        0.465 s, elapsed        0.779 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the ELPA eigensolver.
  Starting ELPA eigensolver
  Finished transformation to standard eigenproblem
  | Time :     0.001 s
  Finished solving standard eigenproblem
  | Time :     0.005 s
  Finished back-transformation of eigenvectors
  | Time :     0.001 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -5.84626167 eV
  Highest occupied state (VBM) at     -5.84626167 eV
  | Occupation number:      1.00000000

  Lowest unoccupied state (CBM) at    -5.84626167 eV
  | Occupation number:      1.00000000

  Overall HOMO-LUMO gap:      0.00000000 eV.
  This system has fractional occupation numbers. Thus, it is a degenerate system
  within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.
  This may not be harmful. However, for some systems (free atoms), a different, non-degenerate
  ground state might exist by using a smaller broadening (see keyword occupation_type).

  Checking to see if s.c.f. parameters should be adjusted.
  Adjusted the Pulay mixing parameter (charge_mix_param) for an expected low-gap system. New value:   0.020000 .
  Adjusted the occupation broadening width for an expected low-gap system. New value:      0.05000000 eV.

  Total energy components:
  | Sum of eigenvalues            :        -464.97732700 Ha      -12652.67682868 eV
  | XC energy correction          :         -51.44154656 Ha       -1399.79570259 eV
  | XC potential correction       :          70.36124182 Ha        1914.62680511 eV
  | Free-atom electrostatic energy:        -353.71021703 Ha       -9624.94471728 eV
  | Hartree energy correction     :          -0.12530749 Ha          -3.40979018 eV
  | Entropy correction            :          -0.00103668 Ha          -0.02820948 eV
  | ---------------------------
  | Total energy                  :        -799.89315625 Ha      -21766.20023362 eV
  | Total energy, T -> 0          :        -799.89419293 Ha      -21766.22844310 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :        -799.89522961 Ha      -21766.25665258 eV

  Derived energy quantities:
  | Kinetic energy                :         799.47438982 Ha       21754.80501934 eV
  | Electrostatic energy          :       -1547.92599952 Ha      -42121.20955037 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00007442 Ha          -0.00202521 eV
  | Sum of eigenvalues per atom                           :       -6326.33841434 eV
  | Total energy (T->0) per atom                          :      -10883.11422155 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -10883.12832629 eV
  Evaluating new KS density.
  Integration grid: deviation in total charge (<rho> - N_e) =  -7.815970E-14

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.8257E-01
  | Change of unmixed KS density  :  0.3078E-01
  | Change of sum of eigenvalues  :  0.1121E+01 eV
  | Change of total energy        :  0.2116E-02 eV


------------------------------------------------------------
  End self-consistency iteration #     2       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.054 s           0.016 s
  | Charge density update                       :        0.000 s           0.001 s
  | Density mixing                              :        0.039 s           0.001 s
  | Hartree multipole update                    :        0.001 s           0.002 s
  | Hartree multipole summation                 :        0.003 s           0.002 s
  | Integration                                 :        0.002 s           0.002 s
  | Solution of K.-S. eqns.                     :        0.007 s           0.007 s
  | Total energy evaluation                     :        0.001 s           0.001 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        0.038 MB (on task 119)
  |   Maximum:        0.038 MB (on task   0)
  |   Average:        0.038 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:        0.540 MB (on task  68 after allocating wave)
  |   Maximum:        0.626 MB (on task   5 after allocating wave)
  |   Average:        0.618 MB
  | Largest tracked array allocation so far:
  |   Minimum:        0.148 MB (gradient_basis_wave_store on task  68)
  |   Maximum:        0.173 MB (gradient_basis_wave_store on task   5)
  |   Average:        0.170 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #    3

  Date     :  20220914, Time     :  152352.220
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      32.0000000000
  | Integrated number of electrons on 3D grid     :      32.0000000000
  | Charge integration error                      :      -0.0000000000
  | Normalization factor for density and gradient :       1.0000000000

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =  -0.295450E-14
  | Sum of charges compensated after spline to logarithmic grids =   0.170980E-06
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =  -0.293746E-14
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        1.019 s, elapsed        1.105 s
  | RMS charge density error from multipole expansion :   0.130610E-02

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work        0.463 s, elapsed        0.806 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the ELPA eigensolver.
  Starting ELPA eigensolver
  Finished transformation to standard eigenproblem
  | Time :     0.001 s
  Finished solving standard eigenproblem
  | Time :     0.005 s
  Finished back-transformation of eigenvectors
  | Time :     0.000 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -5.36749656 eV
  Highest occupied state (VBM) at     -5.36749656 eV
  | Occupation number:      1.00000000

  Lowest unoccupied state (CBM) at    -5.36749656 eV
  | Occupation number:      1.00000000

  Overall HOMO-LUMO gap:      0.00000000 eV.
  This system has fractional occupation numbers. Thus, it is a degenerate system
  within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.
  This may not be harmful. However, for some systems (free atoms), a different, non-degenerate
  ground state might exist by using a smaller broadening (see keyword occupation_type).

  Total energy components:
  | Sum of eigenvalues            :        -463.87917576 Ha      -12622.79461317 eV
  | XC energy correction          :         -51.52361555 Ha       -1402.02891353 eV
  | XC potential correction       :          70.46926225 Ha        1917.56619056 eV
  | Free-atom electrostatic energy:        -353.71021703 Ha       -9624.94471728 eV
  | Hartree energy correction     :          -1.24998771 Ha         -34.01389607 eV
  | Entropy correction            :          -0.00103668 Ha          -0.02820948 eV
  | ---------------------------
  | Total energy                  :        -799.89373380 Ha      -21766.21594949 eV
  | Total energy, T -> 0          :        -799.89477048 Ha      -21766.24415897 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :        -799.89580716 Ha      -21766.27236845 eV

  Derived energy quantities:
  | Kinetic energy                :         800.20386994 Ha       21774.65518330 eV
  | Electrostatic energy          :       -1548.57398819 Ha      -42138.84221926 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00079621 Ha          -0.02166608 eV
  | Sum of eigenvalues per atom                           :       -6311.39730658 eV
  | Total energy (T->0) per atom                          :      -10883.12207949 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -10883.13618423 eV
  Evaluating new KS density.
  Integration grid: deviation in total charge (<rho> - N_e) =  -1.776357E-14

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.8007E-01
  | Change of unmixed KS density  :  0.1045E-02
  | Change of sum of eigenvalues  :  0.2988E+02 eV
  | Change of total energy        : -0.1572E-01 eV


------------------------------------------------------------
  End self-consistency iteration #     3       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.053 s           0.016 s
  | Charge density update                       :        0.001 s           0.001 s
  | Density mixing                              :        0.038 s           0.002 s
  | Hartree multipole update                    :        0.001 s           0.001 s
  | Hartree multipole summation                 :        0.002 s           0.002 s
  | Integration                                 :        0.002 s           0.003 s
  | Solution of K.-S. eqns.                     :        0.007 s           0.007 s
  | Total energy evaluation                     :        0.000 s           0.000 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        0.038 MB (on task 119)
  |   Maximum:        0.039 MB (on task   0)
  |   Average:        0.038 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:        0.540 MB (on task  68 after allocating wave)
  |   Maximum:        0.626 MB (on task   5 after allocating wave)
  |   Average:        0.618 MB
  | Largest tracked array allocation so far:
  |   Minimum:        0.148 MB (gradient_basis_wave_store on task  68)
  |   Maximum:        0.173 MB (gradient_basis_wave_store on task   5)
  |   Average:        0.170 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #    4

  Date     :  20220914, Time     :  152352.272
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      32.0000000000
  | Integrated number of electrons on 3D grid     :      32.0000000000
  | Charge integration error                      :       0.0000000000
  | Normalization factor for density and gradient :       1.0000000000

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =   0.747359E-15
  | Sum of charges compensated after spline to logarithmic grids =   0.147326E-06
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =   0.715174E-15
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        1.019 s, elapsed        1.156 s
  | RMS charge density error from multipole expansion :   0.130217E-02

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work        0.449 s, elapsed        0.722 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the ELPA eigensolver.
  Starting ELPA eigensolver
  Finished transformation to standard eigenproblem
  | Time :     0.001 s
  Finished solving standard eigenproblem
  | Time :     0.005 s
  Finished back-transformation of eigenvectors
  | Time :     0.000 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -5.47007548 eV
  Highest occupied state (VBM) at     -5.47007548 eV
  | Occupation number:      1.00000000

  Lowest unoccupied state (CBM) at    -5.47007548 eV
  | Occupation number:      1.00000000

  Overall HOMO-LUMO gap:      0.00000000 eV.
  This system has fractional occupation numbers. Thus, it is a degenerate system
  within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.
  This may not be harmful. However, for some systems (free atoms), a different, non-degenerate
  ground state might exist by using a smaller broadening (see keyword occupation_type).

  Total energy components:
  | Sum of eigenvalues            :        -464.11955094 Ha      -12629.33555453 eV
  | XC energy correction          :         -51.51243999 Ha       -1401.72481118 eV
  | XC potential correction       :          70.45349887 Ha        1917.13724710 eV
  | Free-atom electrostatic energy:        -353.71021703 Ha       -9624.94471728 eV
  | Hartree energy correction     :          -1.00447105 Ha         -27.33304798 eV
  | Entropy correction            :          -0.00103668 Ha          -0.02820948 eV
  | ---------------------------
  | Total energy                  :        -799.89318015 Ha      -21766.20088388 eV
  | Total energy, T -> 0          :        -799.89421683 Ha      -21766.22909336 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :        -799.89525350 Ha      -21766.25730283 eV

  Derived energy quantities:
  | Kinetic energy                :         800.12546207 Ha       21772.52159650 eV
  | Electrostatic energy          :       -1548.50620222 Ha      -42136.99766919 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00079107 Ha          -0.02152611 eV
  | Sum of eigenvalues per atom                           :       -6314.66777726 eV
  | Total energy (T->0) per atom                          :      -10883.11454668 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -10883.12865142 eV
  Evaluating new KS density.
  Integration grid: deviation in total charge (<rho> - N_e) =   4.263256E-14

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.2826E-01
  | Change of unmixed KS density  :  0.2716E-01
  | Change of sum of eigenvalues  : -0.6541E+01 eV
  | Change of total energy        :  0.1507E-01 eV


------------------------------------------------------------
  End self-consistency iteration #     4       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.051 s           0.017 s
  | Charge density update                       :        0.000 s           0.000 s
  | Density mixing                              :        0.038 s           0.004 s
  | Hartree multipole update                    :        0.001 s           0.001 s
  | Hartree multipole summation                 :        0.003 s           0.003 s
  | Integration                                 :        0.002 s           0.002 s
  | Solution of K.-S. eqns.                     :        0.007 s           0.007 s
  | Total energy evaluation                     :        0.000 s           0.000 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        0.039 MB (on task 119)
  |   Maximum:        0.039 MB (on task   0)
  |   Average:        0.039 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:        0.540 MB (on task  68 after allocating wave)
  |   Maximum:        0.626 MB (on task   5 after allocating wave)
  |   Average:        0.618 MB
  | Largest tracked array allocation so far:
  |   Minimum:        0.148 MB (gradient_basis_wave_store on task  68)
  |   Maximum:        0.173 MB (gradient_basis_wave_store on task   5)
  |   Average:        0.170 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #    5

  Date     :  20220914, Time     :  152352.324
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      32.0000000000
  | Integrated number of electrons on 3D grid     :      32.0000000000
  | Charge integration error                      :      -0.0000000000
  | Normalization factor for density and gradient :       1.0000000000

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =  -0.987154E-14
  | Sum of charges compensated after spline to logarithmic grids =   0.164233E-06
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =  -0.983056E-14
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        1.012 s, elapsed        1.157 s
  | RMS charge density error from multipole expansion :   0.175945E-02

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work        0.454 s, elapsed        0.802 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the ELPA eigensolver.
  Starting ELPA eigensolver
  Finished transformation to standard eigenproblem
  | Time :     0.001 s
  Finished solving standard eigenproblem
  | Time :     0.005 s
  Finished back-transformation of eigenvectors
  | Time :     0.000 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -5.46692180 eV
  Highest occupied state (VBM) at     -5.46692180 eV
  | Occupation number:      1.00000000

  Lowest unoccupied state (CBM) at    -5.46692180 eV
  | Occupation number:      1.00000000

  Overall HOMO-LUMO gap:      0.00000000 eV.
  This system has fractional occupation numbers. Thus, it is a degenerate system
  within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.
  This may not be harmful. However, for some systems (free atoms), a different, non-degenerate
  ground state might exist by using a smaller broadening (see keyword occupation_type).

  Total energy components:
  | Sum of eigenvalues            :        -464.12102525 Ha      -12629.37567274 eV
  | XC energy correction          :         -51.52540566 Ha       -1402.07762483 eV
  | XC potential correction       :          70.46788460 Ha        1917.52870271 eV
  | Free-atom electrostatic energy:        -353.71021703 Ha       -9624.94471728 eV
  | Hartree energy correction     :          -1.00447489 Ha         -27.33315252 eV
  | Entropy correction            :          -0.00103668 Ha          -0.02820948 eV
  | ---------------------------
  | Total energy                  :        -799.89323824 Ha      -21766.20246465 eV
  | Total energy, T -> 0          :        -799.89427492 Ha      -21766.23067413 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :        -799.89531160 Ha      -21766.25888361 eV

  Derived energy quantities:
  | Kinetic energy                :         800.25999054 Ha       21776.18230268 eV
  | Electrostatic energy          :       -1548.62782313 Ha      -42140.30714250 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00106320 Ha          -0.02893112 eV
  | Sum of eigenvalues per atom                           :       -6314.68783637 eV
  | Total energy (T->0) per atom                          :      -10883.11533706 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -10883.12944180 eV
  Evaluating new KS density.
  Integration grid: deviation in total charge (<rho> - N_e) =   2.131628E-14

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.2093E-01
  | Change of unmixed KS density  :  0.7507E-02
  | Change of sum of eigenvalues  : -0.4012E-01 eV
  | Change of total energy        : -0.1581E-02 eV


------------------------------------------------------------
  End self-consistency iteration #     5       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.052 s           0.019 s
  | Charge density update                       :        0.000 s           0.000 s
  | Density mixing                              :        0.038 s           0.005 s
  | Hartree multipole update                    :        0.001 s           0.002 s
  | Hartree multipole summation                 :        0.003 s           0.002 s
  | Integration                                 :        0.002 s           0.003 s
  | Solution of K.-S. eqns.                     :        0.007 s           0.006 s
  | Total energy evaluation                     :        0.000 s           0.000 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        0.039 MB (on task 119)
  |   Maximum:        0.039 MB (on task   0)
  |   Average:        0.039 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:        0.540 MB (on task  68 after allocating wave)
  |   Maximum:        0.626 MB (on task   5 after allocating wave)
  |   Average:        0.618 MB
  | Largest tracked array allocation so far:
  |   Minimum:        0.148 MB (gradient_basis_wave_store on task  68)
  |   Maximum:        0.173 MB (gradient_basis_wave_store on task   5)
  |   Average:        0.170 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #    6

  Date     :  20220914, Time     :  152352.382
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      32.0000000000
  | Integrated number of electrons on 3D grid     :      32.0000000000
  | Charge integration error                      :       0.0000000000
  | Normalization factor for density and gradient :       1.0000000000

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =  -0.292466E-14
  | Sum of charges compensated after spline to logarithmic grids =   0.166471E-06
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =  -0.291674E-14
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        1.006 s, elapsed        1.111 s
  | RMS charge density error from multipole expansion :   0.172199E-02

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work        0.457 s, elapsed        0.745 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the ELPA eigensolver.
  Starting ELPA eigensolver
  Finished transformation to standard eigenproblem
  | Time :     0.001 s
  Finished solving standard eigenproblem
  | Time :     0.005 s
  Finished back-transformation of eigenvectors
  | Time :     0.000 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -5.46117939 eV
  Highest occupied state (VBM) at     -5.46117939 eV
  | Occupation number:      1.00000000

  Lowest unoccupied state (CBM) at    -5.46117939 eV
  | Occupation number:      1.00000000

  Overall HOMO-LUMO gap:      0.00000000 eV.
  This system has fractional occupation numbers. Thus, it is a degenerate system
  within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.
  This may not be harmful. However, for some systems (free atoms), a different, non-degenerate
  ground state might exist by using a smaller broadening (see keyword occupation_type).

  Total energy components:
  | Sum of eigenvalues            :        -464.12436383 Ha      -12629.46651999 eV
  | XC energy correction          :         -51.52180675 Ha       -1401.97969362 eV
  | XC potential correction       :          70.46344172 Ha        1917.40780583 eV
  | Free-atom electrostatic energy:        -353.71021703 Ha       -9624.94471728 eV
  | Hartree energy correction     :          -1.00027912 Ha         -27.21897987 eV
  | Entropy correction            :          -0.00103668 Ha          -0.02820948 eV
  | ---------------------------
  | Total energy                  :        -799.89322502 Ha      -21766.20210494 eV
  | Total energy, T -> 0          :        -799.89426170 Ha      -21766.23031442 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :        -799.89529838 Ha      -21766.25852390 eV

  Derived energy quantities:
  | Kinetic energy                :         800.20179220 Ha       21774.59864516 eV
  | Electrostatic energy          :       -1548.57321047 Ha      -42138.82105647 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00104385 Ha          -0.02840470 eV
  | Sum of eigenvalues per atom                           :       -6314.73326000 eV
  | Total energy (T->0) per atom                          :      -10883.11515721 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -10883.12926195 eV
  Evaluating new KS density.
  Integration grid: deviation in total charge (<rho> - N_e) =  -3.552714E-14

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.6477E-02
  | Change of unmixed KS density  :  0.3455E-02
  | Change of sum of eigenvalues  : -0.9085E-01 eV
  | Change of total energy        :  0.3597E-03 eV


------------------------------------------------------------
  End self-consistency iteration #     6       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.051 s           0.015 s
  | Charge density update                       :        0.000 s           0.001 s
  | Density mixing                              :        0.038 s           0.001 s
  | Hartree multipole update                    :        0.001 s           0.002 s
  | Hartree multipole summation                 :        0.002 s           0.002 s
  | Integration                                 :        0.002 s           0.002 s
  | Solution of K.-S. eqns.                     :        0.007 s           0.007 s
  | Total energy evaluation                     :        0.000 s           0.000 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        0.039 MB (on task 119)
  |   Maximum:        0.040 MB (on task   0)
  |   Average:        0.039 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:        0.540 MB (on task  68 after allocating wave)
  |   Maximum:        0.626 MB (on task   5 after allocating wave)
  |   Average:        0.618 MB
  | Largest tracked array allocation so far:
  |   Minimum:        0.148 MB (gradient_basis_wave_store on task  68)
  |   Maximum:        0.173 MB (gradient_basis_wave_store on task   5)
  |   Average:        0.170 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #    7

  Date     :  20220914, Time     :  152352.434
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      32.0000000000
  | Integrated number of electrons on 3D grid     :      32.0000000000
  | Charge integration error                      :       0.0000000000
  | Normalization factor for density and gradient :       1.0000000000

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =   0.229814E-14
  | Sum of charges compensated after spline to logarithmic grids =   0.172288E-06
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =   0.232600E-14
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        1.006 s, elapsed        1.103 s
  | RMS charge density error from multipole expansion :   0.176292E-02

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work        0.448 s, elapsed        0.754 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the ELPA eigensolver.
  Starting ELPA eigensolver
  Finished transformation to standard eigenproblem
  | Time :     0.001 s
  Finished solving standard eigenproblem
  | Time :     0.005 s
  Finished back-transformation of eigenvectors
  | Time :     0.000 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -5.47026798 eV
  Highest occupied state (VBM) at     -5.47026798 eV
  | Occupation number:      1.00000000

  Lowest unoccupied state (CBM) at    -5.47026798 eV
  | Occupation number:      1.00000000

  Overall HOMO-LUMO gap:      0.00000000 eV.
  This system has fractional occupation numbers. Thus, it is a degenerate system
  within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.
  This may not be harmful. However, for some systems (free atoms), a different, non-degenerate
  ground state might exist by using a smaller broadening (see keyword occupation_type).

  Total energy components:
  | Sum of eigenvalues            :        -464.19778094 Ha      -12631.46430112 eV
  | XC energy correction          :         -51.51262501 Ha       -1401.72984574 eV
  | XC potential correction       :          70.45084043 Ha        1917.06490724 eV
  | Free-atom electrostatic energy:        -353.71021703 Ha       -9624.94471728 eV
  | Hartree energy correction     :          -0.92344284 Ha         -25.12815808 eV
  | Entropy correction            :          -0.00103668 Ha          -0.02820948 eV
  | ---------------------------
  | Total energy                  :        -799.89322539 Ha      -21766.20211498 eV
  | Total energy, T -> 0          :        -799.89426207 Ha      -21766.23032446 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :        -799.89529875 Ha      -21766.25853394 eV

  Derived energy quantities:
  | Kinetic energy                :         800.05345076 Ha       21770.56206910 eV
  | Electrostatic energy          :       -1548.43405114 Ha      -42135.03433835 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00107492 Ha          -0.02925005 eV
  | Sum of eigenvalues per atom                           :       -6315.73215056 eV
  | Total energy (T->0) per atom                          :      -10883.11516223 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -10883.12926697 eV
  Evaluating new KS density.
  Integration grid: deviation in total charge (<rho> - N_e) =  -1.776357E-14

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.4035E-02
  | Change of unmixed KS density  :  0.1146E-02
  | Change of sum of eigenvalues  : -0.1998E+01 eV
  | Change of total energy        : -0.1004E-04 eV


------------------------------------------------------------
  End self-consistency iteration #     7       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.052 s           0.017 s
  | Charge density update                       :        0.001 s           0.001 s
  | Density mixing                              :        0.038 s           0.002 s
  | Hartree multipole update                    :        0.001 s           0.002 s
  | Hartree multipole summation                 :        0.002 s           0.002 s
  | Integration                                 :        0.002 s           0.002 s
  | Solution of K.-S. eqns.                     :        0.007 s           0.007 s
  | Total energy evaluation                     :        0.000 s           0.000 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        0.039 MB (on task 119)
  |   Maximum:        0.040 MB (on task   0)
  |   Average:        0.040 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:        0.540 MB (on task  68 after allocating wave)
  |   Maximum:        0.626 MB (on task   5 after allocating wave)
  |   Average:        0.618 MB
  | Largest tracked array allocation so far:
  |   Minimum:        0.148 MB (gradient_basis_wave_store on task  68)
  |   Maximum:        0.173 MB (gradient_basis_wave_store on task   5)
  |   Average:        0.170 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #    8

  Date     :  20220914, Time     :  152352.489
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      32.0000000000
  | Integrated number of electrons on 3D grid     :      32.0000000000
  | Charge integration error                      :      -0.0000000000
  | Normalization factor for density and gradient :       1.0000000000

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =  -0.271048E-14
  | Sum of charges compensated after spline to logarithmic grids =   0.170957E-06
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =  -0.264062E-14
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        0.996 s, elapsed        1.105 s
  | RMS charge density error from multipole expansion :   0.177338E-02

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work        0.450 s, elapsed        0.759 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the ELPA eigensolver.
  Starting ELPA eigensolver
  Finished transformation to standard eigenproblem
  | Time :     0.001 s
  Finished solving standard eigenproblem
  | Time :     0.005 s
  Finished back-transformation of eigenvectors
  | Time :     0.001 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -5.47493680 eV
  Highest occupied state (VBM) at     -5.47493680 eV
  | Occupation number:      1.00000000

  Lowest unoccupied state (CBM) at    -5.47493680 eV
  | Occupation number:      1.00000000

  Overall HOMO-LUMO gap:      0.00000000 eV.
  This system has fractional occupation numbers. Thus, it is a degenerate system
  within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.
  This may not be harmful. However, for some systems (free atoms), a different, non-degenerate
  ground state might exist by using a smaller broadening (see keyword occupation_type).

  Total energy components:
  | Sum of eigenvalues            :        -464.20715522 Ha      -12631.71938823 eV
  | XC energy correction          :         -51.51256757 Ha       -1401.72828280 eV
  | XC potential correction       :          70.45067526 Ha        1917.06041283 eV
  | Free-atom electrostatic energy:        -353.71021703 Ha       -9624.94471728 eV
  | Hartree energy correction     :          -0.91396015 Ha         -24.87012110 eV
  | Entropy correction            :          -0.00103668 Ha          -0.02820948 eV
  | ---------------------------
  | Total energy                  :        -799.89322471 Ha      -21766.20209660 eV
  | Total energy, T -> 0          :        -799.89426139 Ha      -21766.23030608 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :        -799.89529807 Ha      -21766.25851556 eV

  Derived energy quantities:
  | Kinetic energy                :         800.05626584 Ha       21770.63867136 eV
  | Electrostatic energy          :       -1548.43692298 Ha      -42135.11248516 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00108344 Ha          -0.02948203 eV
  | Sum of eigenvalues per atom                           :       -6315.85969412 eV
  | Total energy (T->0) per atom                          :      -10883.11515304 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -10883.12925778 eV
  Evaluating new KS density.
  Integration grid: deviation in total charge (<rho> - N_e) =   5.684342E-14

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.2816E-02
  | Change of unmixed KS density  :  0.1048E-02
  | Change of sum of eigenvalues  : -0.2551E+00 eV
  | Change of total energy        :  0.1839E-04 eV


------------------------------------------------------------
  End self-consistency iteration #     8       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.052 s           0.016 s
  | Charge density update                       :        0.000 s           0.001 s
  | Density mixing                              :        0.038 s           0.002 s
  | Hartree multipole update                    :        0.001 s           0.001 s
  | Hartree multipole summation                 :        0.002 s           0.003 s
  | Integration                                 :        0.002 s           0.002 s
  | Solution of K.-S. eqns.                     :        0.007 s           0.007 s
  | Total energy evaluation                     :        0.000 s           0.000 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        0.040 MB (on task 119)
  |   Maximum:        0.040 MB (on task   0)
  |   Average:        0.040 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:        0.540 MB (on task  68 after allocating wave)
  |   Maximum:        0.626 MB (on task   5 after allocating wave)
  |   Average:        0.618 MB
  | Largest tracked array allocation so far:
  |   Minimum:        0.148 MB (gradient_basis_wave_store on task  68)
  |   Maximum:        0.173 MB (gradient_basis_wave_store on task   5)
  |   Average:        0.170 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #    9

  Date     :  20220914, Time     :  152352.543
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      32.0000000000
  | Integrated number of electrons on 3D grid     :      32.0000000000
  | Charge integration error                      :      -0.0000000000
  | Normalization factor for density and gradient :       1.0000000000

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =  -0.579063E-14
  | Sum of charges compensated after spline to logarithmic grids =   0.165641E-06
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =  -0.582711E-14
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        1.006 s, elapsed        1.108 s
  | RMS charge density error from multipole expansion :   0.179639E-02

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work        0.452 s, elapsed        0.776 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the ELPA eigensolver.
  Starting ELPA eigensolver
  Finished transformation to standard eigenproblem
  | Time :     0.001 s
  Finished solving standard eigenproblem
  | Time :     0.005 s
  Finished back-transformation of eigenvectors
  | Time :     0.000 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -5.47762747 eV
  Highest occupied state (VBM) at     -5.47762747 eV
  | Occupation number:      1.00000000

  Lowest unoccupied state (CBM) at    -5.47762747 eV
  | Occupation number:      1.00000000

  Overall HOMO-LUMO gap:      0.00000000 eV.
  This system has fractional occupation numbers. Thus, it is a degenerate system
  within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.
  This may not be harmful. However, for some systems (free atoms), a different, non-degenerate
  ground state might exist by using a smaller broadening (see keyword occupation_type).

  Total energy components:
  | Sum of eigenvalues            :        -464.18421786 Ha      -12631.09523108 eV
  | XC energy correction          :         -51.51761400 Ha       -1401.86560304 eV
  | XC potential correction       :          70.45732736 Ha        1917.24142565 eV
  | Free-atom electrostatic energy:        -353.71021703 Ha       -9624.94471728 eV
  | Hartree energy correction     :          -0.93850282 Ha         -25.53796117 eV
  | Entropy correction            :          -0.00103668 Ha          -0.02820948 eV
  | ---------------------------
  | Total energy                  :        -799.89322436 Ha      -21766.20208692 eV
  | Total energy, T -> 0          :        -799.89426104 Ha      -21766.23029640 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :        -799.89529772 Ha      -21766.25850588 eV

  Derived energy quantities:
  | Kinetic energy                :         800.14150179 Ha       21772.95805972 eV
  | Electrostatic energy          :       -1548.51711215 Ha      -42137.29454361 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00110569 Ha          -0.03008739 eV
  | Sum of eigenvalues per atom                           :       -6315.54761554 eV
  | Total energy (T->0) per atom                          :      -10883.11514820 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -10883.12925294 eV
  Evaluating new KS density.
  Integration grid: deviation in total charge (<rho> - N_e) =  -7.105427E-14

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.2426E-02
  | Change of unmixed KS density  :  0.2769E-03
  | Change of sum of eigenvalues  :  0.6242E+00 eV
  | Change of total energy        :  0.9679E-05 eV


------------------------------------------------------------
  End self-consistency iteration #     9       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.052 s           0.016 s
  | Charge density update                       :        0.001 s           0.001 s
  | Density mixing                              :        0.039 s           0.002 s
  | Hartree multipole update                    :        0.001 s           0.002 s
  | Hartree multipole summation                 :        0.002 s           0.002 s
  | Integration                                 :        0.002 s           0.002 s
  | Solution of K.-S. eqns.                     :        0.007 s           0.007 s
  | Total energy evaluation                     :        0.000 s           0.000 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        0.040 MB (on task 119)
  |   Maximum:        0.040 MB (on task   0)
  |   Average:        0.040 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:        0.540 MB (on task  68 after allocating wave)
  |   Maximum:        0.626 MB (on task   5 after allocating wave)
  |   Average:        0.618 MB
  | Largest tracked array allocation so far:
  |   Minimum:        0.148 MB (gradient_basis_wave_store on task  68)
  |   Maximum:        0.173 MB (gradient_basis_wave_store on task   5)
  |   Average:        0.170 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #   10

  Date     :  20220914, Time     :  152352.599
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      32.0000000000
  | Integrated number of electrons on 3D grid     :      32.0000000000
  | Charge integration error                      :      -0.0000000000
  | Normalization factor for density and gradient :       1.0000000000

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =  -0.414266E-14
  | Sum of charges compensated after spline to logarithmic grids =   0.168326E-06
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =  -0.410944E-14
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        0.997 s, elapsed        1.075 s
  | RMS charge density error from multipole expansion :   0.179208E-02

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work        0.448 s, elapsed        0.749 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the ELPA eigensolver.
  Starting ELPA eigensolver
  Finished transformation to standard eigenproblem
  | Time :     0.000 s
  Finished solving standard eigenproblem
  | Time :     0.005 s
  Finished back-transformation of eigenvectors
  | Time :     0.001 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -5.47434189 eV
  Highest occupied state (VBM) at     -5.47434189 eV
  | Occupation number:      1.00000000

  Lowest unoccupied state (CBM) at    -5.47434189 eV
  | Occupation number:      1.00000000

  Overall HOMO-LUMO gap:      0.00000000 eV.
  This system has fractional occupation numbers. Thus, it is a degenerate system
  within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.
  This may not be harmful. However, for some systems (free atoms), a different, non-degenerate
  ground state might exist by using a smaller broadening (see keyword occupation_type).

  Total energy components:
  | Sum of eigenvalues            :        -464.18791628 Ha      -12631.19587007 eV
  | XC energy correction          :         -51.51604818 Ha       -1401.82299505 eV
  | XC potential correction       :          70.45528755 Ha        1917.18591965 eV
  | Free-atom electrostatic energy:        -353.71021703 Ha       -9624.94471728 eV
  | Hartree energy correction     :          -0.93432994 Ha         -25.42441113 eV
  | Entropy correction            :          -0.00103668 Ha          -0.02820948 eV
  | ---------------------------
  | Total energy                  :        -799.89322388 Ha      -21766.20207388 eV
  | Total energy, T -> 0          :        -799.89426056 Ha      -21766.23028336 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :        -799.89529724 Ha      -21766.25849284 eV

  Derived energy quantities:
  | Kinetic energy                :         800.11177822 Ha       21772.14924014 eV
  | Electrostatic energy          :       -1548.48895391 Ha      -42136.52831897 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00109989 Ha          -0.02992961 eV
  | Sum of eigenvalues per atom                           :       -6315.59793503 eV
  | Total energy (T->0) per atom                          :      -10883.11514168 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -10883.12924642 eV
  Evaluating new KS density.
  Integration grid: deviation in total charge (<rho> - N_e) =   1.421085E-14

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.1406E-02
  | Change of unmixed KS density  :  0.4295E-03
  | Change of sum of eigenvalues  : -0.1006E+00 eV
  | Change of total energy        :  0.1304E-04 eV


------------------------------------------------------------
  End self-consistency iteration #    10       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.052 s           0.014 s
  | Charge density update                       :        0.000 s           0.001 s
  | Density mixing                              :        0.039 s           0.001 s
  | Hartree multipole update                    :        0.001 s           0.001 s
  | Hartree multipole summation                 :        0.002 s           0.003 s
  | Integration                                 :        0.002 s           0.001 s
  | Solution of K.-S. eqns.                     :        0.006 s           0.007 s
  | Total energy evaluation                     :        0.000 s           0.000 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        0.040 MB (on task 119)
  |   Maximum:        0.040 MB (on task   0)
  |   Average:        0.040 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:        0.540 MB (on task  68 after allocating wave)
  |   Maximum:        0.626 MB (on task   5 after allocating wave)
  |   Average:        0.618 MB
  | Largest tracked array allocation so far:
  |   Minimum:        0.148 MB (gradient_basis_wave_store on task  68)
  |   Maximum:        0.173 MB (gradient_basis_wave_store on task   5)
  |   Average:        0.170 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #   11

  Date     :  20220914, Time     :  152352.648
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      32.0000000000
  | Integrated number of electrons on 3D grid     :      32.0000000000
  | Charge integration error                      :      -0.0000000000
  | Normalization factor for density and gradient :       1.0000000000

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =  -0.595896E-14
  | Sum of charges compensated after spline to logarithmic grids =   0.168595E-06
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =  -0.600606E-14
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        1.004 s, elapsed        1.126 s
  | RMS charge density error from multipole expansion :   0.179540E-02

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work        0.451 s, elapsed        0.753 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the ELPA eigensolver.
  Starting ELPA eigensolver
  Finished transformation to standard eigenproblem
  | Time :     0.001 s
  Finished solving standard eigenproblem
  | Time :     0.005 s
  Finished back-transformation of eigenvectors
  | Time :     0.000 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -5.47373720 eV
  Highest occupied state (VBM) at     -5.47373720 eV
  | Occupation number:      1.00000001

  Lowest unoccupied state (CBM) at    -5.47373720 eV
  | Occupation number:      0.99999999

  Overall HOMO-LUMO gap:      0.00000000 eV.
  This system has fractional occupation numbers. Thus, it is a degenerate system
  within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.
  This may not be harmful. However, for some systems (free atoms), a different, non-degenerate
  ground state might exist by using a smaller broadening (see keyword occupation_type).

  Total energy components:
  | Sum of eigenvalues            :        -464.18728774 Ha      -12631.17876665 eV
  | XC energy correction          :         -51.51606074 Ha       -1401.82333685 eV
  | XC potential correction       :          70.45530689 Ha        1917.18644578 eV
  | Free-atom electrostatic energy:        -353.71021703 Ha       -9624.94471728 eV
  | Hartree energy correction     :          -0.93496526 Ha         -25.44169911 eV
  | Entropy correction            :          -0.00103668 Ha          -0.02820948 eV
  | ---------------------------
  | Total energy                  :        -799.89322389 Ha      -21766.20207411 eV
  | Total energy, T -> 0          :        -799.89426057 Ha      -21766.23028359 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :        -799.89529724 Ha      -21766.25849306 eV

  Derived energy quantities:
  | Kinetic energy                :         800.11089639 Ha       21772.12524425 eV
  | Electrostatic energy          :       -1548.48805953 Ha      -42136.50398150 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00110234 Ha          -0.02999615 eV
  | Sum of eigenvalues per atom                           :       -6315.58938332 eV
  | Total energy (T->0) per atom                          :      -10883.11514179 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -10883.12924653 eV
  Evaluating new KS density.
  Integration grid: deviation in total charge (<rho> - N_e) =  -3.197442E-14

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.9015E-04
  | Change of unmixed KS density  :  0.1797E-03
  | Change of sum of eigenvalues  :  0.1710E-01 eV
  | Change of total energy        : -0.2265E-06 eV


------------------------------------------------------------
  End self-consistency iteration #    11       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.053 s           0.020 s
  | Charge density update                       :        0.000 s           0.001 s
  | Density mixing                              :        0.040 s           0.006 s
  | Hartree multipole update                    :        0.001 s           0.002 s
  | Hartree multipole summation                 :        0.003 s           0.002 s
  | Integration                                 :        0.002 s           0.002 s
  | Solution of K.-S. eqns.                     :        0.007 s           0.007 s
  | Total energy evaluation                     :        0.000 s           0.000 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        0.040 MB (on task 119)
  |   Maximum:        0.040 MB (on task   0)
  |   Average:        0.040 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:        0.540 MB (on task  68 after allocating wave)
  |   Maximum:        0.626 MB (on task   5 after allocating wave)
  |   Average:        0.618 MB
  | Largest tracked array allocation so far:
  |   Minimum:        0.148 MB (gradient_basis_wave_store on task  68)
  |   Maximum:        0.173 MB (gradient_basis_wave_store on task   5)
  |   Average:        0.170 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #   12

  Date     :  20220914, Time     :  152352.706
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      32.0000000000
  | Integrated number of electrons on 3D grid     :      32.0000000000
  | Charge integration error                      :      -0.0000000000
  | Normalization factor for density and gradient :       1.0000000000

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =  -0.352554E-14
  | Sum of charges compensated after spline to logarithmic grids =   0.168558E-06
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =  -0.348347E-14
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        0.993 s, elapsed        1.151 s
  | RMS charge density error from multipole expansion :   0.179543E-02

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work        0.446 s, elapsed        0.750 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the ELPA eigensolver.
  Starting ELPA eigensolver
  Finished transformation to standard eigenproblem
  | Time :     0.001 s
  Finished solving standard eigenproblem
  | Time :     0.005 s
  Finished back-transformation of eigenvectors
  | Time :     0.000 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -5.47379376 eV
  Highest occupied state (VBM) at     -5.47379376 eV
  | Occupation number:      1.00000004

  Lowest unoccupied state (CBM) at    -5.47379376 eV
  | Occupation number:      0.99999996

  Overall HOMO-LUMO gap:      0.00000000 eV.
  This system has fractional occupation numbers. Thus, it is a degenerate system
  within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.
  This may not be harmful. However, for some systems (free atoms), a different, non-degenerate
  ground state might exist by using a smaller broadening (see keyword occupation_type).

  Total energy components:
  | Sum of eigenvalues            :        -464.18734722 Ha      -12631.18038513 eV
  | XC energy correction          :         -51.51605501 Ha       -1401.82318079 eV
  | XC potential correction       :          70.45530206 Ha        1917.18631441 eV
  | Free-atom electrostatic energy:        -353.71021703 Ha       -9624.94471728 eV
  | Hartree energy correction     :          -0.93490668 Ha         -25.44010525 eV
  | Entropy correction            :          -0.00103668 Ha          -0.02820948 eV
  | ---------------------------
  | Total energy                  :        -799.89322388 Ha      -21766.20207405 eV
  | Total energy, T -> 0          :        -799.89426056 Ha      -21766.23028353 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :        -799.89529724 Ha      -21766.25849301 eV

  Derived energy quantities:
  | Kinetic energy                :         800.11088598 Ha       21772.12496106 eV
  | Electrostatic energy          :       -1548.48805486 Ha      -42136.50385432 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00110242 Ha          -0.02999841 eV
  | Sum of eigenvalues per atom                           :       -6315.59019256 eV
  | Total energy (T->0) per atom                          :      -10883.11514176 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -10883.12924650 eV
  Evaluating new KS density.
  Integration grid: deviation in total charge (<rho> - N_e) =   1.065814E-13

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.1577E-04
  | Change of unmixed KS density  :  0.2523E-04
  | Change of sum of eigenvalues  : -0.1618E-02 eV
  | Change of total energy        :  0.5899E-07 eV


------------------------------------------------------------
  End self-consistency iteration #    12       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.055 s           0.019 s
  | Charge density update                       :        0.001 s           0.001 s
  | Density mixing                              :        0.042 s           0.006 s
  | Hartree multipole update                    :        0.001 s           0.001 s
  | Hartree multipole summation                 :        0.003 s           0.002 s
  | Integration                                 :        0.002 s           0.002 s
  | Solution of K.-S. eqns.                     :        0.006 s           0.007 s
  | Total energy evaluation                     :        0.000 s           0.000 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        0.040 MB (on task 119)
  |   Maximum:        0.040 MB (on task   0)
  |   Average:        0.040 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:        0.540 MB (on task  68 after allocating wave)
  |   Maximum:        0.626 MB (on task   5 after allocating wave)
  |   Average:        0.618 MB
  | Largest tracked array allocation so far:
  |   Minimum:        0.148 MB (gradient_basis_wave_store on task  68)
  |   Maximum:        0.173 MB (gradient_basis_wave_store on task   5)
  |   Average:        0.170 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #   13

  Date     :  20220914, Time     :  152352.763
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      32.0000000000
  | Integrated number of electrons on 3D grid     :      32.0000000000
  | Charge integration error                      :       0.0000000000
  | Normalization factor for density and gradient :       1.0000000000

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =   0.848354E-15
  | Sum of charges compensated after spline to logarithmic grids =   0.168560E-06
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =   0.895886E-15
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        0.992 s, elapsed        1.107 s
  | RMS charge density error from multipole expansion :   0.179546E-02

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work        0.453 s, elapsed        0.733 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the ELPA eigensolver.
  Starting ELPA eigensolver
  Finished transformation to standard eigenproblem
  | Time :     0.001 s
  Finished solving standard eigenproblem
  | Time :     0.005 s
  Finished back-transformation of eigenvectors
  | Time :     0.000 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -5.47378815 eV
  Highest occupied state (VBM) at     -5.47378816 eV
  | Occupation number:      1.00000003

  Lowest unoccupied state (CBM) at    -5.47378815 eV
  | Occupation number:      0.99999997

  Overall HOMO-LUMO gap:      0.00000000 eV.
  This system has fractional occupation numbers. Thus, it is a degenerate system
  within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.
  This may not be harmful. However, for some systems (free atoms), a different, non-degenerate
  ground state might exist by using a smaller broadening (see keyword occupation_type).

  Total energy components:
  | Sum of eigenvalues            :        -464.18733449 Ha      -12631.18003892 eV
  | XC energy correction          :         -51.51605685 Ha       -1401.82323073 eV
  | XC potential correction       :          70.45530434 Ha        1917.18637649 eV
  | Free-atom electrostatic energy:        -353.71021703 Ha       -9624.94471728 eV
  | Hartree energy correction     :          -0.93491985 Ha         -25.44046359 eV
  | Entropy correction            :          -0.00103668 Ha          -0.02820948 eV
  | ---------------------------
  | Total energy                  :        -799.89322388 Ha      -21766.20207405 eV
  | Total energy, T -> 0          :        -799.89426056 Ha      -21766.23028353 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :        -799.89529724 Ha      -21766.25849301 eV

  Derived energy quantities:
  | Kinetic energy                :         800.11090526 Ha       21772.12548554 eV
  | Electrostatic energy          :       -1548.48807229 Ha      -42136.50432885 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00110243 Ha          -0.02999875 eV
  | Sum of eigenvalues per atom                           :       -6315.59001946 eV
  | Total energy (T->0) per atom                          :      -10883.11514176 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -10883.12924650 eV
  Evaluating new KS density.
  Integration grid: deviation in total charge (<rho> - N_e) =  -1.421085E-14

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.2424E-05
  | Change of unmixed KS density  :  0.3121E-05
  | Change of sum of eigenvalues  :  0.3462E-03 eV
  | Change of total energy        : -0.1182E-08 eV


------------------------------------------------------------
  End self-consistency iteration #    13       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.053 s           0.016 s
  | Charge density update                       :        0.000 s           0.000 s
  | Density mixing                              :        0.040 s           0.003 s
  | Hartree multipole update                    :        0.001 s           0.002 s
  | Hartree multipole summation                 :        0.002 s           0.002 s
  | Integration                                 :        0.002 s           0.002 s
  | Solution of K.-S. eqns.                     :        0.006 s           0.006 s
  | Total energy evaluation                     :        0.000 s           0.000 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        0.040 MB (on task 119)
  |   Maximum:        0.040 MB (on task   0)
  |   Average:        0.040 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:        0.540 MB (on task  68 after allocating wave)
  |   Maximum:        0.626 MB (on task   5 after allocating wave)
  |   Average:        0.618 MB
  | Largest tracked array allocation so far:
  |   Minimum:        0.148 MB (gradient_basis_wave_store on task  68)
  |   Maximum:        0.173 MB (gradient_basis_wave_store on task   5)
  |   Average:        0.170 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #   14

  Date     :  20220914, Time     :  152352.819
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      32.0000000000
  | Integrated number of electrons on 3D grid     :      32.0000000000
  | Charge integration error                      :      -0.0000000000
  | Normalization factor for density and gradient :       1.0000000000

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =   0.125409E-14
  | Sum of charges compensated after spline to logarithmic grids =   0.168557E-06
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =   0.129652E-14
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        1.006 s, elapsed        1.165 s
  | RMS charge density error from multipole expansion :   0.179543E-02

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work        0.449 s, elapsed        0.770 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the ELPA eigensolver.
  Starting ELPA eigensolver
  Finished transformation to standard eigenproblem
  | Time :     0.001 s
  Finished solving standard eigenproblem
  | Time :     0.005 s
  Finished back-transformation of eigenvectors
  | Time :     0.000 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -5.47378782 eV
  Highest occupied state (VBM) at     -5.47378783 eV
  | Occupation number:      1.00000025

  Lowest unoccupied state (CBM) at    -5.47378780 eV
  | Occupation number:      0.99999975

  Overall HOMO-LUMO gap:      0.00000002 eV.
  This system has fractional occupation numbers. Thus, it is a degenerate system
  within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.
  This may not be harmful. However, for some systems (free atoms), a different, non-degenerate
  ground state might exist by using a smaller broadening (see keyword occupation_type).

  Total energy components:
  | Sum of eigenvalues            :        -464.18732090 Ha      -12631.17966911 eV
  | XC energy correction          :         -51.51605807 Ha       -1401.82326405 eV
  | XC potential correction       :          70.45530636 Ha        1917.18643151 eV
  | Free-atom electrostatic energy:        -353.71021703 Ha       -9624.94471728 eV
  | Hartree energy correction     :          -0.93493424 Ha         -25.44085512 eV
  | Entropy correction            :          -0.00103668 Ha          -0.02820948 eV
  | ---------------------------
  | Total energy                  :        -799.89322388 Ha      -21766.20207405 eV
  | Total energy, T -> 0          :        -799.89426056 Ha      -21766.23028353 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :        -799.89529724 Ha      -21766.25849301 eV

  Derived energy quantities:
  | Kinetic energy                :         800.11093409 Ha       21772.12627020 eV
  | Electrostatic energy          :       -1548.48809991 Ha      -42136.50508020 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00110244 Ha          -0.02999879 eV
  | Sum of eigenvalues per atom                           :       -6315.58983455 eV
  | Total energy (T->0) per atom                          :      -10883.11514176 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -10883.12924650 eV
  Evaluating new KS density.
  Integration grid: deviation in total charge (<rho> - N_e) =   9.237056E-14

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.2217E-05
  | Change of unmixed KS density  :  0.3632E-06
  | Change of sum of eigenvalues  :  0.3698E-03 eV
  | Change of total energy        :  0.1145E-08 eV


------------------------------------------------------------
  End self-consistency iteration #    14       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.053 s           0.016 s
  | Charge density update                       :        0.001 s           0.001 s
  | Density mixing                              :        0.040 s           0.002 s
  | Hartree multipole update                    :        0.001 s           0.002 s
  | Hartree multipole summation                 :        0.003 s           0.002 s
  | Integration                                 :        0.002 s           0.002 s
  | Solution of K.-S. eqns.                     :        0.006 s           0.007 s
  | Total energy evaluation                     :        0.000 s           0.000 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        0.040 MB (on task 119)
  |   Maximum:        0.040 MB (on task   0)
  |   Average:        0.040 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:        0.540 MB (on task  68 after allocating wave)
  |   Maximum:        0.626 MB (on task   5 after allocating wave)
  |   Average:        0.618 MB
  | Largest tracked array allocation so far:
  |   Minimum:        0.148 MB (gradient_basis_wave_store on task  68)
  |   Maximum:        0.173 MB (gradient_basis_wave_store on task   5)
  |   Average:        0.170 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #   15

  Date     :  20220914, Time     :  152352.871
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      32.0000000000
  | Integrated number of electrons on 3D grid     :      32.0000000000
  | Charge integration error                      :      -0.0000000000
  | Normalization factor for density and gradient :       1.0000000000

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =  -0.636557E-14
  | Sum of charges compensated after spline to logarithmic grids =   0.168557E-06
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =  -0.634799E-14
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        0.989 s, elapsed        1.105 s
  | RMS charge density error from multipole expansion :   0.179543E-02

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work        0.449 s, elapsed        0.758 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the ELPA eigensolver.
  Starting ELPA eigensolver
  Finished transformation to standard eigenproblem
  | Time :     0.001 s
  Finished solving standard eigenproblem
  | Time :     0.005 s
  Finished back-transformation of eigenvectors
  | Time :     0.000 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -5.47378760 eV
  Highest occupied state (VBM) at     -5.47378761 eV
  | Occupation number:      1.00000021

  Lowest unoccupied state (CBM) at    -5.47378759 eV
  | Occupation number:      0.99999979

  Overall HOMO-LUMO gap:      0.00000002 eV.
  This system has fractional occupation numbers. Thus, it is a degenerate system
  within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.
  This may not be harmful. However, for some systems (free atoms), a different, non-degenerate
  ground state might exist by using a smaller broadening (see keyword occupation_type).

  Total energy components:
  | Sum of eigenvalues            :        -464.18732017 Ha      -12631.17964928 eV
  | XC energy correction          :         -51.51605809 Ha       -1401.82326459 eV
  | XC potential correction       :          70.45530641 Ha        1917.18643271 eV
  | Free-atom electrostatic energy:        -353.71021703 Ha       -9624.94471728 eV
  | Hartree energy correction     :          -0.93493499 Ha         -25.44087561 eV
  | Entropy correction            :          -0.00103668 Ha          -0.02820948 eV
  | ---------------------------
  | Total energy                  :        -799.89322388 Ha      -21766.20207405 eV
  | Total energy, T -> 0          :        -799.89426056 Ha      -21766.23028353 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :        -799.89529724 Ha      -21766.25849301 eV

  Derived energy quantities:
  | Kinetic energy                :         800.11093440 Ha       21772.12627848 eV
  | Electrostatic energy          :       -1548.48810019 Ha      -42136.50508794 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00110243 Ha          -0.02999878 eV
  | Sum of eigenvalues per atom                           :       -6315.58982464 eV
  | Total energy (T->0) per atom                          :      -10883.11514176 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -10883.12924650 eV
  Evaluating new KS density.
  Integration grid: deviation in total charge (<rho> - N_e) =   0.000000E+00

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.1011E-06
  | Change of unmixed KS density  :  0.3717E-06
  | Change of sum of eigenvalues  :  0.1983E-04 eV
  | Change of total energy        :  0.1671E-09 eV


------------------------------------------------------------
  End self-consistency iteration #    15       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.051 s           0.018 s
  | Charge density update                       :        0.000 s           0.000 s
  | Density mixing                              :        0.038 s           0.005 s
  | Hartree multipole update                    :        0.001 s           0.001 s
  | Hartree multipole summation                 :        0.002 s           0.002 s
  | Integration                                 :        0.002 s           0.002 s
  | Solution of K.-S. eqns.                     :        0.006 s           0.007 s
  | Total energy evaluation                     :        0.000 s           0.000 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        0.040 MB (on task 119)
  |   Maximum:        0.040 MB (on task   0)
  |   Average:        0.040 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:        0.540 MB (on task  68 after allocating wave)
  |   Maximum:        0.626 MB (on task   5 after allocating wave)
  |   Average:        0.618 MB
  | Largest tracked array allocation so far:
  |   Minimum:        0.148 MB (gradient_basis_wave_store on task  68)
  |   Maximum:        0.173 MB (gradient_basis_wave_store on task   5)
  |   Average:        0.170 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

------------------------------------------------------------
          Begin self-consistency iteration #   16

  Date     :  20220914, Time     :  152352.924
------------------------------------------------------------
  Pulay mixing of updated and previous charge densities.
  Renormalizing the density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      32.0000000000
  | Integrated number of electrons on 3D grid     :      32.0000000000
  | Charge integration error                      :       0.0000000000
  | Normalization factor for density and gradient :       1.0000000000

  Evaluating partitioned Hartree potential by multipole expansion.
  | Original multipole sum: apparent total charge =  -0.607717E-14
  | Sum of charges compensated after spline to logarithmic grids =   0.168557E-06
  | Analytical far-field extrapolation by fixed multipoles:
  | Hartree multipole sum: apparent total charge =  -0.609866E-14
  Summing up the Hartree potential.
  Time summed over all CPUs for potential: real work        0.992 s, elapsed        1.086 s
  | RMS charge density error from multipole expansion :   0.179543E-02

  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work        0.449 s, elapsed        0.750 s => Consider using load balancing!

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the ELPA eigensolver.
  Starting ELPA eigensolver
  Finished transformation to standard eigenproblem
  | Time :     0.001 s
  Finished solving standard eigenproblem
  | Time :     0.005 s
  Finished back-transformation of eigenvectors
  | Time :     0.000 s

  Obtaining occupation numbers and electronic chemical potential using ELSI.
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  | Chemical potential (Fermi level):    -5.47378759 eV
  Highest occupied state (VBM) at     -5.47378759 eV
  | Occupation number:      1.00000005

  Lowest unoccupied state (CBM) at    -5.47378759 eV
  | Occupation number:      0.99999995

  Overall HOMO-LUMO gap:      0.00000000 eV.
  This system has fractional occupation numbers. Thus, it is a degenerate system
  within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.
  This may not be harmful. However, for some systems (free atoms), a different, non-degenerate
  ground state might exist by using a smaller broadening (see keyword occupation_type).

  Total energy components:
  | Sum of eigenvalues            :        -464.18732017 Ha      -12631.17964929 eV
  | XC energy correction          :         -51.51605809 Ha       -1401.82326465 eV
  | XC potential correction       :          70.45530641 Ha        1917.18643276 eV
  | Free-atom electrostatic energy:        -353.71021703 Ha       -9624.94471728 eV
  | Hartree energy correction     :          -0.93493499 Ha         -25.44087558 eV
  | Entropy correction            :          -0.00103668 Ha          -0.02820948 eV
  | ---------------------------
  | Total energy                  :        -799.89322388 Ha      -21766.20207405 eV
  | Total energy, T -> 0          :        -799.89426056 Ha      -21766.23028353 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :        -799.89529724 Ha      -21766.25849301 eV

  Derived energy quantities:
  | Kinetic energy                :         800.11093439 Ha       21772.12627838 eV
  | Electrostatic energy          :       -1548.48810018 Ha      -42136.50508778 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00110243 Ha          -0.02999878 eV
  | Sum of eigenvalues per atom                           :       -6315.58982465 eV
  | Total energy (T->0) per atom                          :      -10883.11514176 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :      -10883.12924650 eV

  Self-consistency convergence accuracy:
  | Change of charge density      :  0.6902E-07
  | Change of unmixed KS density  :  0.2266E-07
  | Change of sum of eigenvalues  : -0.1535E-07 eV
  | Change of total energy        : -0.3403E-10 eV

  Writing Kohn-Sham eigenvalues.

  State    Occupation    Eigenvalue [Ha]    Eigenvalue [eV]
      1       2.00000         -89.190902        -2427.00793
      2       2.00000         -89.190901        -2427.00789
      3       2.00000          -7.963515         -216.69827
      4       2.00000          -7.963446         -216.69639
      5       2.00000          -5.861067         -159.48775
      6       2.00000          -5.860296         -159.46677
      7       2.00000          -5.857389         -159.38765
      8       2.00000          -5.857389         -159.38765
      9       2.00000          -5.857337         -159.38624
     10       2.00000          -5.857337         -159.38624
     11       2.00000          -0.798719          -21.73424
     12       2.00000          -0.586089          -15.94829
     13       2.00000          -0.373545          -10.16469
     14       2.00000          -0.337286           -9.17801
     15       2.00000          -0.337286           -9.17801
     16       1.00000          -0.201158           -5.47379
     17       1.00000          -0.201158           -5.47379
     18       0.00000          -0.028966           -0.78822
     19       0.00000           0.105034            2.85812
     20       0.00000           0.136790            3.72223
     21       0.00000           0.136941            3.72635
     22       0.00000           0.148312            4.03579

  Highest occupied state (VBM) at     -5.47378759 eV
  | Occupation number:      1.00000005

  Lowest unoccupied state (CBM) at    -5.47378759 eV
  | Occupation number:      0.99999995

  Overall HOMO-LUMO gap:      0.00000000 eV.
  This system has fractional occupation numbers. Thus, it is a degenerate system
  within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.
  This may not be harmful. However, for some systems (free atoms), a different, non-degenerate
  ground state might exist by using a smaller broadening (see keyword occupation_type).

  | Chemical Potential                          :    -5.47378759 eV
  | Note that, for insulating systems, the printed 'chemical potential' value is not uniquely defined.
  | It can be anywhere in the energy gap, as long as it correctly separates occupied and unoccupied states.
  | In systems with a gap, the physically relevant chemical potential is the VBM or HOMO.

  Self-consistency cycle converged.


------------------------------------------------------------
  End self-consistency iteration #    16       :  max(cpu_time)    wall_clock(cpu1)
  | Time for this iteration                     :        0.050 s           0.017 s
  | Charge density update                       :        0.000 s           0.000 s
  | Density mixing                              :        0.037 s           0.003 s
  | Hartree multipole update                    :        0.001 s           0.002 s
  | Hartree multipole summation                 :        0.002 s           0.002 s
  | Integration                                 :        0.002 s           0.002 s
  | Solution of K.-S. eqns.                     :        0.007 s           0.007 s
  | Total energy evaluation                     :        0.000 s           0.000 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        0.040 MB (on task 119)
  |   Maximum:        0.040 MB (on task   0)
  |   Average:        0.040 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:        0.540 MB (on task  68 after allocating wave)
  |   Maximum:        0.626 MB (on task   5 after allocating wave)
  |   Average:        0.618 MB
  | Largest tracked array allocation so far:
  |   Minimum:        0.148 MB (gradient_basis_wave_store on task  68)
  |   Maximum:        0.173 MB (gradient_basis_wave_store on task   5)
  |   Average:        0.170 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------

  Energy and forces in a compact form:
  | Total energy uncorrected      :         -0.217662020740466E+05 eV
  | Total energy corrected        :         -0.217662302835262E+05 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :         -0.217662584930058E+05 eV

  ------------------------------------ 
  Start decomposition of the XC Energy 
  ------------------------------------ 
  X and C from original XC functional choice 
  Hartree-Fock Energy :          0.000000000 Ha              0.000000000 eV
  X Energy            :        -50.295691681 Ha          -1368.615405018 eV
  C Energy            :         -1.220366411 Ha            -33.207859629 eV
  XC Energy w/o HF    :        -51.516058091 Ha          -1401.823264647 eV
  Total XC Energy     :        -51.516058091 Ha          -1401.823264647 eV
  ------------------------------------ 
  LDA X and C from self-consistent density 
  X Energy LDA        :        -46.240765939 Ha          -1258.275261527 eV
  C Energy LDA        :         -2.479433210 Ha            -67.468810429 eV
  ------------------------------------ 
  End decomposition of the XC Energy 
  ------------------------------------ 

------------------------------------------------------------

------------------------------------------------------------------------------
  Final output of selected total energy values:

  The following output summarizes some interesting total energy values
  at the end of a run (AFTER all relaxation, molecular dynamics, etc.).

  | Total energy of the DFT / Hartree-Fock s.c.f. calculation      :         -21766.202074047 eV
  | Final zero-broadening corrected energy (caution - metals only) :         -21766.230283526 eV
  | For reference only, the value of 1 Hartree used in FHI-aims is :             27.211384500 eV

  Before relying on these values, please be sure to understand exactly which
  total energy value is referred to by a given number. Different objects may
  all carry the same name 'total energy'. Definitions:

  Total energy of the DFT / Hartree-Fock s.c.f. calculation:
  | Note that this energy does not include ANY quantities calculated after the
  | s.c.f. cycle, in particular not ANY RPA, MP2, etc. many-body perturbation terms.

  Final zero-broadening corrected energy:
  | For metallic systems only, a broadening of the occupation numbers at the Fermi
  | level can be extrapolated back to zero broadening by an electron-gas inspired
  | formula. For all systems that are not real metals, this value can be
  | meaningless and should be avoided.

------------------------------------------------------------------------------
  Methods described in the following list of references were used in this FHI-aims run.
  If you publish the results, please make sure to cite these reference if they apply.
  FHI-aims is an academic code, and for our developers (often, Ph.D. students
  and postdocs), scientific credit in the community is essential.
  Thank you for helping us!

  For any use of FHI-aims, please cite:

    Volker Blum, Ralf Gehrke, Felix Hanke, Paula Havu, Ville Havu,
    Xinguo Ren, Karsten Reuter, and Matthias Scheffler
    'Ab initio molecular simulations with numeric atom-centered orbitals'
    Computer Physics Communications 180, 2175-2196 (2009)
    http://doi.org/10.1016/j.cpc.2009.06.022


  For the 'Strongly Constrained and Appropriately Normed' (SCAN)
  meta-GGA functional, please cite:

    Jianwei Sun and Adrienn Ruzsinszky and John P. Perdew,
    'Strongly Constrained and Appropriately Normed Semilocal Density Functional'
     Physical Review Letters 115, 036402 (2015).


  The ELSI infrastructure was used in your run to solve the Kohn-Sham electronic structure.
  Please check out http://elsi-interchange.org to learn more.
  If scalability is important for your project, please acknowledge ELSI by citing:

    V. W-z. Yu, F. Corsetti, A. Garcia, W. P. Huhn, M. Jacquelin, W. Jia,
    B. Lange, L. Lin, J. Lu, W. Mi, A. Seifitokaldani, A. Vazquez-Mayagoitia,
    C. Yang, H. Yang, and V. Blum
    'ELSI: A unified software interface for Kohn-Sham electronic structure solvers'
    Computer Physics Communications 222, 267-285 (2018).
    http://doi.org/10.1016/j.cpc.2017.09.007


  For the real-space grid partitioning and parallelization used in this calculation, please cite:

    Ville Havu, Volker Blum, Paula Havu, and Matthias Scheffler,
    'Efficient O(N) integration for all-electron electronic structure calculation'
    'using numerically tabulated basis functions'
    Journal of Computational Physics 228, 8367-8379 (2009).
    http://doi.org/10.1016/j.jcp.2009.08.008

  Of course, there are many other important community references, e.g., those cited in the
  above references. Our list is limited to references that describe implementations in the
  FHI-aims code. The reason is purely practical (length of this list) - please credit others as well.

------------------------------------------------------------
          Leaving FHI-aims.
          Date     :  20220914, Time     :  152352.983

          Computational steps:
          | Number of self-consistency cycles          :           16
          | Number of SCF (re)initializations          :            1

          Detailed time accounting                     :  max(cpu_time)    wall_clock(cpu1)
          | Total time                                  :        2.751 s           3.167 s
          | Preparation time                            :        0.211 s           0.461 s
          | Boundary condition initalization            :        0.000 s           0.001 s
          | Grid partitioning                           :        0.016 s           0.017 s
          | Preloading free-atom quantities on grid     :        0.006 s           0.005 s
          | Free-atom superposition energy              :        0.001 s           0.000 s
          | Total time for integrations                 :        0.037 s           0.038 s
          | Total time for solution of K.-S. equations  :        1.069 s           1.096 s
          | Total time for density update               :        0.011 s           0.012 s
          | Total time for mixing                       :        0.583 s           0.045 s
          | Total time for Hartree multipole update     :        0.022 s           0.027 s
          | Total time for Hartree multipole sum        :        0.042 s           0.038 s
          | Total time for total energy evaluation      :        0.004 s           0.002 s
          | Total time for scaled ZORA corrections      :        0.000 s           0.000 s

          Partial memory accounting:
          | Residual value for overall tracked memory usage across tasks:     0.000000 MB (should be 0.000000 MB)
          | Peak values for overall tracked memory usage:
          |   Minimum:        0.540 MB (on task  68 after allocating wave)
          |   Maximum:        0.626 MB (on task   5 after allocating wave)
          |   Average:        0.618 MB
          | Largest tracked array allocation:
          |   Minimum:        0.148 MB (gradient_basis_wave_store on task  68)
          |   Maximum:        0.173 MB (gradient_basis_wave_store on task   5)
          |   Average:        0.170 MB
          Note:  These values currently only include a subset of arrays which are explicitly tracked.
          The "true" memory usage will be greater.

          Have a nice day.
------------------------------------------------------------
